// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kava/evmutil/v1beta1/tx.proto

package kava.evmutil.v1beta1;

public final class Tx {
  private Tx() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MsgConvertCoinToERC20OrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.MsgConvertCoinToERC20)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Kava bech32 address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The initiator.
     */
    java.lang.String getInitiator();
    /**
     * <pre>
     * Kava bech32 address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for initiator.
     */
    com.google.protobuf.ByteString
        getInitiatorBytes();

    /**
     * <pre>
     * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
     * </pre>
     *
     * <code>string receiver = 2;</code>
     * @return The receiver.
     */
    java.lang.String getReceiver();
    /**
     * <pre>
     * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
     * </pre>
     *
     * <code>string receiver = 2;</code>
     * @return The bytes for receiver.
     */
    com.google.protobuf.ByteString
        getReceiverBytes();

    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     * @return Whether the amount field is set.
     */
    boolean hasAmount();
    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     * @return The amount.
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getAmount();
    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getAmountOrBuilder();
  }
  /**
   * <pre>
   * MsgConvertCoinToERC20 defines a conversion from sdk.Coin to Kava ERC20.
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertCoinToERC20}
   */
  public static final class MsgConvertCoinToERC20 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.MsgConvertCoinToERC20)
      MsgConvertCoinToERC20OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgConvertCoinToERC20.newBuilder() to construct.
    private MsgConvertCoinToERC20(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgConvertCoinToERC20() {
      initiator_ = "";
      receiver_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgConvertCoinToERC20();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgConvertCoinToERC20(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              initiator_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              receiver_ = s;
              break;
            }
            case 26: {
              cosmos.base.v1beta1.CoinOuterClass.Coin.Builder subBuilder = null;
              if (amount_ != null) {
                subBuilder = amount_.toBuilder();
              }
              amount_ = input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(amount_);
                amount_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.class, kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.Builder.class);
    }

    public static final int INITIATOR_FIELD_NUMBER = 1;
    private volatile java.lang.Object initiator_;
    /**
     * <pre>
     * Kava bech32 address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The initiator.
     */
    @java.lang.Override
    public java.lang.String getInitiator() {
      java.lang.Object ref = initiator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        initiator_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Kava bech32 address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for initiator.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInitiatorBytes() {
      java.lang.Object ref = initiator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        initiator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECEIVER_FIELD_NUMBER = 2;
    private volatile java.lang.Object receiver_;
    /**
     * <pre>
     * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
     * </pre>
     *
     * <code>string receiver = 2;</code>
     * @return The receiver.
     */
    @java.lang.Override
    public java.lang.String getReceiver() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        receiver_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
     * </pre>
     *
     * <code>string receiver = 2;</code>
     * @return The bytes for receiver.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReceiverBytes() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        receiver_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private cosmos.base.v1beta1.CoinOuterClass.Coin amount_;
    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     * @return Whether the amount field is set.
     */
    @java.lang.Override
    public boolean hasAmount() {
      return amount_ != null;
    }
    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     * @return The amount.
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getAmount() {
      return amount_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : amount_;
    }
    /**
     * <pre>
     * Amount is the sdk.Coin amount to convert.
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getAmountOrBuilder() {
      return getAmount();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getInitiatorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, initiator_);
      }
      if (!getReceiverBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, receiver_);
      }
      if (amount_ != null) {
        output.writeMessage(3, getAmount());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getInitiatorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, initiator_);
      }
      if (!getReceiverBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, receiver_);
      }
      if (amount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAmount());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20)) {
        return super.equals(obj);
      }
      kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 other = (kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20) obj;

      if (!getInitiator()
          .equals(other.getInitiator())) return false;
      if (!getReceiver()
          .equals(other.getReceiver())) return false;
      if (hasAmount() != other.hasAmount()) return false;
      if (hasAmount()) {
        if (!getAmount()
            .equals(other.getAmount())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INITIATOR_FIELD_NUMBER;
      hash = (53 * hash) + getInitiator().hashCode();
      hash = (37 * hash) + RECEIVER_FIELD_NUMBER;
      hash = (53 * hash) + getReceiver().hashCode();
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAmount().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MsgConvertCoinToERC20 defines a conversion from sdk.Coin to Kava ERC20.
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertCoinToERC20}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.MsgConvertCoinToERC20)
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.class, kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.Builder.class);
      }

      // Construct using kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        initiator_ = "";

        receiver_ = "";

        if (amountBuilder_ == null) {
          amount_ = null;
        } else {
          amount_ = null;
          amountBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 getDefaultInstanceForType() {
        return kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.getDefaultInstance();
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 build() {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 buildPartial() {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 result = new kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20(this);
        result.initiator_ = initiator_;
        result.receiver_ = receiver_;
        if (amountBuilder_ == null) {
          result.amount_ = amount_;
        } else {
          result.amount_ = amountBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20) {
          return mergeFrom((kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 other) {
        if (other == kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20.getDefaultInstance()) return this;
        if (!other.getInitiator().isEmpty()) {
          initiator_ = other.initiator_;
          onChanged();
        }
        if (!other.getReceiver().isEmpty()) {
          receiver_ = other.receiver_;
          onChanged();
        }
        if (other.hasAmount()) {
          mergeAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object initiator_ = "";
      /**
       * <pre>
       * Kava bech32 address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The initiator.
       */
      public java.lang.String getInitiator() {
        java.lang.Object ref = initiator_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          initiator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Kava bech32 address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for initiator.
       */
      public com.google.protobuf.ByteString
          getInitiatorBytes() {
        java.lang.Object ref = initiator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          initiator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Kava bech32 address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The initiator to set.
       * @return This builder for chaining.
       */
      public Builder setInitiator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        initiator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kava bech32 address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInitiator() {
        
        initiator_ = getDefaultInstance().getInitiator();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kava bech32 address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for initiator to set.
       * @return This builder for chaining.
       */
      public Builder setInitiatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        initiator_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object receiver_ = "";
      /**
       * <pre>
       * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
       * </pre>
       *
       * <code>string receiver = 2;</code>
       * @return The receiver.
       */
      public java.lang.String getReceiver() {
        java.lang.Object ref = receiver_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          receiver_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
       * </pre>
       *
       * <code>string receiver = 2;</code>
       * @return The bytes for receiver.
       */
      public com.google.protobuf.ByteString
          getReceiverBytes() {
        java.lang.Object ref = receiver_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          receiver_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
       * </pre>
       *
       * <code>string receiver = 2;</code>
       * @param value The receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiver(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        receiver_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
       * </pre>
       *
       * <code>string receiver = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReceiver() {
        
        receiver_ = getDefaultInstance().getReceiver();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address that will receive the converted Kava ERC20 tokens.
       * </pre>
       *
       * <code>string receiver = 2;</code>
       * @param value The bytes for receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiverBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        receiver_ = value;
        onChanged();
        return this;
      }

      private cosmos.base.v1beta1.CoinOuterClass.Coin amount_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> amountBuilder_;
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       * @return Whether the amount field is set.
       */
      public boolean hasAmount() {
        return amountBuilder_ != null || amount_ != null;
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       * @return The amount.
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getAmount() {
        if (amountBuilder_ == null) {
          return amount_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : amount_;
        } else {
          return amountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public Builder setAmount(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (amountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amount_ = value;
          onChanged();
        } else {
          amountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public Builder setAmount(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (amountBuilder_ == null) {
          amount_ = builderForValue.build();
          onChanged();
        } else {
          amountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public Builder mergeAmount(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (amountBuilder_ == null) {
          if (amount_ != null) {
            amount_ =
              cosmos.base.v1beta1.CoinOuterClass.Coin.newBuilder(amount_).mergeFrom(value).buildPartial();
          } else {
            amount_ = value;
          }
          onChanged();
        } else {
          amountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public Builder clearAmount() {
        if (amountBuilder_ == null) {
          amount_ = null;
          onChanged();
        } else {
          amount_ = null;
          amountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getAmountBuilder() {
        
        onChanged();
        return getAmountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getAmountOrBuilder() {
        if (amountBuilder_ != null) {
          return amountBuilder_.getMessageOrBuilder();
        } else {
          return amount_ == null ?
              cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : amount_;
        }
      }
      /**
       * <pre>
       * Amount is the sdk.Coin amount to convert.
       * </pre>
       *
       * <code>.cosmos.base.v1beta1.Coin amount = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getAmountFieldBuilder() {
        if (amountBuilder_ == null) {
          amountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  getAmount(),
                  getParentForChildren(),
                  isClean());
          amount_ = null;
        }
        return amountBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.MsgConvertCoinToERC20)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.MsgConvertCoinToERC20)
    private static final kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20();
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgConvertCoinToERC20>
        PARSER = new com.google.protobuf.AbstractParser<MsgConvertCoinToERC20>() {
      @java.lang.Override
      public MsgConvertCoinToERC20 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgConvertCoinToERC20(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgConvertCoinToERC20> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgConvertCoinToERC20> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgConvertCoinToERC20ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.MsgConvertCoinToERC20Response)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * MsgConvertCoinToERC20Response defines the response value from Msg/ConvertCoinToERC20.
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertCoinToERC20Response}
   */
  public static final class MsgConvertCoinToERC20Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.MsgConvertCoinToERC20Response)
      MsgConvertCoinToERC20ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgConvertCoinToERC20Response.newBuilder() to construct.
    private MsgConvertCoinToERC20Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgConvertCoinToERC20Response() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgConvertCoinToERC20Response();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgConvertCoinToERC20Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.class, kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response)) {
        return super.equals(obj);
      }
      kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response other = (kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MsgConvertCoinToERC20Response defines the response value from Msg/ConvertCoinToERC20.
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertCoinToERC20Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.MsgConvertCoinToERC20Response)
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.class, kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.Builder.class);
      }

      // Construct using kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response getDefaultInstanceForType() {
        return kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.getDefaultInstance();
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response build() {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response buildPartial() {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response result = new kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response) {
          return mergeFrom((kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response other) {
        if (other == kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.MsgConvertCoinToERC20Response)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.MsgConvertCoinToERC20Response)
    private static final kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response();
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgConvertCoinToERC20Response>
        PARSER = new com.google.protobuf.AbstractParser<MsgConvertCoinToERC20Response>() {
      @java.lang.Override
      public MsgConvertCoinToERC20Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgConvertCoinToERC20Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgConvertCoinToERC20Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgConvertCoinToERC20Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kava.evmutil.v1beta1.Tx.MsgConvertCoinToERC20Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgConvertERC20ToCoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.MsgConvertERC20ToCoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * EVM 0x hex address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1;</code>
     * @return The initiator.
     */
    java.lang.String getInitiator();
    /**
     * <pre>
     * EVM 0x hex address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1;</code>
     * @return The bytes for initiator.
     */
    com.google.protobuf.ByteString
        getInitiatorBytes();

    /**
     * <pre>
     * Kava bech32 address that will receive the converted sdk.Coin.
     * </pre>
     *
     * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The receiver.
     */
    java.lang.String getReceiver();
    /**
     * <pre>
     * Kava bech32 address that will receive the converted sdk.Coin.
     * </pre>
     *
     * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for receiver.
     */
    com.google.protobuf.ByteString
        getReceiverBytes();

    /**
     * <pre>
     * EVM 0x hex address of the ERC20 contract.
     * </pre>
     *
     * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
     * @return The kavaErc20Address.
     */
    java.lang.String getKavaErc20Address();
    /**
     * <pre>
     * EVM 0x hex address of the ERC20 contract.
     * </pre>
     *
     * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
     * @return The bytes for kavaErc20Address.
     */
    com.google.protobuf.ByteString
        getKavaErc20AddressBytes();

    /**
     * <pre>
     * ERC20 token amount to convert.
     * </pre>
     *
     * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <pre>
     * ERC20 token amount to convert.
     * </pre>
     *
     * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * MsgConvertERC20ToCoin defines a conversion from Kava ERC20 to sdk.Coin.
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertERC20ToCoin}
   */
  public static final class MsgConvertERC20ToCoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.MsgConvertERC20ToCoin)
      MsgConvertERC20ToCoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgConvertERC20ToCoin.newBuilder() to construct.
    private MsgConvertERC20ToCoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgConvertERC20ToCoin() {
      initiator_ = "";
      receiver_ = "";
      kavaErc20Address_ = "";
      amount_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgConvertERC20ToCoin();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgConvertERC20ToCoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              initiator_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              receiver_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              kavaErc20Address_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              amount_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.class, kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.Builder.class);
    }

    public static final int INITIATOR_FIELD_NUMBER = 1;
    private volatile java.lang.Object initiator_;
    /**
     * <pre>
     * EVM 0x hex address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1;</code>
     * @return The initiator.
     */
    @java.lang.Override
    public java.lang.String getInitiator() {
      java.lang.Object ref = initiator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        initiator_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * EVM 0x hex address initiating the conversion.
     * </pre>
     *
     * <code>string initiator = 1;</code>
     * @return The bytes for initiator.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInitiatorBytes() {
      java.lang.Object ref = initiator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        initiator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECEIVER_FIELD_NUMBER = 2;
    private volatile java.lang.Object receiver_;
    /**
     * <pre>
     * Kava bech32 address that will receive the converted sdk.Coin.
     * </pre>
     *
     * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The receiver.
     */
    @java.lang.Override
    public java.lang.String getReceiver() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        receiver_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Kava bech32 address that will receive the converted sdk.Coin.
     * </pre>
     *
     * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for receiver.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReceiverBytes() {
      java.lang.Object ref = receiver_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        receiver_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KAVA_ERC20_ADDRESS_FIELD_NUMBER = 3;
    private volatile java.lang.Object kavaErc20Address_;
    /**
     * <pre>
     * EVM 0x hex address of the ERC20 contract.
     * </pre>
     *
     * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
     * @return The kavaErc20Address.
     */
    @java.lang.Override
    public java.lang.String getKavaErc20Address() {
      java.lang.Object ref = kavaErc20Address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kavaErc20Address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * EVM 0x hex address of the ERC20 contract.
     * </pre>
     *
     * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
     * @return The bytes for kavaErc20Address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKavaErc20AddressBytes() {
      java.lang.Object ref = kavaErc20Address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kavaErc20Address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 4;
    private volatile java.lang.Object amount_;
    /**
     * <pre>
     * ERC20 token amount to convert.
     * </pre>
     *
     * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amount_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ERC20 token amount to convert.
     * </pre>
     *
     * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getInitiatorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, initiator_);
      }
      if (!getReceiverBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, receiver_);
      }
      if (!getKavaErc20AddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kavaErc20Address_);
      }
      if (!getAmountBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, amount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getInitiatorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, initiator_);
      }
      if (!getReceiverBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, receiver_);
      }
      if (!getKavaErc20AddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kavaErc20Address_);
      }
      if (!getAmountBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin)) {
        return super.equals(obj);
      }
      kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin other = (kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin) obj;

      if (!getInitiator()
          .equals(other.getInitiator())) return false;
      if (!getReceiver()
          .equals(other.getReceiver())) return false;
      if (!getKavaErc20Address()
          .equals(other.getKavaErc20Address())) return false;
      if (!getAmount()
          .equals(other.getAmount())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INITIATOR_FIELD_NUMBER;
      hash = (53 * hash) + getInitiator().hashCode();
      hash = (37 * hash) + RECEIVER_FIELD_NUMBER;
      hash = (53 * hash) + getReceiver().hashCode();
      hash = (37 * hash) + KAVA_ERC20_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getKavaErc20Address().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MsgConvertERC20ToCoin defines a conversion from Kava ERC20 to sdk.Coin.
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertERC20ToCoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.MsgConvertERC20ToCoin)
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.class, kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.Builder.class);
      }

      // Construct using kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        initiator_ = "";

        receiver_ = "";

        kavaErc20Address_ = "";

        amount_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin getDefaultInstanceForType() {
        return kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.getDefaultInstance();
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin build() {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin buildPartial() {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin result = new kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin(this);
        result.initiator_ = initiator_;
        result.receiver_ = receiver_;
        result.kavaErc20Address_ = kavaErc20Address_;
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin) {
          return mergeFrom((kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin other) {
        if (other == kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin.getDefaultInstance()) return this;
        if (!other.getInitiator().isEmpty()) {
          initiator_ = other.initiator_;
          onChanged();
        }
        if (!other.getReceiver().isEmpty()) {
          receiver_ = other.receiver_;
          onChanged();
        }
        if (!other.getKavaErc20Address().isEmpty()) {
          kavaErc20Address_ = other.kavaErc20Address_;
          onChanged();
        }
        if (!other.getAmount().isEmpty()) {
          amount_ = other.amount_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object initiator_ = "";
      /**
       * <pre>
       * EVM 0x hex address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1;</code>
       * @return The initiator.
       */
      public java.lang.String getInitiator() {
        java.lang.Object ref = initiator_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          initiator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1;</code>
       * @return The bytes for initiator.
       */
      public com.google.protobuf.ByteString
          getInitiatorBytes() {
        java.lang.Object ref = initiator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          initiator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1;</code>
       * @param value The initiator to set.
       * @return This builder for chaining.
       */
      public Builder setInitiator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        initiator_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitiator() {
        
        initiator_ = getDefaultInstance().getInitiator();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address initiating the conversion.
       * </pre>
       *
       * <code>string initiator = 1;</code>
       * @param value The bytes for initiator to set.
       * @return This builder for chaining.
       */
      public Builder setInitiatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        initiator_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object receiver_ = "";
      /**
       * <pre>
       * Kava bech32 address that will receive the converted sdk.Coin.
       * </pre>
       *
       * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The receiver.
       */
      public java.lang.String getReceiver() {
        java.lang.Object ref = receiver_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          receiver_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Kava bech32 address that will receive the converted sdk.Coin.
       * </pre>
       *
       * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for receiver.
       */
      public com.google.protobuf.ByteString
          getReceiverBytes() {
        java.lang.Object ref = receiver_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          receiver_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Kava bech32 address that will receive the converted sdk.Coin.
       * </pre>
       *
       * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiver(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        receiver_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kava bech32 address that will receive the converted sdk.Coin.
       * </pre>
       *
       * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearReceiver() {
        
        receiver_ = getDefaultInstance().getReceiver();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kava bech32 address that will receive the converted sdk.Coin.
       * </pre>
       *
       * <code>string receiver = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for receiver to set.
       * @return This builder for chaining.
       */
      public Builder setReceiverBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        receiver_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object kavaErc20Address_ = "";
      /**
       * <pre>
       * EVM 0x hex address of the ERC20 contract.
       * </pre>
       *
       * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
       * @return The kavaErc20Address.
       */
      public java.lang.String getKavaErc20Address() {
        java.lang.Object ref = kavaErc20Address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kavaErc20Address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address of the ERC20 contract.
       * </pre>
       *
       * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
       * @return The bytes for kavaErc20Address.
       */
      public com.google.protobuf.ByteString
          getKavaErc20AddressBytes() {
        java.lang.Object ref = kavaErc20Address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kavaErc20Address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * EVM 0x hex address of the ERC20 contract.
       * </pre>
       *
       * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
       * @param value The kavaErc20Address to set.
       * @return This builder for chaining.
       */
      public Builder setKavaErc20Address(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kavaErc20Address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address of the ERC20 contract.
       * </pre>
       *
       * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKavaErc20Address() {
        
        kavaErc20Address_ = getDefaultInstance().getKavaErc20Address();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * EVM 0x hex address of the ERC20 contract.
       * </pre>
       *
       * <code>string kava_erc20_address = 3 [(.gogoproto.customname) = "KavaERC20Address"];</code>
       * @param value The bytes for kavaErc20Address to set.
       * @return This builder for chaining.
       */
      public Builder setKavaErc20AddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kavaErc20Address_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object amount_ = "";
      /**
       * <pre>
       * ERC20 token amount to convert.
       * </pre>
       *
       * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
       * @return The amount.
       */
      public java.lang.String getAmount() {
        java.lang.Object ref = amount_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          amount_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ERC20 token amount to convert.
       * </pre>
       *
       * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
       * @return The bytes for amount.
       */
      public com.google.protobuf.ByteString
          getAmountBytes() {
        java.lang.Object ref = amount_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          amount_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ERC20 token amount to convert.
       * </pre>
       *
       * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ERC20 token amount to convert.
       * </pre>
       *
       * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ERC20 token amount to convert.
       * </pre>
       *
       * <code>string amount = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.cosmos_proto.scalar) = "cosmos.Int"];</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        amount_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.MsgConvertERC20ToCoin)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.MsgConvertERC20ToCoin)
    private static final kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin();
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgConvertERC20ToCoin>
        PARSER = new com.google.protobuf.AbstractParser<MsgConvertERC20ToCoin>() {
      @java.lang.Override
      public MsgConvertERC20ToCoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgConvertERC20ToCoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgConvertERC20ToCoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgConvertERC20ToCoin> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MsgConvertERC20ToCoinResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * MsgConvertERC20ToCoinResponse defines the response value from
   * Msg/MsgConvertERC20ToCoin.
   * </pre>
   *
   * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse}
   */
  public static final class MsgConvertERC20ToCoinResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse)
      MsgConvertERC20ToCoinResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MsgConvertERC20ToCoinResponse.newBuilder() to construct.
    private MsgConvertERC20ToCoinResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MsgConvertERC20ToCoinResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MsgConvertERC20ToCoinResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MsgConvertERC20ToCoinResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.class, kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse)) {
        return super.equals(obj);
      }
      kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse other = (kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MsgConvertERC20ToCoinResponse defines the response value from
     * Msg/MsgConvertERC20ToCoin.
     * </pre>
     *
     * Protobuf type {@code kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse)
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.class, kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.Builder.class);
      }

      // Construct using kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return kava.evmutil.v1beta1.Tx.internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse getDefaultInstanceForType() {
        return kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.getDefaultInstance();
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse build() {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse buildPartial() {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse result = new kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse) {
          return mergeFrom((kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse other) {
        if (other == kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse)
    }

    // @@protoc_insertion_point(class_scope:kava.evmutil.v1beta1.MsgConvertERC20ToCoinResponse)
    private static final kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse();
    }

    public static kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MsgConvertERC20ToCoinResponse>
        PARSER = new com.google.protobuf.AbstractParser<MsgConvertERC20ToCoinResponse>() {
      @java.lang.Override
      public MsgConvertERC20ToCoinResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgConvertERC20ToCoinResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MsgConvertERC20ToCoinResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MsgConvertERC20ToCoinResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public kava.evmutil.v1beta1.Tx.MsgConvertERC20ToCoinResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035kava/evmutil/v1beta1/tx.proto\022\024kava.ev" +
      "mutil.v1beta1\032\024gogoproto/gogo.proto\032\036cos" +
      "mos/base/v1beta1/coin.proto\032\031cosmos_prot" +
      "o/cosmos.proto\"\201\001\n\025MsgConvertCoinToERC20" +
      "\022+\n\tinitiator\030\001 \001(\tB\030\322\264-\024cosmos.AddressS" +
      "tring\022\020\n\010receiver\030\002 \001(\t\022)\n\006amount\030\003 \001(\0132" +
      "\031.cosmos.base.v1beta1.Coin\"\037\n\035MsgConvert" +
      "CoinToERC20Response\"\326\001\n\025MsgConvertERC20T" +
      "oCoin\022\021\n\tinitiator\030\001 \001(\t\022*\n\010receiver\030\002 \001" +
      "(\tB\030\322\264-\024cosmos.AddressString\0220\n\022kava_erc" +
      "20_address\030\003 \001(\tB\024\342\336\037\020KavaERC20Address\022L" +
      "\n\006amount\030\004 \001(\tB<\322\264-\ncosmos.Int\332\336\037&github" +
      ".com/cosmos/cosmos-sdk/types.Int\310\336\037\000\"\037\n\035" +
      "MsgConvertERC20ToCoinResponse2\365\001\n\003Msg\022v\n" +
      "\022ConvertCoinToERC20\022+.kava.evmutil.v1bet" +
      "a1.MsgConvertCoinToERC20\0323.kava.evmutil." +
      "v1beta1.MsgConvertCoinToERC20Response\022v\n" +
      "\022ConvertERC20ToCoin\022+.kava.evmutil.v1bet" +
      "a1.MsgConvertERC20ToCoin\0323.kava.evmutil." +
      "v1beta1.MsgConvertERC20ToCoinResponseB3Z" +
      ")github.com/kava-labs/kava/x/evmutil/typ" +
      "es\250\342\036\001\340\341\036\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
          cosmos_proto.Cosmos.getDescriptor(),
        });
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20_descriptor,
        new java.lang.String[] { "Initiator", "Receiver", "Amount", });
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_MsgConvertCoinToERC20Response_descriptor,
        new java.lang.String[] { });
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoin_descriptor,
        new java.lang.String[] { "Initiator", "Receiver", "KavaErc20Address", "Amount", });
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_kava_evmutil_v1beta1_MsgConvertERC20ToCoinResponse_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(cosmos_proto.Cosmos.scalar);
    registry.add(com.google.protobuf2.GoGoProtos.customname);
    registry.add(com.google.protobuf2.GoGoProtos.customtype);
    registry.add(com.google.protobuf2.GoGoProtos.equalAll);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.verboseEqualAll);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
    cosmos_proto.Cosmos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
