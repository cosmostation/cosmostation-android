// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iris_mod/nft/nft.proto

package irismod.nft;

public final class Nft {
  private Nft() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BaseNFTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.nft.BaseNFT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
     * @return The uri.
     */
    java.lang.String getUri();
    /**
     * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
     * @return The bytes for uri.
     */
    com.google.protobuf.ByteString
        getUriBytes();

    /**
     * <code>string data = 4;</code>
     * @return The data.
     */
    java.lang.String getData();
    /**
     * <code>string data = 4;</code>
     * @return The bytes for data.
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>string owner = 5;</code>
     * @return The owner.
     */
    java.lang.String getOwner();
    /**
     * <code>string owner = 5;</code>
     * @return The bytes for owner.
     */
    com.google.protobuf.ByteString
        getOwnerBytes();
  }
  /**
   * <pre>
   * BaseNFT defines a non-fungible token
   * </pre>
   *
   * Protobuf type {@code irismod.nft.BaseNFT}
   */
  public static final class BaseNFT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.nft.BaseNFT)
      BaseNFTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseNFT.newBuilder() to construct.
    private BaseNFT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseNFT() {
      id_ = "";
      name_ = "";
      uri_ = "";
      data_ = "";
      owner_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BaseNFT();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseNFT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              uri_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              data_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              owner_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.nft.Nft.internal_static_irismod_nft_BaseNFT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.nft.Nft.internal_static_irismod_nft_BaseNFT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.nft.Nft.BaseNFT.class, irismod.nft.Nft.BaseNFT.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URI_FIELD_NUMBER = 3;
    private volatile java.lang.Object uri_;
    /**
     * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
     * @return The uri.
     */
    @java.lang.Override
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      }
    }
    /**
     * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
     * @return The bytes for uri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private volatile java.lang.Object data_;
    /**
     * <code>string data = 4;</code>
     * @return The data.
     */
    @java.lang.Override
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        data_ = s;
        return s;
      }
    }
    /**
     * <code>string data = 4;</code>
     * @return The bytes for data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FIELD_NUMBER = 5;
    private volatile java.lang.Object owner_;
    /**
     * <code>string owner = 5;</code>
     * @return The owner.
     */
    @java.lang.Override
    public java.lang.String getOwner() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        owner_ = s;
        return s;
      }
    }
    /**
     * <code>string owner = 5;</code>
     * @return The bytes for owner.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOwnerBytes() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        owner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getUriBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uri_);
      }
      if (!getDataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, data_);
      }
      if (!getOwnerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, owner_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getUriBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uri_);
      }
      if (!getDataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, data_);
      }
      if (!getOwnerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, owner_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.nft.Nft.BaseNFT)) {
        return super.equals(obj);
      }
      irismod.nft.Nft.BaseNFT other = (irismod.nft.Nft.BaseNFT) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUri()
          .equals(other.getUri())) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!getOwner()
          .equals(other.getOwner())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.nft.Nft.BaseNFT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.BaseNFT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.BaseNFT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.BaseNFT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.nft.Nft.BaseNFT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BaseNFT defines a non-fungible token
     * </pre>
     *
     * Protobuf type {@code irismod.nft.BaseNFT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.nft.BaseNFT)
        irismod.nft.Nft.BaseNFTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.nft.Nft.internal_static_irismod_nft_BaseNFT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.nft.Nft.internal_static_irismod_nft_BaseNFT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.nft.Nft.BaseNFT.class, irismod.nft.Nft.BaseNFT.Builder.class);
      }

      // Construct using irismod.nft.Nft.BaseNFT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        uri_ = "";

        data_ = "";

        owner_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.nft.Nft.internal_static_irismod_nft_BaseNFT_descriptor;
      }

      @java.lang.Override
      public irismod.nft.Nft.BaseNFT getDefaultInstanceForType() {
        return irismod.nft.Nft.BaseNFT.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.nft.Nft.BaseNFT build() {
        irismod.nft.Nft.BaseNFT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.nft.Nft.BaseNFT buildPartial() {
        irismod.nft.Nft.BaseNFT result = new irismod.nft.Nft.BaseNFT(this);
        result.id_ = id_;
        result.name_ = name_;
        result.uri_ = uri_;
        result.data_ = data_;
        result.owner_ = owner_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.nft.Nft.BaseNFT) {
          return mergeFrom((irismod.nft.Nft.BaseNFT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.nft.Nft.BaseNFT other) {
        if (other == irismod.nft.Nft.BaseNFT.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getUri().isEmpty()) {
          uri_ = other.uri_;
          onChanged();
        }
        if (!other.getData().isEmpty()) {
          data_ = other.data_;
          onChanged();
        }
        if (!other.getOwner().isEmpty()) {
          owner_ = other.owner_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.nft.Nft.BaseNFT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.nft.Nft.BaseNFT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uri_ = "";
      /**
       * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = uri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString
          getUriBytes() {
        java.lang.Object ref = uri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
       * @param value The uri to set.
       * @return This builder for chaining.
       */
      public Builder setUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUri() {
        
        uri_ = getDefaultInstance().getUri();
        onChanged();
        return this;
      }
      /**
       * <code>string uri = 3 [(.gogoproto.customname) = "URI"];</code>
       * @param value The bytes for uri to set.
       * @return This builder for chaining.
       */
      public Builder setUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object data_ = "";
      /**
       * <code>string data = 4;</code>
       * @return The data.
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data = 4;</code>
       * @return The bytes for data.
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data = 4;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <code>string data = 4;</code>
       * @param value The bytes for data to set.
       * @return This builder for chaining.
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        data_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object owner_ = "";
      /**
       * <code>string owner = 5;</code>
       * @return The owner.
       */
      public java.lang.String getOwner() {
        java.lang.Object ref = owner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          owner_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string owner = 5;</code>
       * @return The bytes for owner.
       */
      public com.google.protobuf.ByteString
          getOwnerBytes() {
        java.lang.Object ref = owner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          owner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string owner = 5;</code>
       * @param value The owner to set.
       * @return This builder for chaining.
       */
      public Builder setOwner(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string owner = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwner() {
        
        owner_ = getDefaultInstance().getOwner();
        onChanged();
        return this;
      }
      /**
       * <code>string owner = 5;</code>
       * @param value The bytes for owner to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        owner_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.nft.BaseNFT)
    }

    // @@protoc_insertion_point(class_scope:irismod.nft.BaseNFT)
    private static final irismod.nft.Nft.BaseNFT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.nft.Nft.BaseNFT();
    }

    public static irismod.nft.Nft.BaseNFT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BaseNFT>
        PARSER = new com.google.protobuf.AbstractParser<BaseNFT>() {
      @java.lang.Override
      public BaseNFT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseNFT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseNFT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BaseNFT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.nft.Nft.BaseNFT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DenomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.nft.Denom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string schema = 3;</code>
     * @return The schema.
     */
    java.lang.String getSchema();
    /**
     * <code>string schema = 3;</code>
     * @return The bytes for schema.
     */
    com.google.protobuf.ByteString
        getSchemaBytes();

    /**
     * <code>string creator = 4;</code>
     * @return The creator.
     */
    java.lang.String getCreator();
    /**
     * <code>string creator = 4;</code>
     * @return The bytes for creator.
     */
    com.google.protobuf.ByteString
        getCreatorBytes();

    /**
     * <code>string symbol = 5;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <code>string symbol = 5;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <code>bool mint_restricted = 6;</code>
     * @return The mintRestricted.
     */
    boolean getMintRestricted();

    /**
     * <code>bool update_restricted = 7;</code>
     * @return The updateRestricted.
     */
    boolean getUpdateRestricted();
  }
  /**
   * <pre>
   * Denom defines a type of NFT
   * </pre>
   *
   * Protobuf type {@code irismod.nft.Denom}
   */
  public static final class Denom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.nft.Denom)
      DenomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Denom.newBuilder() to construct.
    private Denom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Denom() {
      id_ = "";
      name_ = "";
      schema_ = "";
      creator_ = "";
      symbol_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Denom();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Denom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              schema_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              creator_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 48: {

              mintRestricted_ = input.readBool();
              break;
            }
            case 56: {

              updateRestricted_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.nft.Nft.internal_static_irismod_nft_Denom_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.nft.Nft.internal_static_irismod_nft_Denom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.nft.Nft.Denom.class, irismod.nft.Nft.Denom.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCHEMA_FIELD_NUMBER = 3;
    private volatile java.lang.Object schema_;
    /**
     * <code>string schema = 3;</code>
     * @return The schema.
     */
    @java.lang.Override
    public java.lang.String getSchema() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schema_ = s;
        return s;
      }
    }
    /**
     * <code>string schema = 3;</code>
     * @return The bytes for schema.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSchemaBytes() {
      java.lang.Object ref = schema_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATOR_FIELD_NUMBER = 4;
    private volatile java.lang.Object creator_;
    /**
     * <code>string creator = 4;</code>
     * @return The creator.
     */
    @java.lang.Override
    public java.lang.String getCreator() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        creator_ = s;
        return s;
      }
    }
    /**
     * <code>string creator = 4;</code>
     * @return The bytes for creator.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCreatorBytes() {
      java.lang.Object ref = creator_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        creator_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 5;
    private volatile java.lang.Object symbol_;
    /**
     * <code>string symbol = 5;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <code>string symbol = 5;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MINT_RESTRICTED_FIELD_NUMBER = 6;
    private boolean mintRestricted_;
    /**
     * <code>bool mint_restricted = 6;</code>
     * @return The mintRestricted.
     */
    @java.lang.Override
    public boolean getMintRestricted() {
      return mintRestricted_;
    }

    public static final int UPDATE_RESTRICTED_FIELD_NUMBER = 7;
    private boolean updateRestricted_;
    /**
     * <code>bool update_restricted = 7;</code>
     * @return The updateRestricted.
     */
    @java.lang.Override
    public boolean getUpdateRestricted() {
      return updateRestricted_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getSchemaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, schema_);
      }
      if (!getCreatorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, creator_);
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, symbol_);
      }
      if (mintRestricted_ != false) {
        output.writeBool(6, mintRestricted_);
      }
      if (updateRestricted_ != false) {
        output.writeBool(7, updateRestricted_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getSchemaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, schema_);
      }
      if (!getCreatorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, creator_);
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, symbol_);
      }
      if (mintRestricted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, mintRestricted_);
      }
      if (updateRestricted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, updateRestricted_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.nft.Nft.Denom)) {
        return super.equals(obj);
      }
      irismod.nft.Nft.Denom other = (irismod.nft.Nft.Denom) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getSchema()
          .equals(other.getSchema())) return false;
      if (!getCreator()
          .equals(other.getCreator())) return false;
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (getMintRestricted()
          != other.getMintRestricted()) return false;
      if (getUpdateRestricted()
          != other.getUpdateRestricted()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
      hash = (37 * hash) + CREATOR_FIELD_NUMBER;
      hash = (53 * hash) + getCreator().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + MINT_RESTRICTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMintRestricted());
      hash = (37 * hash) + UPDATE_RESTRICTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUpdateRestricted());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.nft.Nft.Denom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Denom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Denom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Denom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Denom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Denom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.nft.Nft.Denom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Denom defines a type of NFT
     * </pre>
     *
     * Protobuf type {@code irismod.nft.Denom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.nft.Denom)
        irismod.nft.Nft.DenomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.nft.Nft.internal_static_irismod_nft_Denom_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.nft.Nft.internal_static_irismod_nft_Denom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.nft.Nft.Denom.class, irismod.nft.Nft.Denom.Builder.class);
      }

      // Construct using irismod.nft.Nft.Denom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        schema_ = "";

        creator_ = "";

        symbol_ = "";

        mintRestricted_ = false;

        updateRestricted_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.nft.Nft.internal_static_irismod_nft_Denom_descriptor;
      }

      @java.lang.Override
      public irismod.nft.Nft.Denom getDefaultInstanceForType() {
        return irismod.nft.Nft.Denom.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.nft.Nft.Denom build() {
        irismod.nft.Nft.Denom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.nft.Nft.Denom buildPartial() {
        irismod.nft.Nft.Denom result = new irismod.nft.Nft.Denom(this);
        result.id_ = id_;
        result.name_ = name_;
        result.schema_ = schema_;
        result.creator_ = creator_;
        result.symbol_ = symbol_;
        result.mintRestricted_ = mintRestricted_;
        result.updateRestricted_ = updateRestricted_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.nft.Nft.Denom) {
          return mergeFrom((irismod.nft.Nft.Denom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.nft.Nft.Denom other) {
        if (other == irismod.nft.Nft.Denom.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSchema().isEmpty()) {
          schema_ = other.schema_;
          onChanged();
        }
        if (!other.getCreator().isEmpty()) {
          creator_ = other.creator_;
          onChanged();
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.getMintRestricted() != false) {
          setMintRestricted(other.getMintRestricted());
        }
        if (other.getUpdateRestricted() != false) {
          setUpdateRestricted(other.getUpdateRestricted());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.nft.Nft.Denom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.nft.Nft.Denom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object schema_ = "";
      /**
       * <code>string schema = 3;</code>
       * @return The schema.
       */
      public java.lang.String getSchema() {
        java.lang.Object ref = schema_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          schema_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string schema = 3;</code>
       * @return The bytes for schema.
       */
      public com.google.protobuf.ByteString
          getSchemaBytes() {
        java.lang.Object ref = schema_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          schema_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string schema = 3;</code>
       * @param value The schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchema(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string schema = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSchema() {
        
        schema_ = getDefaultInstance().getSchema();
        onChanged();
        return this;
      }
      /**
       * <code>string schema = 3;</code>
       * @param value The bytes for schema to set.
       * @return This builder for chaining.
       */
      public Builder setSchemaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        schema_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object creator_ = "";
      /**
       * <code>string creator = 4;</code>
       * @return The creator.
       */
      public java.lang.String getCreator() {
        java.lang.Object ref = creator_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          creator_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string creator = 4;</code>
       * @return The bytes for creator.
       */
      public com.google.protobuf.ByteString
          getCreatorBytes() {
        java.lang.Object ref = creator_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          creator_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string creator = 4;</code>
       * @param value The creator to set.
       * @return This builder for chaining.
       */
      public Builder setCreator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        creator_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string creator = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreator() {
        
        creator_ = getDefaultInstance().getCreator();
        onChanged();
        return this;
      }
      /**
       * <code>string creator = 4;</code>
       * @param value The bytes for creator to set.
       * @return This builder for chaining.
       */
      public Builder setCreatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        creator_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <code>string symbol = 5;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string symbol = 5;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string symbol = 5;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>string symbol = 5;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private boolean mintRestricted_ ;
      /**
       * <code>bool mint_restricted = 6;</code>
       * @return The mintRestricted.
       */
      @java.lang.Override
      public boolean getMintRestricted() {
        return mintRestricted_;
      }
      /**
       * <code>bool mint_restricted = 6;</code>
       * @param value The mintRestricted to set.
       * @return This builder for chaining.
       */
      public Builder setMintRestricted(boolean value) {
        
        mintRestricted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool mint_restricted = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMintRestricted() {
        
        mintRestricted_ = false;
        onChanged();
        return this;
      }

      private boolean updateRestricted_ ;
      /**
       * <code>bool update_restricted = 7;</code>
       * @return The updateRestricted.
       */
      @java.lang.Override
      public boolean getUpdateRestricted() {
        return updateRestricted_;
      }
      /**
       * <code>bool update_restricted = 7;</code>
       * @param value The updateRestricted to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateRestricted(boolean value) {
        
        updateRestricted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool update_restricted = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateRestricted() {
        
        updateRestricted_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.nft.Denom)
    }

    // @@protoc_insertion_point(class_scope:irismod.nft.Denom)
    private static final irismod.nft.Nft.Denom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.nft.Nft.Denom();
    }

    public static irismod.nft.Nft.Denom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Denom>
        PARSER = new com.google.protobuf.AbstractParser<Denom>() {
      @java.lang.Override
      public Denom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Denom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Denom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Denom> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.nft.Nft.Denom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IDCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.nft.IDCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
     * @return The denomId.
     */
    java.lang.String getDenomId();
    /**
     * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
     * @return The bytes for denomId.
     */
    com.google.protobuf.ByteString
        getDenomIdBytes();

    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @return A list containing the tokenIds.
     */
    java.util.List<java.lang.String>
        getTokenIdsList();
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @return The count of tokenIds.
     */
    int getTokenIdsCount();
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @param index The index of the element to return.
     * @return The tokenIds at the given index.
     */
    java.lang.String getTokenIds(int index);
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @param index The index of the value to return.
     * @return The bytes of the tokenIds at the given index.
     */
    com.google.protobuf.ByteString
        getTokenIdsBytes(int index);
  }
  /**
   * <pre>
   * IDCollection defines a type of collection with specified ID
   * </pre>
   *
   * Protobuf type {@code irismod.nft.IDCollection}
   */
  public static final class IDCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.nft.IDCollection)
      IDCollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IDCollection.newBuilder() to construct.
    private IDCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IDCollection() {
      denomId_ = "";
      tokenIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IDCollection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IDCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              denomId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                tokenIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              tokenIds_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          tokenIds_ = tokenIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.nft.Nft.internal_static_irismod_nft_IDCollection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.nft.Nft.internal_static_irismod_nft_IDCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.nft.Nft.IDCollection.class, irismod.nft.Nft.IDCollection.Builder.class);
    }

    public static final int DENOM_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object denomId_;
    /**
     * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
     * @return The denomId.
     */
    @java.lang.Override
    public java.lang.String getDenomId() {
      java.lang.Object ref = denomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denomId_ = s;
        return s;
      }
    }
    /**
     * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
     * @return The bytes for denomId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDenomIdBytes() {
      java.lang.Object ref = denomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList tokenIds_;
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @return A list containing the tokenIds.
     */
    public com.google.protobuf.ProtocolStringList
        getTokenIdsList() {
      return tokenIds_;
    }
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @return The count of tokenIds.
     */
    public int getTokenIdsCount() {
      return tokenIds_.size();
    }
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @param index The index of the element to return.
     * @return The tokenIds at the given index.
     */
    public java.lang.String getTokenIds(int index) {
      return tokenIds_.get(index);
    }
    /**
     * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
     * @param index The index of the value to return.
     * @return The bytes of the tokenIds at the given index.
     */
    public com.google.protobuf.ByteString
        getTokenIdsBytes(int index) {
      return tokenIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDenomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, denomId_);
      }
      for (int i = 0; i < tokenIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tokenIds_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDenomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, denomId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tokenIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(tokenIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTokenIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.nft.Nft.IDCollection)) {
        return super.equals(obj);
      }
      irismod.nft.Nft.IDCollection other = (irismod.nft.Nft.IDCollection) obj;

      if (!getDenomId()
          .equals(other.getDenomId())) return false;
      if (!getTokenIdsList()
          .equals(other.getTokenIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DENOM_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDenomId().hashCode();
      if (getTokenIdsCount() > 0) {
        hash = (37 * hash) + TOKEN_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getTokenIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.nft.Nft.IDCollection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.IDCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.IDCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.IDCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.nft.Nft.IDCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IDCollection defines a type of collection with specified ID
     * </pre>
     *
     * Protobuf type {@code irismod.nft.IDCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.nft.IDCollection)
        irismod.nft.Nft.IDCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.nft.Nft.internal_static_irismod_nft_IDCollection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.nft.Nft.internal_static_irismod_nft_IDCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.nft.Nft.IDCollection.class, irismod.nft.Nft.IDCollection.Builder.class);
      }

      // Construct using irismod.nft.Nft.IDCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        denomId_ = "";

        tokenIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.nft.Nft.internal_static_irismod_nft_IDCollection_descriptor;
      }

      @java.lang.Override
      public irismod.nft.Nft.IDCollection getDefaultInstanceForType() {
        return irismod.nft.Nft.IDCollection.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.nft.Nft.IDCollection build() {
        irismod.nft.Nft.IDCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.nft.Nft.IDCollection buildPartial() {
        irismod.nft.Nft.IDCollection result = new irismod.nft.Nft.IDCollection(this);
        int from_bitField0_ = bitField0_;
        result.denomId_ = denomId_;
        if (((bitField0_ & 0x00000001) != 0)) {
          tokenIds_ = tokenIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tokenIds_ = tokenIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.nft.Nft.IDCollection) {
          return mergeFrom((irismod.nft.Nft.IDCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.nft.Nft.IDCollection other) {
        if (other == irismod.nft.Nft.IDCollection.getDefaultInstance()) return this;
        if (!other.getDenomId().isEmpty()) {
          denomId_ = other.denomId_;
          onChanged();
        }
        if (!other.tokenIds_.isEmpty()) {
          if (tokenIds_.isEmpty()) {
            tokenIds_ = other.tokenIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTokenIdsIsMutable();
            tokenIds_.addAll(other.tokenIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.nft.Nft.IDCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.nft.Nft.IDCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object denomId_ = "";
      /**
       * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
       * @return The denomId.
       */
      public java.lang.String getDenomId() {
        java.lang.Object ref = denomId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          denomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
       * @return The bytes for denomId.
       */
      public com.google.protobuf.ByteString
          getDenomIdBytes() {
        java.lang.Object ref = denomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          denomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
       * @param value The denomId to set.
       * @return This builder for chaining.
       */
      public Builder setDenomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        denomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearDenomId() {
        
        denomId_ = getDefaultInstance().getDenomId();
        onChanged();
        return this;
      }
      /**
       * <code>string denom_id = 1 [(.gogoproto.moretags) = "yaml:&#92;"denom_id&#92;""];</code>
       * @param value The bytes for denomId to set.
       * @return This builder for chaining.
       */
      public Builder setDenomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        denomId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList tokenIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTokenIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          tokenIds_ = new com.google.protobuf.LazyStringArrayList(tokenIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @return A list containing the tokenIds.
       */
      public com.google.protobuf.ProtocolStringList
          getTokenIdsList() {
        return tokenIds_.getUnmodifiableView();
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @return The count of tokenIds.
       */
      public int getTokenIdsCount() {
        return tokenIds_.size();
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param index The index of the element to return.
       * @return The tokenIds at the given index.
       */
      public java.lang.String getTokenIds(int index) {
        return tokenIds_.get(index);
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param index The index of the value to return.
       * @return The bytes of the tokenIds at the given index.
       */
      public com.google.protobuf.ByteString
          getTokenIdsBytes(int index) {
        return tokenIds_.getByteString(index);
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param index The index to set the value at.
       * @param value The tokenIds to set.
       * @return This builder for chaining.
       */
      public Builder setTokenIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTokenIdsIsMutable();
        tokenIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param value The tokenIds to add.
       * @return This builder for chaining.
       */
      public Builder addTokenIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTokenIdsIsMutable();
        tokenIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param values The tokenIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllTokenIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureTokenIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokenIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenIds() {
        tokenIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string token_ids = 2 [(.gogoproto.moretags) = "yaml:&#92;"token_ids&#92;""];</code>
       * @param value The bytes of the tokenIds to add.
       * @return This builder for chaining.
       */
      public Builder addTokenIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTokenIdsIsMutable();
        tokenIds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.nft.IDCollection)
    }

    // @@protoc_insertion_point(class_scope:irismod.nft.IDCollection)
    private static final irismod.nft.Nft.IDCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.nft.Nft.IDCollection();
    }

    public static irismod.nft.Nft.IDCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IDCollection>
        PARSER = new com.google.protobuf.AbstractParser<IDCollection>() {
      @java.lang.Override
      public IDCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IDCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IDCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IDCollection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.nft.Nft.IDCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OwnerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.nft.Owner)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string address = 1;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    java.util.List<irismod.nft.Nft.IDCollection> 
        getIdCollectionsList();
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    irismod.nft.Nft.IDCollection getIdCollections(int index);
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    int getIdCollectionsCount();
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    java.util.List<? extends irismod.nft.Nft.IDCollectionOrBuilder> 
        getIdCollectionsOrBuilderList();
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    irismod.nft.Nft.IDCollectionOrBuilder getIdCollectionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Owner defines a type of owner
   * </pre>
   *
   * Protobuf type {@code irismod.nft.Owner}
   */
  public static final class Owner extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.nft.Owner)
      OwnerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Owner.newBuilder() to construct.
    private Owner(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Owner() {
      address_ = "";
      idCollections_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Owner();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Owner(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                idCollections_ = new java.util.ArrayList<irismod.nft.Nft.IDCollection>();
                mutable_bitField0_ |= 0x00000001;
              }
              idCollections_.add(
                  input.readMessage(irismod.nft.Nft.IDCollection.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          idCollections_ = java.util.Collections.unmodifiableList(idCollections_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.nft.Nft.internal_static_irismod_nft_Owner_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.nft.Nft.internal_static_irismod_nft_Owner_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.nft.Nft.Owner.class, irismod.nft.Nft.Owner.Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    private volatile java.lang.Object address_;
    /**
     * <code>string address = 1;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_COLLECTIONS_FIELD_NUMBER = 2;
    private java.util.List<irismod.nft.Nft.IDCollection> idCollections_;
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    @java.lang.Override
    public java.util.List<irismod.nft.Nft.IDCollection> getIdCollectionsList() {
      return idCollections_;
    }
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    @java.lang.Override
    public java.util.List<? extends irismod.nft.Nft.IDCollectionOrBuilder> 
        getIdCollectionsOrBuilderList() {
      return idCollections_;
    }
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    @java.lang.Override
    public int getIdCollectionsCount() {
      return idCollections_.size();
    }
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    @java.lang.Override
    public irismod.nft.Nft.IDCollection getIdCollections(int index) {
      return idCollections_.get(index);
    }
    /**
     * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
     */
    @java.lang.Override
    public irismod.nft.Nft.IDCollectionOrBuilder getIdCollectionsOrBuilder(
        int index) {
      return idCollections_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
      }
      for (int i = 0; i < idCollections_.size(); i++) {
        output.writeMessage(2, idCollections_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
      }
      for (int i = 0; i < idCollections_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, idCollections_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.nft.Nft.Owner)) {
        return super.equals(obj);
      }
      irismod.nft.Nft.Owner other = (irismod.nft.Nft.Owner) obj;

      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!getIdCollectionsList()
          .equals(other.getIdCollectionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      if (getIdCollectionsCount() > 0) {
        hash = (37 * hash) + ID_COLLECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getIdCollectionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.nft.Nft.Owner parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Owner parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Owner parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Owner parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Owner parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Owner parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.nft.Nft.Owner prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Owner defines a type of owner
     * </pre>
     *
     * Protobuf type {@code irismod.nft.Owner}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.nft.Owner)
        irismod.nft.Nft.OwnerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.nft.Nft.internal_static_irismod_nft_Owner_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.nft.Nft.internal_static_irismod_nft_Owner_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.nft.Nft.Owner.class, irismod.nft.Nft.Owner.Builder.class);
      }

      // Construct using irismod.nft.Nft.Owner.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getIdCollectionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        address_ = "";

        if (idCollectionsBuilder_ == null) {
          idCollections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          idCollectionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.nft.Nft.internal_static_irismod_nft_Owner_descriptor;
      }

      @java.lang.Override
      public irismod.nft.Nft.Owner getDefaultInstanceForType() {
        return irismod.nft.Nft.Owner.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.nft.Nft.Owner build() {
        irismod.nft.Nft.Owner result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.nft.Nft.Owner buildPartial() {
        irismod.nft.Nft.Owner result = new irismod.nft.Nft.Owner(this);
        int from_bitField0_ = bitField0_;
        result.address_ = address_;
        if (idCollectionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            idCollections_ = java.util.Collections.unmodifiableList(idCollections_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.idCollections_ = idCollections_;
        } else {
          result.idCollections_ = idCollectionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.nft.Nft.Owner) {
          return mergeFrom((irismod.nft.Nft.Owner)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.nft.Nft.Owner other) {
        if (other == irismod.nft.Nft.Owner.getDefaultInstance()) return this;
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (idCollectionsBuilder_ == null) {
          if (!other.idCollections_.isEmpty()) {
            if (idCollections_.isEmpty()) {
              idCollections_ = other.idCollections_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIdCollectionsIsMutable();
              idCollections_.addAll(other.idCollections_);
            }
            onChanged();
          }
        } else {
          if (!other.idCollections_.isEmpty()) {
            if (idCollectionsBuilder_.isEmpty()) {
              idCollectionsBuilder_.dispose();
              idCollectionsBuilder_ = null;
              idCollections_ = other.idCollections_;
              bitField0_ = (bitField0_ & ~0x00000001);
              idCollectionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIdCollectionsFieldBuilder() : null;
            } else {
              idCollectionsBuilder_.addAllMessages(other.idCollections_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.nft.Nft.Owner parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.nft.Nft.Owner) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object address_ = "";
      /**
       * <code>string address = 1;</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string address = 1;</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string address = 1;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <code>string address = 1;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private java.util.List<irismod.nft.Nft.IDCollection> idCollections_ =
        java.util.Collections.emptyList();
      private void ensureIdCollectionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          idCollections_ = new java.util.ArrayList<irismod.nft.Nft.IDCollection>(idCollections_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          irismod.nft.Nft.IDCollection, irismod.nft.Nft.IDCollection.Builder, irismod.nft.Nft.IDCollectionOrBuilder> idCollectionsBuilder_;

      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public java.util.List<irismod.nft.Nft.IDCollection> getIdCollectionsList() {
        if (idCollectionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(idCollections_);
        } else {
          return idCollectionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public int getIdCollectionsCount() {
        if (idCollectionsBuilder_ == null) {
          return idCollections_.size();
        } else {
          return idCollectionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public irismod.nft.Nft.IDCollection getIdCollections(int index) {
        if (idCollectionsBuilder_ == null) {
          return idCollections_.get(index);
        } else {
          return idCollectionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder setIdCollections(
          int index, irismod.nft.Nft.IDCollection value) {
        if (idCollectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdCollectionsIsMutable();
          idCollections_.set(index, value);
          onChanged();
        } else {
          idCollectionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder setIdCollections(
          int index, irismod.nft.Nft.IDCollection.Builder builderForValue) {
        if (idCollectionsBuilder_ == null) {
          ensureIdCollectionsIsMutable();
          idCollections_.set(index, builderForValue.build());
          onChanged();
        } else {
          idCollectionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder addIdCollections(irismod.nft.Nft.IDCollection value) {
        if (idCollectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdCollectionsIsMutable();
          idCollections_.add(value);
          onChanged();
        } else {
          idCollectionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder addIdCollections(
          int index, irismod.nft.Nft.IDCollection value) {
        if (idCollectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdCollectionsIsMutable();
          idCollections_.add(index, value);
          onChanged();
        } else {
          idCollectionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder addIdCollections(
          irismod.nft.Nft.IDCollection.Builder builderForValue) {
        if (idCollectionsBuilder_ == null) {
          ensureIdCollectionsIsMutable();
          idCollections_.add(builderForValue.build());
          onChanged();
        } else {
          idCollectionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder addIdCollections(
          int index, irismod.nft.Nft.IDCollection.Builder builderForValue) {
        if (idCollectionsBuilder_ == null) {
          ensureIdCollectionsIsMutable();
          idCollections_.add(index, builderForValue.build());
          onChanged();
        } else {
          idCollectionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder addAllIdCollections(
          java.lang.Iterable<? extends irismod.nft.Nft.IDCollection> values) {
        if (idCollectionsBuilder_ == null) {
          ensureIdCollectionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, idCollections_);
          onChanged();
        } else {
          idCollectionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder clearIdCollections() {
        if (idCollectionsBuilder_ == null) {
          idCollections_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          idCollectionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public Builder removeIdCollections(int index) {
        if (idCollectionsBuilder_ == null) {
          ensureIdCollectionsIsMutable();
          idCollections_.remove(index);
          onChanged();
        } else {
          idCollectionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public irismod.nft.Nft.IDCollection.Builder getIdCollectionsBuilder(
          int index) {
        return getIdCollectionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public irismod.nft.Nft.IDCollectionOrBuilder getIdCollectionsOrBuilder(
          int index) {
        if (idCollectionsBuilder_ == null) {
          return idCollections_.get(index);  } else {
          return idCollectionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public java.util.List<? extends irismod.nft.Nft.IDCollectionOrBuilder> 
           getIdCollectionsOrBuilderList() {
        if (idCollectionsBuilder_ != null) {
          return idCollectionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(idCollections_);
        }
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public irismod.nft.Nft.IDCollection.Builder addIdCollectionsBuilder() {
        return getIdCollectionsFieldBuilder().addBuilder(
            irismod.nft.Nft.IDCollection.getDefaultInstance());
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public irismod.nft.Nft.IDCollection.Builder addIdCollectionsBuilder(
          int index) {
        return getIdCollectionsFieldBuilder().addBuilder(
            index, irismod.nft.Nft.IDCollection.getDefaultInstance());
      }
      /**
       * <code>repeated .irismod.nft.IDCollection id_collections = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "IDCollections", (.gogoproto.moretags) = "yaml:&#92;"idcs&#92;""];</code>
       */
      public java.util.List<irismod.nft.Nft.IDCollection.Builder> 
           getIdCollectionsBuilderList() {
        return getIdCollectionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          irismod.nft.Nft.IDCollection, irismod.nft.Nft.IDCollection.Builder, irismod.nft.Nft.IDCollectionOrBuilder> 
          getIdCollectionsFieldBuilder() {
        if (idCollectionsBuilder_ == null) {
          idCollectionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              irismod.nft.Nft.IDCollection, irismod.nft.Nft.IDCollection.Builder, irismod.nft.Nft.IDCollectionOrBuilder>(
                  idCollections_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          idCollections_ = null;
        }
        return idCollectionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.nft.Owner)
    }

    // @@protoc_insertion_point(class_scope:irismod.nft.Owner)
    private static final irismod.nft.Nft.Owner DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.nft.Nft.Owner();
    }

    public static irismod.nft.Nft.Owner getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Owner>
        PARSER = new com.google.protobuf.AbstractParser<Owner>() {
      @java.lang.Override
      public Owner parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Owner(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Owner> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Owner> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.nft.Nft.Owner getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.nft.Collection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the denom field is set.
     */
    boolean hasDenom();
    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     * @return The denom.
     */
    irismod.nft.Nft.Denom getDenom();
    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     */
    irismod.nft.Nft.DenomOrBuilder getDenomOrBuilder();

    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    java.util.List<irismod.nft.Nft.BaseNFT> 
        getNftsList();
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    irismod.nft.Nft.BaseNFT getNfts(int index);
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    int getNftsCount();
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    java.util.List<? extends irismod.nft.Nft.BaseNFTOrBuilder> 
        getNftsOrBuilderList();
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    irismod.nft.Nft.BaseNFTOrBuilder getNftsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Collection defines a type of collection
   * </pre>
   *
   * Protobuf type {@code irismod.nft.Collection}
   */
  public static final class Collection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.nft.Collection)
      CollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Collection.newBuilder() to construct.
    private Collection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Collection() {
      nfts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Collection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Collection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              irismod.nft.Nft.Denom.Builder subBuilder = null;
              if (denom_ != null) {
                subBuilder = denom_.toBuilder();
              }
              denom_ = input.readMessage(irismod.nft.Nft.Denom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(denom_);
                denom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                nfts_ = new java.util.ArrayList<irismod.nft.Nft.BaseNFT>();
                mutable_bitField0_ |= 0x00000001;
              }
              nfts_.add(
                  input.readMessage(irismod.nft.Nft.BaseNFT.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          nfts_ = java.util.Collections.unmodifiableList(nfts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.nft.Nft.internal_static_irismod_nft_Collection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.nft.Nft.internal_static_irismod_nft_Collection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.nft.Nft.Collection.class, irismod.nft.Nft.Collection.Builder.class);
    }

    public static final int DENOM_FIELD_NUMBER = 1;
    private irismod.nft.Nft.Denom denom_;
    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the denom field is set.
     */
    @java.lang.Override
    public boolean hasDenom() {
      return denom_ != null;
    }
    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     * @return The denom.
     */
    @java.lang.Override
    public irismod.nft.Nft.Denom getDenom() {
      return denom_ == null ? irismod.nft.Nft.Denom.getDefaultInstance() : denom_;
    }
    /**
     * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public irismod.nft.Nft.DenomOrBuilder getDenomOrBuilder() {
      return getDenom();
    }

    public static final int NFTS_FIELD_NUMBER = 2;
    private java.util.List<irismod.nft.Nft.BaseNFT> nfts_;
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    @java.lang.Override
    public java.util.List<irismod.nft.Nft.BaseNFT> getNftsList() {
      return nfts_;
    }
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends irismod.nft.Nft.BaseNFTOrBuilder> 
        getNftsOrBuilderList() {
      return nfts_;
    }
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    @java.lang.Override
    public int getNftsCount() {
      return nfts_.size();
    }
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    @java.lang.Override
    public irismod.nft.Nft.BaseNFT getNfts(int index) {
      return nfts_.get(index);
    }
    /**
     * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
     */
    @java.lang.Override
    public irismod.nft.Nft.BaseNFTOrBuilder getNftsOrBuilder(
        int index) {
      return nfts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (denom_ != null) {
        output.writeMessage(1, getDenom());
      }
      for (int i = 0; i < nfts_.size(); i++) {
        output.writeMessage(2, nfts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (denom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDenom());
      }
      for (int i = 0; i < nfts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nfts_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.nft.Nft.Collection)) {
        return super.equals(obj);
      }
      irismod.nft.Nft.Collection other = (irismod.nft.Nft.Collection) obj;

      if (hasDenom() != other.hasDenom()) return false;
      if (hasDenom()) {
        if (!getDenom()
            .equals(other.getDenom())) return false;
      }
      if (!getNftsList()
          .equals(other.getNftsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDenom()) {
        hash = (37 * hash) + DENOM_FIELD_NUMBER;
        hash = (53 * hash) + getDenom().hashCode();
      }
      if (getNftsCount() > 0) {
        hash = (37 * hash) + NFTS_FIELD_NUMBER;
        hash = (53 * hash) + getNftsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.nft.Nft.Collection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Collection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.nft.Nft.Collection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Collection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Collection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.nft.Nft.Collection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.nft.Nft.Collection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Collection defines a type of collection
     * </pre>
     *
     * Protobuf type {@code irismod.nft.Collection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.nft.Collection)
        irismod.nft.Nft.CollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.nft.Nft.internal_static_irismod_nft_Collection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.nft.Nft.internal_static_irismod_nft_Collection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.nft.Nft.Collection.class, irismod.nft.Nft.Collection.Builder.class);
      }

      // Construct using irismod.nft.Nft.Collection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNftsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (denomBuilder_ == null) {
          denom_ = null;
        } else {
          denom_ = null;
          denomBuilder_ = null;
        }
        if (nftsBuilder_ == null) {
          nfts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nftsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.nft.Nft.internal_static_irismod_nft_Collection_descriptor;
      }

      @java.lang.Override
      public irismod.nft.Nft.Collection getDefaultInstanceForType() {
        return irismod.nft.Nft.Collection.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.nft.Nft.Collection build() {
        irismod.nft.Nft.Collection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.nft.Nft.Collection buildPartial() {
        irismod.nft.Nft.Collection result = new irismod.nft.Nft.Collection(this);
        int from_bitField0_ = bitField0_;
        if (denomBuilder_ == null) {
          result.denom_ = denom_;
        } else {
          result.denom_ = denomBuilder_.build();
        }
        if (nftsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nfts_ = java.util.Collections.unmodifiableList(nfts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nfts_ = nfts_;
        } else {
          result.nfts_ = nftsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.nft.Nft.Collection) {
          return mergeFrom((irismod.nft.Nft.Collection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.nft.Nft.Collection other) {
        if (other == irismod.nft.Nft.Collection.getDefaultInstance()) return this;
        if (other.hasDenom()) {
          mergeDenom(other.getDenom());
        }
        if (nftsBuilder_ == null) {
          if (!other.nfts_.isEmpty()) {
            if (nfts_.isEmpty()) {
              nfts_ = other.nfts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNftsIsMutable();
              nfts_.addAll(other.nfts_);
            }
            onChanged();
          }
        } else {
          if (!other.nfts_.isEmpty()) {
            if (nftsBuilder_.isEmpty()) {
              nftsBuilder_.dispose();
              nftsBuilder_ = null;
              nfts_ = other.nfts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nftsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNftsFieldBuilder() : null;
            } else {
              nftsBuilder_.addAllMessages(other.nfts_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.nft.Nft.Collection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.nft.Nft.Collection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private irismod.nft.Nft.Denom denom_;
      private com.google.protobuf.SingleFieldBuilderV3<
          irismod.nft.Nft.Denom, irismod.nft.Nft.Denom.Builder, irismod.nft.Nft.DenomOrBuilder> denomBuilder_;
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       * @return Whether the denom field is set.
       */
      public boolean hasDenom() {
        return denomBuilder_ != null || denom_ != null;
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       * @return The denom.
       */
      public irismod.nft.Nft.Denom getDenom() {
        if (denomBuilder_ == null) {
          return denom_ == null ? irismod.nft.Nft.Denom.getDefaultInstance() : denom_;
        } else {
          return denomBuilder_.getMessage();
        }
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setDenom(irismod.nft.Nft.Denom value) {
        if (denomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          denom_ = value;
          onChanged();
        } else {
          denomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setDenom(
          irismod.nft.Nft.Denom.Builder builderForValue) {
        if (denomBuilder_ == null) {
          denom_ = builderForValue.build();
          onChanged();
        } else {
          denomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeDenom(irismod.nft.Nft.Denom value) {
        if (denomBuilder_ == null) {
          if (denom_ != null) {
            denom_ =
              irismod.nft.Nft.Denom.newBuilder(denom_).mergeFrom(value).buildPartial();
          } else {
            denom_ = value;
          }
          onChanged();
        } else {
          denomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearDenom() {
        if (denomBuilder_ == null) {
          denom_ = null;
          onChanged();
        } else {
          denom_ = null;
          denomBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public irismod.nft.Nft.Denom.Builder getDenomBuilder() {
        
        onChanged();
        return getDenomFieldBuilder().getBuilder();
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      public irismod.nft.Nft.DenomOrBuilder getDenomOrBuilder() {
        if (denomBuilder_ != null) {
          return denomBuilder_.getMessageOrBuilder();
        } else {
          return denom_ == null ?
              irismod.nft.Nft.Denom.getDefaultInstance() : denom_;
        }
      }
      /**
       * <code>.irismod.nft.Denom denom = 1 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          irismod.nft.Nft.Denom, irismod.nft.Nft.Denom.Builder, irismod.nft.Nft.DenomOrBuilder> 
          getDenomFieldBuilder() {
        if (denomBuilder_ == null) {
          denomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              irismod.nft.Nft.Denom, irismod.nft.Nft.Denom.Builder, irismod.nft.Nft.DenomOrBuilder>(
                  getDenom(),
                  getParentForChildren(),
                  isClean());
          denom_ = null;
        }
        return denomBuilder_;
      }

      private java.util.List<irismod.nft.Nft.BaseNFT> nfts_ =
        java.util.Collections.emptyList();
      private void ensureNftsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nfts_ = new java.util.ArrayList<irismod.nft.Nft.BaseNFT>(nfts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          irismod.nft.Nft.BaseNFT, irismod.nft.Nft.BaseNFT.Builder, irismod.nft.Nft.BaseNFTOrBuilder> nftsBuilder_;

      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public java.util.List<irismod.nft.Nft.BaseNFT> getNftsList() {
        if (nftsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nfts_);
        } else {
          return nftsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public int getNftsCount() {
        if (nftsBuilder_ == null) {
          return nfts_.size();
        } else {
          return nftsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public irismod.nft.Nft.BaseNFT getNfts(int index) {
        if (nftsBuilder_ == null) {
          return nfts_.get(index);
        } else {
          return nftsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder setNfts(
          int index, irismod.nft.Nft.BaseNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.set(index, value);
          onChanged();
        } else {
          nftsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder setNfts(
          int index, irismod.nft.Nft.BaseNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.set(index, builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder addNfts(irismod.nft.Nft.BaseNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.add(value);
          onChanged();
        } else {
          nftsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder addNfts(
          int index, irismod.nft.Nft.BaseNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.add(index, value);
          onChanged();
        } else {
          nftsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder addNfts(
          irismod.nft.Nft.BaseNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.add(builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder addNfts(
          int index, irismod.nft.Nft.BaseNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.add(index, builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder addAllNfts(
          java.lang.Iterable<? extends irismod.nft.Nft.BaseNFT> values) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nfts_);
          onChanged();
        } else {
          nftsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder clearNfts() {
        if (nftsBuilder_ == null) {
          nfts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nftsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public Builder removeNfts(int index) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.remove(index);
          onChanged();
        } else {
          nftsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public irismod.nft.Nft.BaseNFT.Builder getNftsBuilder(
          int index) {
        return getNftsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public irismod.nft.Nft.BaseNFTOrBuilder getNftsOrBuilder(
          int index) {
        if (nftsBuilder_ == null) {
          return nfts_.get(index);  } else {
          return nftsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public java.util.List<? extends irismod.nft.Nft.BaseNFTOrBuilder> 
           getNftsOrBuilderList() {
        if (nftsBuilder_ != null) {
          return nftsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nfts_);
        }
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public irismod.nft.Nft.BaseNFT.Builder addNftsBuilder() {
        return getNftsFieldBuilder().addBuilder(
            irismod.nft.Nft.BaseNFT.getDefaultInstance());
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public irismod.nft.Nft.BaseNFT.Builder addNftsBuilder(
          int index) {
        return getNftsFieldBuilder().addBuilder(
            index, irismod.nft.Nft.BaseNFT.getDefaultInstance());
      }
      /**
       * <code>repeated .irismod.nft.BaseNFT nfts = 2 [(.gogoproto.nullable) = false, (.gogoproto.customname) = "NFTs"];</code>
       */
      public java.util.List<irismod.nft.Nft.BaseNFT.Builder> 
           getNftsBuilderList() {
        return getNftsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          irismod.nft.Nft.BaseNFT, irismod.nft.Nft.BaseNFT.Builder, irismod.nft.Nft.BaseNFTOrBuilder> 
          getNftsFieldBuilder() {
        if (nftsBuilder_ == null) {
          nftsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              irismod.nft.Nft.BaseNFT, irismod.nft.Nft.BaseNFT.Builder, irismod.nft.Nft.BaseNFTOrBuilder>(
                  nfts_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nfts_ = null;
        }
        return nftsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.nft.Collection)
    }

    // @@protoc_insertion_point(class_scope:irismod.nft.Collection)
    private static final irismod.nft.Nft.Collection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.nft.Nft.Collection();
    }

    public static irismod.nft.Nft.Collection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Collection>
        PARSER = new com.google.protobuf.AbstractParser<Collection>() {
      @java.lang.Override
      public Collection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Collection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Collection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Collection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.nft.Nft.Collection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_nft_BaseNFT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_nft_BaseNFT_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_nft_Denom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_nft_Denom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_nft_IDCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_nft_IDCollection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_nft_Owner_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_nft_Owner_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_nft_Collection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_nft_Collection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026iris_mod/nft/nft.proto\022\013irismod.nft\032\024g" +
      "ogoproto/gogo.proto\"\\\n\007BaseNFT\022\n\n\002id\030\001 \001" +
      "(\t\022\014\n\004name\030\002 \001(\t\022\024\n\003uri\030\003 \001(\tB\007\342\336\037\003URI\022\014" +
      "\n\004data\030\004 \001(\t\022\r\n\005owner\030\005 \001(\t:\004\350\240\037\001\"\214\001\n\005De" +
      "nom\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\016\n\006schema\030" +
      "\003 \001(\t\022\017\n\007creator\030\004 \001(\t\022\016\n\006symbol\030\005 \001(\t\022\027" +
      "\n\017mint_restricted\030\006 \001(\010\022\031\n\021update_restri" +
      "cted\030\007 \001(\010:\004\350\240\037\001\"d\n\014IDCollection\022%\n\010deno" +
      "m_id\030\001 \001(\tB\023\362\336\037\017yaml:\"denom_id\"\022\'\n\ttoken" +
      "_ids\030\002 \003(\tB\024\362\336\037\020yaml:\"token_ids\":\004\350\240\037\001\"w" +
      "\n\005Owner\022\017\n\007address\030\001 \001(\t\022W\n\016id_collectio" +
      "ns\030\002 \003(\0132\031.irismod.nft.IDCollectionB$\362\336\037" +
      "\013yaml:\"idcs\"\342\336\037\rIDCollections\310\336\037\000:\004\350\240\037\001\"" +
      "m\n\nCollection\022\'\n\005denom\030\001 \001(\0132\022.irismod.n" +
      "ft.DenomB\004\310\336\037\000\0220\n\004nfts\030\002 \003(\0132\024.irismod.n" +
      "ft.BaseNFTB\014\342\336\037\004NFTs\310\336\037\000:\004\350\240\037\001B2Z,github" +
      ".com/irisnet/irismod/modules/nft/types\310\341" +
      "\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
        });
    internal_static_irismod_nft_BaseNFT_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irismod_nft_BaseNFT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_nft_BaseNFT_descriptor,
        new java.lang.String[] { "Id", "Name", "Uri", "Data", "Owner", });
    internal_static_irismod_nft_Denom_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_irismod_nft_Denom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_nft_Denom_descriptor,
        new java.lang.String[] { "Id", "Name", "Schema", "Creator", "Symbol", "MintRestricted", "UpdateRestricted", });
    internal_static_irismod_nft_IDCollection_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_irismod_nft_IDCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_nft_IDCollection_descriptor,
        new java.lang.String[] { "DenomId", "TokenIds", });
    internal_static_irismod_nft_Owner_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_irismod_nft_Owner_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_nft_Owner_descriptor,
        new java.lang.String[] { "Address", "IdCollections", });
    internal_static_irismod_nft_Collection_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_irismod_nft_Collection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_nft_Collection_descriptor,
        new java.lang.String[] { "Denom", "Nfts", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.customname);
    registry.add(com.google.protobuf2.GoGoProtos.equal);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGettersAll);
    registry.add(com.google.protobuf2.GoGoProtos.moretags);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
