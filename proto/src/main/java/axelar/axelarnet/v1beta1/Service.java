// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/axelarnet/v1beta1/service.proto

package axelar.axelarnet.v1beta1;

public final class Service {
  private Service() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&axelar/axelarnet/v1beta1/service.proto" +
      "\022\030axelar.axelarnet.v1beta1\032\024gogoproto/go" +
      "go.proto\032\034google/api/annotations.proto\032!" +
      "axelar/axelarnet/v1beta1/tx.proto2\367\n\n\nMs" +
      "gService\022\212\001\n\004Link\022%.axelar.axelarnet.v1b" +
      "eta1.LinkRequest\032&.axelar.axelarnet.v1be" +
      "ta1.LinkResponse\"3\202\323\344\223\002-\"(/axelar/axelar" +
      "net/link/{recipient_chain}:\001*\022\241\001\n\016Confir" +
      "mDeposit\022/.axelar.axelarnet.v1beta1.Conf" +
      "irmDepositRequest\0320.axelar.axelarnet.v1b" +
      "eta1.ConfirmDepositResponse\",\202\323\344\223\002&\"!/ax" +
      "elar/axelarnet/confirm-deposit:\001*\022\306\001\n\027Ex" +
      "ecutePendingTransfers\0228.axelar.axelarnet" +
      ".v1beta1.ExecutePendingTransfersRequest\032" +
      "9.axelar.axelarnet.v1beta1.ExecutePendin" +
      "gTransfersResponse\"6\202\323\344\223\0020\"+/axelar/axel" +
      "arnet/execute-pending-transfers:\001*\022\246\001\n\017R" +
      "egisterIBCPath\0220.axelar.axelarnet.v1beta" +
      "1.RegisterIBCPathRequest\0321.axelar.axelar" +
      "net.v1beta1.RegisterIBCPathResponse\".\202\323\344" +
      "\223\002(\"#/axelar/axelarnet/register-ibc-path" +
      ":\001*\022\267\001\n\023AddCosmosBasedChain\0224.axelar.axe" +
      "larnet.v1beta1.AddCosmosBasedChainReques" +
      "t\0325.axelar.axelarnet.v1beta1.AddCosmosBa" +
      "sedChainResponse\"3\202\323\344\223\002-\"(/axelar/axelar" +
      "net/add-cosmos-based-chain:\001*\022\235\001\n\rRegist" +
      "erAsset\022..axelar.axelarnet.v1beta1.Regis" +
      "terAssetRequest\032/.axelar.axelarnet.v1bet" +
      "a1.RegisterAssetResponse\"+\202\323\344\223\002%\" /axela" +
      "r/axelarnet/register-asset:\001*\022\256\001\n\021RouteI" +
      "BCTransfers\0222.axelar.axelarnet.v1beta1.R" +
      "outeIBCTransfersRequest\0323.axelar.axelarn" +
      "et.v1beta1.RouteIBCTransfersResponse\"0\202\323" +
      "\344\223\002*\"%/axelar/axelarnet/route-ibc-transf" +
      "ers:\001*\022\272\001\n\024RegisterFeeCollector\0225.axelar" +
      ".axelarnet.v1beta1.RegisterFeeCollectorR" +
      "equest\0326.axelar.axelarnet.v1beta1.Regist" +
      "erFeeCollectorResponse\"3\202\323\344\223\002-\"(/axelar/" +
      "axelarnet/register-fee-collector:\001*B<Z6g" +
      "ithub.com/axelarnetwork/axelar-core/x/ax" +
      "elarnet/types\300\343\036\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          axelar.axelarnet.v1beta1.Tx.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.goprotoRegistration);
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    axelar.axelarnet.v1beta1.Tx.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
