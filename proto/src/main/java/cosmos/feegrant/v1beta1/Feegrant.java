// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/feegrant/v1beta1/feegrant.proto

package cosmos.feegrant.v1beta1;

public final class Feegrant {
  private Feegrant() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BasicAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.BasicAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getSpendLimitList();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index);
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getSpendLimitCount();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getSpendLimitOrBuilderList();
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
        int index);

    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the expiration field is set.
     */
    boolean hasExpiration();
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return The expiration.
     */
    com.google.protobuf.Timestamp getExpiration();
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder();
  }
  /**
   * <pre>
   * BasicAllowance implements Allowance with a one-time grant of tokens
   * that optionally expires. The grantee can use up to SpendLimit to cover fees.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.BasicAllowance}
   */
  public static final class BasicAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.BasicAllowance)
      BasicAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasicAllowance.newBuilder() to construct.
    private BasicAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasicAllowance() {
      spendLimit_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasicAllowance();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BasicAllowance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                spendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000001;
              }
              spendLimit_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (expiration_ != null) {
                subBuilder = expiration_.toBuilder();
              }
              expiration_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expiration_);
                expiration_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          spendLimit_ = java.util.Collections.unmodifiableList(spendLimit_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder.class);
    }

    public static final int SPEND_LIMIT_FIELD_NUMBER = 1;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> spendLimit_;
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getSpendLimitList() {
      return spendLimit_;
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getSpendLimitOrBuilderList() {
      return spendLimit_;
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getSpendLimitCount() {
      return spendLimit_.size();
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index) {
      return spendLimit_.get(index);
    }
    /**
     * <pre>
     * spend_limit specifies the maximum amount of tokens that can be spent
     * by this allowance and will be updated as tokens are spent. If it is
     * empty, there is no spend limit and any amount of coins can be spent.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
        int index) {
      return spendLimit_.get(index);
    }

    public static final int EXPIRATION_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp expiration_;
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the expiration field is set.
     */
    @java.lang.Override
    public boolean hasExpiration() {
      return expiration_ != null;
    }
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     * @return The expiration.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpiration() {
      return expiration_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
    }
    /**
     * <pre>
     * expiration specifies an optional time when this allowance expires
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder() {
      return getExpiration();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < spendLimit_.size(); i++) {
        output.writeMessage(1, spendLimit_.get(i));
      }
      if (expiration_ != null) {
        output.writeMessage(2, getExpiration());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < spendLimit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, spendLimit_.get(i));
      }
      if (expiration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getExpiration());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.BasicAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.BasicAllowance other = (cosmos.feegrant.v1beta1.Feegrant.BasicAllowance) obj;

      if (!getSpendLimitList()
          .equals(other.getSpendLimitList())) return false;
      if (hasExpiration() != other.hasExpiration()) return false;
      if (hasExpiration()) {
        if (!getExpiration()
            .equals(other.getExpiration())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSpendLimitCount() > 0) {
        hash = (37 * hash) + SPEND_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getSpendLimitList().hashCode();
      }
      if (hasExpiration()) {
        hash = (37 * hash) + EXPIRATION_FIELD_NUMBER;
        hash = (53 * hash) + getExpiration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BasicAllowance implements Allowance with a one-time grant of tokens
     * that optionally expires. The grantee can use up to SpendLimit to cover fees.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.BasicAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.BasicAllowance)
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSpendLimitFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (spendLimitBuilder_ == null) {
          spendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          spendLimitBuilder_.clear();
        }
        if (expirationBuilder_ == null) {
          expiration_ = null;
        } else {
          expiration_ = null;
          expirationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowance result = new cosmos.feegrant.v1beta1.Feegrant.BasicAllowance(this);
        int from_bitField0_ = bitField0_;
        if (spendLimitBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            spendLimit_ = java.util.Collections.unmodifiableList(spendLimit_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.spendLimit_ = spendLimit_;
        } else {
          result.spendLimit_ = spendLimitBuilder_.build();
        }
        if (expirationBuilder_ == null) {
          result.expiration_ = expiration_;
        } else {
          result.expiration_ = expirationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.BasicAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.BasicAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance()) return this;
        if (spendLimitBuilder_ == null) {
          if (!other.spendLimit_.isEmpty()) {
            if (spendLimit_.isEmpty()) {
              spendLimit_ = other.spendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSpendLimitIsMutable();
              spendLimit_.addAll(other.spendLimit_);
            }
            onChanged();
          }
        } else {
          if (!other.spendLimit_.isEmpty()) {
            if (spendLimitBuilder_.isEmpty()) {
              spendLimitBuilder_.dispose();
              spendLimitBuilder_ = null;
              spendLimit_ = other.spendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
              spendLimitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpendLimitFieldBuilder() : null;
            } else {
              spendLimitBuilder_.addAllMessages(other.spendLimit_);
            }
          }
        }
        if (other.hasExpiration()) {
          mergeExpiration(other.getExpiration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.feegrant.v1beta1.Feegrant.BasicAllowance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.feegrant.v1beta1.Feegrant.BasicAllowance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> spendLimit_ =
        java.util.Collections.emptyList();
      private void ensureSpendLimitIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          spendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(spendLimit_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> spendLimitBuilder_;

      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getSpendLimitList() {
        if (spendLimitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spendLimit_);
        } else {
          return spendLimitBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getSpendLimitCount() {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.size();
        } else {
          return spendLimitBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getSpendLimit(int index) {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.get(index);
        } else {
          return spendLimitBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.set(index, value);
          onChanged();
        } else {
          spendLimitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.set(index, builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addSpendLimit(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.add(value);
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (spendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpendLimitIsMutable();
          spendLimit_.add(index, value);
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addSpendLimit(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.add(builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.add(index, builderForValue.build());
          onChanged();
        } else {
          spendLimitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllSpendLimit(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spendLimit_);
          onChanged();
        } else {
          spendLimitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearSpendLimit() {
        if (spendLimitBuilder_ == null) {
          spendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          spendLimitBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeSpendLimit(int index) {
        if (spendLimitBuilder_ == null) {
          ensureSpendLimitIsMutable();
          spendLimit_.remove(index);
          onChanged();
        } else {
          spendLimitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getSpendLimitBuilder(
          int index) {
        return getSpendLimitFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getSpendLimitOrBuilder(
          int index) {
        if (spendLimitBuilder_ == null) {
          return spendLimit_.get(index);  } else {
          return spendLimitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getSpendLimitOrBuilderList() {
        if (spendLimitBuilder_ != null) {
          return spendLimitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spendLimit_);
        }
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addSpendLimitBuilder() {
        return getSpendLimitFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addSpendLimitBuilder(
          int index) {
        return getSpendLimitFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * spend_limit specifies the maximum amount of tokens that can be spent
       * by this allowance and will be updated as tokens are spent. If it is
       * empty, there is no spend limit and any amount of coins can be spent.
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin spend_limit = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getSpendLimitBuilderList() {
        return getSpendLimitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getSpendLimitFieldBuilder() {
        if (spendLimitBuilder_ == null) {
          spendLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  spendLimit_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          spendLimit_ = null;
        }
        return spendLimitBuilder_;
      }

      private com.google.protobuf.Timestamp expiration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expirationBuilder_;
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       * @return Whether the expiration field is set.
       */
      public boolean hasExpiration() {
        return expirationBuilder_ != null || expiration_ != null;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       * @return The expiration.
       */
      public com.google.protobuf.Timestamp getExpiration() {
        if (expirationBuilder_ == null) {
          return expiration_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
        } else {
          return expirationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setExpiration(com.google.protobuf.Timestamp value) {
        if (expirationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expiration_ = value;
          onChanged();
        } else {
          expirationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setExpiration(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expirationBuilder_ == null) {
          expiration_ = builderForValue.build();
          onChanged();
        } else {
          expirationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeExpiration(com.google.protobuf.Timestamp value) {
        if (expirationBuilder_ == null) {
          if (expiration_ != null) {
            expiration_ =
              com.google.protobuf.Timestamp.newBuilder(expiration_).mergeFrom(value).buildPartial();
          } else {
            expiration_ = value;
          }
          onChanged();
        } else {
          expirationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder clearExpiration() {
        if (expirationBuilder_ == null) {
          expiration_ = null;
          onChanged();
        } else {
          expiration_ = null;
          expirationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpirationBuilder() {
        
        onChanged();
        return getExpirationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpirationOrBuilder() {
        if (expirationBuilder_ != null) {
          return expirationBuilder_.getMessageOrBuilder();
        } else {
          return expiration_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expiration_;
        }
      }
      /**
       * <pre>
       * expiration specifies an optional time when this allowance expires
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expiration = 2 [(.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpirationFieldBuilder() {
        if (expirationBuilder_ == null) {
          expirationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpiration(),
                  getParentForChildren(),
                  isClean());
          expiration_ = null;
        }
        return expirationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.BasicAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.BasicAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.BasicAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.BasicAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasicAllowance>
        PARSER = new com.google.protobuf.AbstractParser<BasicAllowance>() {
      @java.lang.Override
      public BasicAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BasicAllowance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasicAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasicAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PeriodicAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.PeriodicAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the basic field is set.
     */
    boolean hasBasic();
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     * @return The basic.
     */
    cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic();
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     */
    cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder();

    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return Whether the period field is set.
     */
    boolean hasPeriod();
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return The period.
     */
    com.google.protobuf.Duration getPeriod();
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    com.google.protobuf.DurationOrBuilder getPeriodOrBuilder();

    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getPeriodSpendLimitList();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index);
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getPeriodSpendLimitCount();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodSpendLimitOrBuilderList();
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
        int index);

    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getPeriodCanSpendList();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index);
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getPeriodCanSpendCount();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodCanSpendOrBuilderList();
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
        int index);

    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the periodReset field is set.
     */
    boolean hasPeriodReset();
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The periodReset.
     */
    com.google.protobuf.Timestamp getPeriodReset();
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder();
  }
  /**
   * <pre>
   * PeriodicAllowance extends Allowance to allow for both a maximum cap,
   * as well as a limit per time period.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
   */
  public static final class PeriodicAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
      PeriodicAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PeriodicAllowance.newBuilder() to construct.
    private PeriodicAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PeriodicAllowance() {
      periodSpendLimit_ = java.util.Collections.emptyList();
      periodCanSpend_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PeriodicAllowance();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PeriodicAllowance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder subBuilder = null;
              if (basic_ != null) {
                subBuilder = basic_.toBuilder();
              }
              basic_ = input.readMessage(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basic_);
                basic_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (period_ != null) {
                subBuilder = period_.toBuilder();
              }
              period_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(period_);
                period_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                periodSpendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000001;
              }
              periodSpendLimit_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                periodCanSpend_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000002;
              }
              periodCanSpend_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 42: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (periodReset_ != null) {
                subBuilder = periodReset_.toBuilder();
              }
              periodReset_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(periodReset_);
                periodReset_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          periodSpendLimit_ = java.util.Collections.unmodifiableList(periodSpendLimit_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          periodCanSpend_ = java.util.Collections.unmodifiableList(periodCanSpend_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder.class);
    }

    public static final int BASIC_FIELD_NUMBER = 1;
    private cosmos.feegrant.v1beta1.Feegrant.BasicAllowance basic_;
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the basic field is set.
     */
    @java.lang.Override
    public boolean hasBasic() {
      return basic_ != null;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     * @return The basic.
     */
    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic() {
      return basic_ == null ? cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
    }
    /**
     * <pre>
     * basic specifies a struct of `BasicAllowance`
     * </pre>
     *
     * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder() {
      return getBasic();
    }

    public static final int PERIOD_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration period_;
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return Whether the period field is set.
     */
    @java.lang.Override
    public boolean hasPeriod() {
      return period_ != null;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return The period.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getPeriod() {
      return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
    }
    /**
     * <pre>
     * period specifies the time duration in which period_spend_limit coins can
     * be spent before that allowance is reset
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
      return getPeriod();
    }

    public static final int PERIOD_SPEND_LIMIT_FIELD_NUMBER = 3;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodSpendLimit_;
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodSpendLimitList() {
      return periodSpendLimit_;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodSpendLimitOrBuilderList() {
      return periodSpendLimit_;
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getPeriodSpendLimitCount() {
      return periodSpendLimit_.size();
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index) {
      return periodSpendLimit_.get(index);
    }
    /**
     * <pre>
     * period_spend_limit specifies the maximum number of coins that can be spent
     * in the period
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
        int index) {
      return periodSpendLimit_.get(index);
    }

    public static final int PERIOD_CAN_SPEND_FIELD_NUMBER = 4;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodCanSpend_;
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodCanSpendList() {
      return periodCanSpend_;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPeriodCanSpendOrBuilderList() {
      return periodCanSpend_;
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getPeriodCanSpendCount() {
      return periodCanSpend_.size();
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index) {
      return periodCanSpend_.get(index);
    }
    /**
     * <pre>
     * period_can_spend is the number of coins left to be spent before the period_reset time
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
        int index) {
      return periodCanSpend_.get(index);
    }

    public static final int PERIOD_RESET_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp periodReset_;
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the periodReset field is set.
     */
    @java.lang.Override
    public boolean hasPeriodReset() {
      return periodReset_ != null;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The periodReset.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getPeriodReset() {
      return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
    }
    /**
     * <pre>
     * period_reset is the time at which this period resets and a new one begins,
     * it is calculated from the start time of the first transaction after the
     * last period ended
     * </pre>
     *
     * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
      return getPeriodReset();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basic_ != null) {
        output.writeMessage(1, getBasic());
      }
      if (period_ != null) {
        output.writeMessage(2, getPeriod());
      }
      for (int i = 0; i < periodSpendLimit_.size(); i++) {
        output.writeMessage(3, periodSpendLimit_.get(i));
      }
      for (int i = 0; i < periodCanSpend_.size(); i++) {
        output.writeMessage(4, periodCanSpend_.get(i));
      }
      if (periodReset_ != null) {
        output.writeMessage(5, getPeriodReset());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basic_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasic());
      }
      if (period_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPeriod());
      }
      for (int i = 0; i < periodSpendLimit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, periodSpendLimit_.get(i));
      }
      for (int i = 0; i < periodCanSpend_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, periodCanSpend_.get(i));
      }
      if (periodReset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPeriodReset());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance other = (cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance) obj;

      if (hasBasic() != other.hasBasic()) return false;
      if (hasBasic()) {
        if (!getBasic()
            .equals(other.getBasic())) return false;
      }
      if (hasPeriod() != other.hasPeriod()) return false;
      if (hasPeriod()) {
        if (!getPeriod()
            .equals(other.getPeriod())) return false;
      }
      if (!getPeriodSpendLimitList()
          .equals(other.getPeriodSpendLimitList())) return false;
      if (!getPeriodCanSpendList()
          .equals(other.getPeriodCanSpendList())) return false;
      if (hasPeriodReset() != other.hasPeriodReset()) return false;
      if (hasPeriodReset()) {
        if (!getPeriodReset()
            .equals(other.getPeriodReset())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasic()) {
        hash = (37 * hash) + BASIC_FIELD_NUMBER;
        hash = (53 * hash) + getBasic().hashCode();
      }
      if (hasPeriod()) {
        hash = (37 * hash) + PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getPeriod().hashCode();
      }
      if (getPeriodSpendLimitCount() > 0) {
        hash = (37 * hash) + PERIOD_SPEND_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodSpendLimitList().hashCode();
      }
      if (getPeriodCanSpendCount() > 0) {
        hash = (37 * hash) + PERIOD_CAN_SPEND_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodCanSpendList().hashCode();
      }
      if (hasPeriodReset()) {
        hash = (37 * hash) + PERIOD_RESET_FIELD_NUMBER;
        hash = (53 * hash) + getPeriodReset().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PeriodicAllowance extends Allowance to allow for both a maximum cap,
     * as well as a limit per time period.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.PeriodicAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.PeriodicAllowance)
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.class, cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPeriodSpendLimitFieldBuilder();
          getPeriodCanSpendFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (basicBuilder_ == null) {
          basic_ = null;
        } else {
          basic_ = null;
          basicBuilder_ = null;
        }
        if (periodBuilder_ == null) {
          period_ = null;
        } else {
          period_ = null;
          periodBuilder_ = null;
        }
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          periodSpendLimitBuilder_.clear();
        }
        if (periodCanSpendBuilder_ == null) {
          periodCanSpend_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          periodCanSpendBuilder_.clear();
        }
        if (periodResetBuilder_ == null) {
          periodReset_ = null;
        } else {
          periodReset_ = null;
          periodResetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance result = new cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance(this);
        int from_bitField0_ = bitField0_;
        if (basicBuilder_ == null) {
          result.basic_ = basic_;
        } else {
          result.basic_ = basicBuilder_.build();
        }
        if (periodBuilder_ == null) {
          result.period_ = period_;
        } else {
          result.period_ = periodBuilder_.build();
        }
        if (periodSpendLimitBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            periodSpendLimit_ = java.util.Collections.unmodifiableList(periodSpendLimit_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.periodSpendLimit_ = periodSpendLimit_;
        } else {
          result.periodSpendLimit_ = periodSpendLimitBuilder_.build();
        }
        if (periodCanSpendBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            periodCanSpend_ = java.util.Collections.unmodifiableList(periodCanSpend_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.periodCanSpend_ = periodCanSpend_;
        } else {
          result.periodCanSpend_ = periodCanSpendBuilder_.build();
        }
        if (periodResetBuilder_ == null) {
          result.periodReset_ = periodReset_;
        } else {
          result.periodReset_ = periodResetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance.getDefaultInstance()) return this;
        if (other.hasBasic()) {
          mergeBasic(other.getBasic());
        }
        if (other.hasPeriod()) {
          mergePeriod(other.getPeriod());
        }
        if (periodSpendLimitBuilder_ == null) {
          if (!other.periodSpendLimit_.isEmpty()) {
            if (periodSpendLimit_.isEmpty()) {
              periodSpendLimit_ = other.periodSpendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePeriodSpendLimitIsMutable();
              periodSpendLimit_.addAll(other.periodSpendLimit_);
            }
            onChanged();
          }
        } else {
          if (!other.periodSpendLimit_.isEmpty()) {
            if (periodSpendLimitBuilder_.isEmpty()) {
              periodSpendLimitBuilder_.dispose();
              periodSpendLimitBuilder_ = null;
              periodSpendLimit_ = other.periodSpendLimit_;
              bitField0_ = (bitField0_ & ~0x00000001);
              periodSpendLimitBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPeriodSpendLimitFieldBuilder() : null;
            } else {
              periodSpendLimitBuilder_.addAllMessages(other.periodSpendLimit_);
            }
          }
        }
        if (periodCanSpendBuilder_ == null) {
          if (!other.periodCanSpend_.isEmpty()) {
            if (periodCanSpend_.isEmpty()) {
              periodCanSpend_ = other.periodCanSpend_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePeriodCanSpendIsMutable();
              periodCanSpend_.addAll(other.periodCanSpend_);
            }
            onChanged();
          }
        } else {
          if (!other.periodCanSpend_.isEmpty()) {
            if (periodCanSpendBuilder_.isEmpty()) {
              periodCanSpendBuilder_.dispose();
              periodCanSpendBuilder_ = null;
              periodCanSpend_ = other.periodCanSpend_;
              bitField0_ = (bitField0_ & ~0x00000002);
              periodCanSpendBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPeriodCanSpendFieldBuilder() : null;
            } else {
              periodCanSpendBuilder_.addAllMessages(other.periodCanSpend_);
            }
          }
        }
        if (other.hasPeriodReset()) {
          mergePeriodReset(other.getPeriodReset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private cosmos.feegrant.v1beta1.Feegrant.BasicAllowance basic_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder> basicBuilder_;
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       * @return Whether the basic field is set.
       */
      public boolean hasBasic() {
        return basicBuilder_ != null || basic_ != null;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       * @return The basic.
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance getBasic() {
        if (basicBuilder_ == null) {
          return basic_ == null ? cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
        } else {
          return basicBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setBasic(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance value) {
        if (basicBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basic_ = value;
          onChanged();
        } else {
          basicBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setBasic(
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder builderForValue) {
        if (basicBuilder_ == null) {
          basic_ = builderForValue.build();
          onChanged();
        } else {
          basicBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeBasic(cosmos.feegrant.v1beta1.Feegrant.BasicAllowance value) {
        if (basicBuilder_ == null) {
          if (basic_ != null) {
            basic_ =
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.newBuilder(basic_).mergeFrom(value).buildPartial();
          } else {
            basic_ = value;
          }
          onChanged();
        } else {
          basicBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearBasic() {
        if (basicBuilder_ == null) {
          basic_ = null;
          onChanged();
        } else {
          basic_ = null;
          basicBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder getBasicBuilder() {
        
        onChanged();
        return getBasicFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder getBasicOrBuilder() {
        if (basicBuilder_ != null) {
          return basicBuilder_.getMessageOrBuilder();
        } else {
          return basic_ == null ?
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.getDefaultInstance() : basic_;
        }
      }
      /**
       * <pre>
       * basic specifies a struct of `BasicAllowance`
       * </pre>
       *
       * <code>.cosmos.feegrant.v1beta1.BasicAllowance basic = 1 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder> 
          getBasicFieldBuilder() {
        if (basicBuilder_ == null) {
          basicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.feegrant.v1beta1.Feegrant.BasicAllowance, cosmos.feegrant.v1beta1.Feegrant.BasicAllowance.Builder, cosmos.feegrant.v1beta1.Feegrant.BasicAllowanceOrBuilder>(
                  getBasic(),
                  getParentForChildren(),
                  isClean());
          basic_ = null;
        }
        return basicBuilder_;
      }

      private com.google.protobuf.Duration period_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> periodBuilder_;
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       * @return Whether the period field is set.
       */
      public boolean hasPeriod() {
        return periodBuilder_ != null || period_ != null;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       * @return The period.
       */
      public com.google.protobuf.Duration getPeriod() {
        if (periodBuilder_ == null) {
          return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
        } else {
          return periodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public Builder setPeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          period_ = value;
          onChanged();
        } else {
          periodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public Builder setPeriod(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (periodBuilder_ == null) {
          period_ = builderForValue.build();
          onChanged();
        } else {
          periodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public Builder mergePeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (period_ != null) {
            period_ =
              com.google.protobuf.Duration.newBuilder(period_).mergeFrom(value).buildPartial();
          } else {
            period_ = value;
          }
          onChanged();
        } else {
          periodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public Builder clearPeriod() {
        if (periodBuilder_ == null) {
          period_ = null;
          onChanged();
        } else {
          period_ = null;
          periodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public com.google.protobuf.Duration.Builder getPeriodBuilder() {
        
        onChanged();
        return getPeriodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
        if (periodBuilder_ != null) {
          return periodBuilder_.getMessageOrBuilder();
        } else {
          return period_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : period_;
        }
      }
      /**
       * <pre>
       * period specifies the time duration in which period_spend_limit coins can
       * be spent before that allowance is reset
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getPeriodFieldBuilder() {
        if (periodBuilder_ == null) {
          periodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getPeriod(),
                  getParentForChildren(),
                  isClean());
          period_ = null;
        }
        return periodBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodSpendLimit_ =
        java.util.Collections.emptyList();
      private void ensurePeriodSpendLimitIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          periodSpendLimit_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(periodSpendLimit_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> periodSpendLimitBuilder_;

      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodSpendLimitList() {
        if (periodSpendLimitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodSpendLimit_);
        } else {
          return periodSpendLimitBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getPeriodSpendLimitCount() {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.size();
        } else {
          return periodSpendLimitBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodSpendLimit(int index) {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.get(index);
        } else {
          return periodSpendLimitBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.set(index, value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodSpendLimit(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodSpendLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(index, value);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodSpendLimit(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodSpendLimit(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodSpendLimitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllPeriodSpendLimit(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodSpendLimit_);
          onChanged();
        } else {
          periodSpendLimitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearPeriodSpendLimit() {
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          periodSpendLimitBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removePeriodSpendLimit(int index) {
        if (periodSpendLimitBuilder_ == null) {
          ensurePeriodSpendLimitIsMutable();
          periodSpendLimit_.remove(index);
          onChanged();
        } else {
          periodSpendLimitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getPeriodSpendLimitBuilder(
          int index) {
        return getPeriodSpendLimitFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodSpendLimitOrBuilder(
          int index) {
        if (periodSpendLimitBuilder_ == null) {
          return periodSpendLimit_.get(index);  } else {
          return periodSpendLimitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getPeriodSpendLimitOrBuilderList() {
        if (periodSpendLimitBuilder_ != null) {
          return periodSpendLimitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodSpendLimit_);
        }
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodSpendLimitBuilder() {
        return getPeriodSpendLimitFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodSpendLimitBuilder(
          int index) {
        return getPeriodSpendLimitFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_spend_limit specifies the maximum number of coins that can be spent
       * in the period
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_spend_limit = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getPeriodSpendLimitBuilderList() {
        return getPeriodSpendLimitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getPeriodSpendLimitFieldBuilder() {
        if (periodSpendLimitBuilder_ == null) {
          periodSpendLimitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  periodSpendLimit_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          periodSpendLimit_ = null;
        }
        return periodSpendLimitBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> periodCanSpend_ =
        java.util.Collections.emptyList();
      private void ensurePeriodCanSpendIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          periodCanSpend_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(periodCanSpend_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> periodCanSpendBuilder_;

      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPeriodCanSpendList() {
        if (periodCanSpendBuilder_ == null) {
          return java.util.Collections.unmodifiableList(periodCanSpend_);
        } else {
          return periodCanSpendBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getPeriodCanSpendCount() {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.size();
        } else {
          return periodCanSpendBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getPeriodCanSpend(int index) {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.get(index);
        } else {
          return periodCanSpendBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.set(index, value);
          onChanged();
        } else {
          periodCanSpendBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.set(index, builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodCanSpend(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(value);
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (periodCanSpendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(index, value);
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodCanSpend(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPeriodCanSpend(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.add(index, builderForValue.build());
          onChanged();
        } else {
          periodCanSpendBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllPeriodCanSpend(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, periodCanSpend_);
          onChanged();
        } else {
          periodCanSpendBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearPeriodCanSpend() {
        if (periodCanSpendBuilder_ == null) {
          periodCanSpend_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          periodCanSpendBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removePeriodCanSpend(int index) {
        if (periodCanSpendBuilder_ == null) {
          ensurePeriodCanSpendIsMutable();
          periodCanSpend_.remove(index);
          onChanged();
        } else {
          periodCanSpendBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getPeriodCanSpendBuilder(
          int index) {
        return getPeriodCanSpendFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPeriodCanSpendOrBuilder(
          int index) {
        if (periodCanSpendBuilder_ == null) {
          return periodCanSpend_.get(index);  } else {
          return periodCanSpendBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getPeriodCanSpendOrBuilderList() {
        if (periodCanSpendBuilder_ != null) {
          return periodCanSpendBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(periodCanSpend_);
        }
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodCanSpendBuilder() {
        return getPeriodCanSpendFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPeriodCanSpendBuilder(
          int index) {
        return getPeriodCanSpendFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * period_can_spend is the number of coins left to be spent before the period_reset time
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin period_can_spend = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getPeriodCanSpendBuilderList() {
        return getPeriodCanSpendFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getPeriodCanSpendFieldBuilder() {
        if (periodCanSpendBuilder_ == null) {
          periodCanSpendBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  periodCanSpend_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          periodCanSpend_ = null;
        }
        return periodCanSpendBuilder_;
      }

      private com.google.protobuf.Timestamp periodReset_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> periodResetBuilder_;
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return Whether the periodReset field is set.
       */
      public boolean hasPeriodReset() {
        return periodResetBuilder_ != null || periodReset_ != null;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return The periodReset.
       */
      public com.google.protobuf.Timestamp getPeriodReset() {
        if (periodResetBuilder_ == null) {
          return periodReset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
        } else {
          return periodResetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setPeriodReset(com.google.protobuf.Timestamp value) {
        if (periodResetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          periodReset_ = value;
          onChanged();
        } else {
          periodResetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setPeriodReset(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (periodResetBuilder_ == null) {
          periodReset_ = builderForValue.build();
          onChanged();
        } else {
          periodResetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergePeriodReset(com.google.protobuf.Timestamp value) {
        if (periodResetBuilder_ == null) {
          if (periodReset_ != null) {
            periodReset_ =
              com.google.protobuf.Timestamp.newBuilder(periodReset_).mergeFrom(value).buildPartial();
          } else {
            periodReset_ = value;
          }
          onChanged();
        } else {
          periodResetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearPeriodReset() {
        if (periodResetBuilder_ == null) {
          periodReset_ = null;
          onChanged();
        } else {
          periodReset_ = null;
          periodResetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getPeriodResetBuilder() {
        
        onChanged();
        return getPeriodResetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getPeriodResetOrBuilder() {
        if (periodResetBuilder_ != null) {
          return periodResetBuilder_.getMessageOrBuilder();
        } else {
          return periodReset_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : periodReset_;
        }
      }
      /**
       * <pre>
       * period_reset is the time at which this period resets and a new one begins,
       * it is calculated from the start time of the first transaction after the
       * last period ended
       * </pre>
       *
       * <code>.google.protobuf.Timestamp period_reset = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getPeriodResetFieldBuilder() {
        if (periodResetBuilder_ == null) {
          periodResetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getPeriodReset(),
                  getParentForChildren(),
                  isClean());
          periodReset_ = null;
        }
        return periodResetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.PeriodicAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PeriodicAllowance>
        PARSER = new com.google.protobuf.AbstractParser<PeriodicAllowance>() {
      @java.lang.Override
      public PeriodicAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PeriodicAllowance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PeriodicAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PeriodicAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.PeriodicAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AllowedMsgAllowanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    boolean hasAllowance();
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return The allowance.
     */
    com.google.protobuf2.Any getAllowance();
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     */
    com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder();

    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return A list containing the allowedMessages.
     */
    java.util.List<java.lang.String>
        getAllowedMessagesList();
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return The count of allowedMessages.
     */
    int getAllowedMessagesCount();
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the element to return.
     * @return The allowedMessages at the given index.
     */
    java.lang.String getAllowedMessages(int index);
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedMessages at the given index.
     */
    com.google.protobuf.ByteString
        getAllowedMessagesBytes(int index);
  }
  /**
   * <pre>
   * AllowedMsgAllowance creates allowance only for specified message types.
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.AllowedMsgAllowance}
   */
  public static final class AllowedMsgAllowance extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
      AllowedMsgAllowanceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AllowedMsgAllowance.newBuilder() to construct.
    private AllowedMsgAllowance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AllowedMsgAllowance() {
      allowedMessages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AllowedMsgAllowance();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AllowedMsgAllowance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf2.Any.Builder subBuilder = null;
              if (allowance_ != null) {
                subBuilder = allowance_.toBuilder();
              }
              allowance_ = input.readMessage(com.google.protobuf2.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allowance_);
                allowance_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                allowedMessages_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              allowedMessages_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          allowedMessages_ = allowedMessages_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.class, cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.Builder.class);
    }

    public static final int ALLOWANCE_FIELD_NUMBER = 1;
    private com.google.protobuf2.Any allowance_;
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    @java.lang.Override
    public boolean hasAllowance() {
      return allowance_ != null;
    }
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return The allowance.
     */
    @java.lang.Override
    public com.google.protobuf2.Any getAllowance() {
      return allowance_ == null ? com.google.protobuf2.Any.getDefaultInstance() : allowance_;
    }
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     */
    @java.lang.Override
    public com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder() {
      return getAllowance();
    }

    public static final int ALLOWED_MESSAGES_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList allowedMessages_;
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return A list containing the allowedMessages.
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedMessagesList() {
      return allowedMessages_;
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @return The count of allowedMessages.
     */
    public int getAllowedMessagesCount() {
      return allowedMessages_.size();
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the element to return.
     * @return The allowedMessages at the given index.
     */
    public java.lang.String getAllowedMessages(int index) {
      return allowedMessages_.get(index);
    }
    /**
     * <pre>
     * allowed_messages are the messages for which the grantee has the access.
     * </pre>
     *
     * <code>repeated string allowed_messages = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedMessages at the given index.
     */
    public com.google.protobuf.ByteString
        getAllowedMessagesBytes(int index) {
      return allowedMessages_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (allowance_ != null) {
        output.writeMessage(1, getAllowance());
      }
      for (int i = 0; i < allowedMessages_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, allowedMessages_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (allowance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAllowance());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allowedMessages_.size(); i++) {
          dataSize += computeStringSizeNoTag(allowedMessages_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAllowedMessagesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance other = (cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance) obj;

      if (hasAllowance() != other.hasAllowance()) return false;
      if (hasAllowance()) {
        if (!getAllowance()
            .equals(other.getAllowance())) return false;
      }
      if (!getAllowedMessagesList()
          .equals(other.getAllowedMessagesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAllowance()) {
        hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAllowance().hashCode();
      }
      if (getAllowedMessagesCount() > 0) {
        hash = (37 * hash) + ALLOWED_MESSAGES_FIELD_NUMBER;
        hash = (53 * hash) + getAllowedMessagesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AllowedMsgAllowance creates allowance only for specified message types.
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.AllowedMsgAllowance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.class, cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (allowanceBuilder_ == null) {
          allowance_ = null;
        } else {
          allowance_ = null;
          allowanceBuilder_ = null;
        }
        allowedMessages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance build() {
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance result = new cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance(this);
        int from_bitField0_ = bitField0_;
        if (allowanceBuilder_ == null) {
          result.allowance_ = allowance_;
        } else {
          result.allowance_ = allowanceBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          allowedMessages_ = allowedMessages_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.allowedMessages_ = allowedMessages_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance.getDefaultInstance()) return this;
        if (other.hasAllowance()) {
          mergeAllowance(other.getAllowance());
        }
        if (!other.allowedMessages_.isEmpty()) {
          if (allowedMessages_.isEmpty()) {
            allowedMessages_ = other.allowedMessages_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAllowedMessagesIsMutable();
            allowedMessages_.addAll(other.allowedMessages_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf2.Any allowance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> allowanceBuilder_;
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       * @return Whether the allowance field is set.
       */
      public boolean hasAllowance() {
        return allowanceBuilder_ != null || allowance_ != null;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       * @return The allowance.
       */
      public com.google.protobuf2.Any getAllowance() {
        if (allowanceBuilder_ == null) {
          return allowance_ == null ? com.google.protobuf2.Any.getDefaultInstance() : allowance_;
        } else {
          return allowanceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder setAllowance(com.google.protobuf2.Any value) {
        if (allowanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowance_ = value;
          onChanged();
        } else {
          allowanceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder setAllowance(
          com.google.protobuf2.Any.Builder builderForValue) {
        if (allowanceBuilder_ == null) {
          allowance_ = builderForValue.build();
          onChanged();
        } else {
          allowanceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder mergeAllowance(com.google.protobuf2.Any value) {
        if (allowanceBuilder_ == null) {
          if (allowance_ != null) {
            allowance_ =
              com.google.protobuf2.Any.newBuilder(allowance_).mergeFrom(value).buildPartial();
          } else {
            allowance_ = value;
          }
          onChanged();
        } else {
          allowanceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder clearAllowance() {
        if (allowanceBuilder_ == null) {
          allowance_ = null;
          onChanged();
        } else {
          allowance_ = null;
          allowanceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public com.google.protobuf2.Any.Builder getAllowanceBuilder() {
        
        onChanged();
        return getAllowanceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder() {
        if (allowanceBuilder_ != null) {
          return allowanceBuilder_.getMessageOrBuilder();
        } else {
          return allowance_ == null ?
              com.google.protobuf2.Any.getDefaultInstance() : allowance_;
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 1 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> 
          getAllowanceFieldBuilder() {
        if (allowanceBuilder_ == null) {
          allowanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder>(
                  getAllowance(),
                  getParentForChildren(),
                  isClean());
          allowance_ = null;
        }
        return allowanceBuilder_;
      }

      private com.google.protobuf.LazyStringList allowedMessages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAllowedMessagesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          allowedMessages_ = new com.google.protobuf.LazyStringArrayList(allowedMessages_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return A list containing the allowedMessages.
       */
      public com.google.protobuf.ProtocolStringList
          getAllowedMessagesList() {
        return allowedMessages_.getUnmodifiableView();
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return The count of allowedMessages.
       */
      public int getAllowedMessagesCount() {
        return allowedMessages_.size();
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index of the element to return.
       * @return The allowedMessages at the given index.
       */
      public java.lang.String getAllowedMessages(int index) {
        return allowedMessages_.get(index);
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the allowedMessages at the given index.
       */
      public com.google.protobuf.ByteString
          getAllowedMessagesBytes(int index) {
        return allowedMessages_.getByteString(index);
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param index The index to set the value at.
       * @param value The allowedMessages to set.
       * @return This builder for chaining.
       */
      public Builder setAllowedMessages(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedMessagesIsMutable();
        allowedMessages_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param value The allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedMessages(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAllowedMessagesIsMutable();
        allowedMessages_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param values The allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllAllowedMessages(
          java.lang.Iterable<java.lang.String> values) {
        ensureAllowedMessagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allowedMessages_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowedMessages() {
        allowedMessages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * allowed_messages are the messages for which the grantee has the access.
       * </pre>
       *
       * <code>repeated string allowed_messages = 2;</code>
       * @param value The bytes of the allowedMessages to add.
       * @return This builder for chaining.
       */
      public Builder addAllowedMessagesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureAllowedMessagesIsMutable();
        allowedMessages_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.AllowedMsgAllowance)
    private static final cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AllowedMsgAllowance>
        PARSER = new com.google.protobuf.AbstractParser<AllowedMsgAllowance>() {
      @java.lang.Override
      public AllowedMsgAllowance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllowedMsgAllowance(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AllowedMsgAllowance> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AllowedMsgAllowance> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.AllowedMsgAllowance getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GrantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.feegrant.v1beta1.Grant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The granter.
     */
    java.lang.String getGranter();
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for granter.
     */
    com.google.protobuf.ByteString
        getGranterBytes();

    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The grantee.
     */
    java.lang.String getGrantee();
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for grantee.
     */
    com.google.protobuf.ByteString
        getGranteeBytes();

    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    boolean hasAllowance();
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return The allowance.
     */
    com.google.protobuf2.Any getAllowance();
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     */
    com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder();
  }
  /**
   * <pre>
   * Grant is stored in the KVStore to record a grant with full context
   * </pre>
   *
   * Protobuf type {@code cosmos.feegrant.v1beta1.Grant}
   */
  public static final class Grant extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.feegrant.v1beta1.Grant)
      GrantOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Grant.newBuilder() to construct.
    private Grant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Grant() {
      granter_ = "";
      grantee_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Grant();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Grant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              granter_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              grantee_ = s;
              break;
            }
            case 26: {
              com.google.protobuf2.Any.Builder subBuilder = null;
              if (allowance_ != null) {
                subBuilder = allowance_.toBuilder();
              }
              allowance_ = input.readMessage(com.google.protobuf2.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allowance_);
                allowance_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.feegrant.v1beta1.Feegrant.Grant.class, cosmos.feegrant.v1beta1.Feegrant.Grant.Builder.class);
    }

    public static final int GRANTER_FIELD_NUMBER = 1;
    private volatile java.lang.Object granter_;
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The granter.
     */
    @java.lang.Override
    public java.lang.String getGranter() {
      java.lang.Object ref = granter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        granter_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * granter is the address of the user granting an allowance of their funds.
     * </pre>
     *
     * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for granter.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGranterBytes() {
      java.lang.Object ref = granter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        granter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRANTEE_FIELD_NUMBER = 2;
    private volatile java.lang.Object grantee_;
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The grantee.
     */
    @java.lang.Override
    public java.lang.String getGrantee() {
      java.lang.Object ref = grantee_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        grantee_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * grantee is the address of the user being granted an allowance of another user's funds.
     * </pre>
     *
     * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return The bytes for grantee.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGranteeBytes() {
      java.lang.Object ref = grantee_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        grantee_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLOWANCE_FIELD_NUMBER = 3;
    private com.google.protobuf2.Any allowance_;
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return Whether the allowance field is set.
     */
    @java.lang.Override
    public boolean hasAllowance() {
      return allowance_ != null;
    }
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     * @return The allowance.
     */
    @java.lang.Override
    public com.google.protobuf2.Any getAllowance() {
      return allowance_ == null ? com.google.protobuf2.Any.getDefaultInstance() : allowance_;
    }
    /**
     * <pre>
     * allowance can be any of basic and filtered fee allowance.
     * </pre>
     *
     * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
     */
    @java.lang.Override
    public com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder() {
      return getAllowance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGranterBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, granter_);
      }
      if (!getGranteeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, grantee_);
      }
      if (allowance_ != null) {
        output.writeMessage(3, getAllowance());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGranterBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, granter_);
      }
      if (!getGranteeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, grantee_);
      }
      if (allowance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAllowance());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.feegrant.v1beta1.Feegrant.Grant)) {
        return super.equals(obj);
      }
      cosmos.feegrant.v1beta1.Feegrant.Grant other = (cosmos.feegrant.v1beta1.Feegrant.Grant) obj;

      if (!getGranter()
          .equals(other.getGranter())) return false;
      if (!getGrantee()
          .equals(other.getGrantee())) return false;
      if (hasAllowance() != other.hasAllowance()) return false;
      if (hasAllowance()) {
        if (!getAllowance()
            .equals(other.getAllowance())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GRANTER_FIELD_NUMBER;
      hash = (53 * hash) + getGranter().hashCode();
      hash = (37 * hash) + GRANTEE_FIELD_NUMBER;
      hash = (53 * hash) + getGrantee().hashCode();
      if (hasAllowance()) {
        hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAllowance().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.feegrant.v1beta1.Feegrant.Grant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.feegrant.v1beta1.Feegrant.Grant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Grant is stored in the KVStore to record a grant with full context
     * </pre>
     *
     * Protobuf type {@code cosmos.feegrant.v1beta1.Grant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.feegrant.v1beta1.Grant)
        cosmos.feegrant.v1beta1.Feegrant.GrantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.feegrant.v1beta1.Feegrant.Grant.class, cosmos.feegrant.v1beta1.Feegrant.Grant.Builder.class);
      }

      // Construct using cosmos.feegrant.v1beta1.Feegrant.Grant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        granter_ = "";

        grantee_ = "";

        if (allowanceBuilder_ == null) {
          allowance_ = null;
        } else {
          allowance_ = null;
          allowanceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.feegrant.v1beta1.Feegrant.internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstanceForType() {
        return cosmos.feegrant.v1beta1.Feegrant.Grant.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant build() {
        cosmos.feegrant.v1beta1.Feegrant.Grant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.feegrant.v1beta1.Feegrant.Grant buildPartial() {
        cosmos.feegrant.v1beta1.Feegrant.Grant result = new cosmos.feegrant.v1beta1.Feegrant.Grant(this);
        result.granter_ = granter_;
        result.grantee_ = grantee_;
        if (allowanceBuilder_ == null) {
          result.allowance_ = allowance_;
        } else {
          result.allowance_ = allowanceBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.feegrant.v1beta1.Feegrant.Grant) {
          return mergeFrom((cosmos.feegrant.v1beta1.Feegrant.Grant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.feegrant.v1beta1.Feegrant.Grant other) {
        if (other == cosmos.feegrant.v1beta1.Feegrant.Grant.getDefaultInstance()) return this;
        if (!other.getGranter().isEmpty()) {
          granter_ = other.granter_;
          onChanged();
        }
        if (!other.getGrantee().isEmpty()) {
          grantee_ = other.grantee_;
          onChanged();
        }
        if (other.hasAllowance()) {
          mergeAllowance(other.getAllowance());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.feegrant.v1beta1.Feegrant.Grant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.feegrant.v1beta1.Feegrant.Grant) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object granter_ = "";
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The granter.
       */
      public java.lang.String getGranter() {
        java.lang.Object ref = granter_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          granter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for granter.
       */
      public com.google.protobuf.ByteString
          getGranterBytes() {
        java.lang.Object ref = granter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          granter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The granter to set.
       * @return This builder for chaining.
       */
      public Builder setGranter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        granter_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGranter() {
        
        granter_ = getDefaultInstance().getGranter();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * granter is the address of the user granting an allowance of their funds.
       * </pre>
       *
       * <code>string granter = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for granter to set.
       * @return This builder for chaining.
       */
      public Builder setGranterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        granter_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object grantee_ = "";
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The grantee.
       */
      public java.lang.String getGrantee() {
        java.lang.Object ref = grantee_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          grantee_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return The bytes for grantee.
       */
      public com.google.protobuf.ByteString
          getGranteeBytes() {
        java.lang.Object ref = grantee_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          grantee_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The grantee to set.
       * @return This builder for chaining.
       */
      public Builder setGrantee(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        grantee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGrantee() {
        
        grantee_ = getDefaultInstance().getGrantee();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * grantee is the address of the user being granted an allowance of another user's funds.
       * </pre>
       *
       * <code>string grantee = 2 [(.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
       * @param value The bytes for grantee to set.
       * @return This builder for chaining.
       */
      public Builder setGranteeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        grantee_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf2.Any allowance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> allowanceBuilder_;
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       * @return Whether the allowance field is set.
       */
      public boolean hasAllowance() {
        return allowanceBuilder_ != null || allowance_ != null;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       * @return The allowance.
       */
      public com.google.protobuf2.Any getAllowance() {
        if (allowanceBuilder_ == null) {
          return allowance_ == null ? com.google.protobuf2.Any.getDefaultInstance() : allowance_;
        } else {
          return allowanceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder setAllowance(com.google.protobuf2.Any value) {
        if (allowanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allowance_ = value;
          onChanged();
        } else {
          allowanceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder setAllowance(
          com.google.protobuf2.Any.Builder builderForValue) {
        if (allowanceBuilder_ == null) {
          allowance_ = builderForValue.build();
          onChanged();
        } else {
          allowanceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder mergeAllowance(com.google.protobuf2.Any value) {
        if (allowanceBuilder_ == null) {
          if (allowance_ != null) {
            allowance_ =
              com.google.protobuf2.Any.newBuilder(allowance_).mergeFrom(value).buildPartial();
          } else {
            allowance_ = value;
          }
          onChanged();
        } else {
          allowanceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public Builder clearAllowance() {
        if (allowanceBuilder_ == null) {
          allowance_ = null;
          onChanged();
        } else {
          allowance_ = null;
          allowanceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public com.google.protobuf2.Any.Builder getAllowanceBuilder() {
        
        onChanged();
        return getAllowanceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      public com.google.protobuf2.AnyOrBuilder getAllowanceOrBuilder() {
        if (allowanceBuilder_ != null) {
          return allowanceBuilder_.getMessageOrBuilder();
        } else {
          return allowance_ == null ?
              com.google.protobuf2.Any.getDefaultInstance() : allowance_;
        }
      }
      /**
       * <pre>
       * allowance can be any of basic and filtered fee allowance.
       * </pre>
       *
       * <code>.google.protobuf2.Any allowance = 3 [(.cosmos_proto.accepts_interface) = "FeeAllowanceI"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> 
          getAllowanceFieldBuilder() {
        if (allowanceBuilder_ == null) {
          allowanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder>(
                  getAllowance(),
                  getParentForChildren(),
                  isClean());
          allowance_ = null;
        }
        return allowanceBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.feegrant.v1beta1.Grant)
    }

    // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.Grant)
    private static final cosmos.feegrant.v1beta1.Feegrant.Grant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.feegrant.v1beta1.Feegrant.Grant();
    }

    public static cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Grant>
        PARSER = new com.google.protobuf.AbstractParser<Grant>() {
      @java.lang.Override
      public Grant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Grant(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Grant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Grant> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.feegrant.v1beta1.Feegrant.Grant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_feegrant_v1beta1_Grant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&cosmos/feegrant/v1beta1/feegrant.proto" +
      "\022\027cosmos.feegrant.v1beta1\032\024gogoproto/gog" +
      "o.proto\032\032google/protobuf2/any.proto\032\031cos" +
      "mos_proto/cosmos.proto\032\036cosmos/base/v1be" +
      "ta1/coin.proto\032\037google/protobuf/timestam" +
      "p.proto\032\036google/protobuf/duration.proto\"" +
      "\273\001\n\016BasicAllowance\022`\n\013spend_limit\030\001 \003(\0132" +
      "\031.cosmos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(gith" +
      "ub.com/cosmos/cosmos-sdk/types.Coins\0224\n\n" +
      "expiration\030\002 \001(\0132\032.google.protobuf.Times" +
      "tampB\004\220\337\037\001:\021\312\264-\rFeeAllowanceI\"\245\003\n\021Period" +
      "icAllowance\022<\n\005basic\030\001 \001(\0132\'.cosmos.feeg" +
      "rant.v1beta1.BasicAllowanceB\004\310\336\037\000\0223\n\006per" +
      "iod\030\002 \001(\0132\031.google.protobuf.DurationB\010\230\337" +
      "\037\001\310\336\037\000\022g\n\022period_spend_limit\030\003 \003(\0132\031.cos" +
      "mos.base.v1beta1.CoinB0\310\336\037\000\252\337\037(github.co" +
      "m/cosmos/cosmos-sdk/types.Coins\022e\n\020perio" +
      "d_can_spend\030\004 \003(\0132\031.cosmos.base.v1beta1." +
      "CoinB0\310\336\037\000\252\337\037(github.com/cosmos/cosmos-s" +
      "dk/types.Coins\022:\n\014period_reset\030\005 \001(\0132\032.g" +
      "oogle.protobuf.TimestampB\010\220\337\037\001\310\336\037\000:\021\312\264-\r" +
      "FeeAllowanceI\"\203\001\n\023AllowedMsgAllowance\022;\n" +
      "\tallowance\030\001 \001(\0132\025.google.protobuf2.AnyB" +
      "\021\312\264-\rFeeAllowanceI\022\030\n\020allowed_messages\030\002" +
      " \003(\t:\025\210\240\037\000\312\264-\rFeeAllowanceI\"\232\001\n\005Grant\022)\n" +
      "\007granter\030\001 \001(\tB\030\322\264-\024cosmos.AddressString" +
      "\022)\n\007grantee\030\002 \001(\tB\030\322\264-\024cosmos.AddressStr" +
      "ing\022;\n\tallowance\030\003 \001(\0132\025.google.protobuf" +
      "2.AnyB\021\312\264-\rFeeAllowanceIB)Z\'github.com/c" +
      "osmos/cosmos-sdk/x/feegrantb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.protobuf2.AnyProto.getDescriptor(),
          cosmos_proto.Cosmos.getDescriptor(),
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        });
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_feegrant_v1beta1_BasicAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_BasicAllowance_descriptor,
        new java.lang.String[] { "SpendLimit", "Expiration", });
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_PeriodicAllowance_descriptor,
        new java.lang.String[] { "Basic", "Period", "PeriodSpendLimit", "PeriodCanSpend", "PeriodReset", });
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_AllowedMsgAllowance_descriptor,
        new java.lang.String[] { "Allowance", "AllowedMessages", });
    internal_static_cosmos_feegrant_v1beta1_Grant_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_cosmos_feegrant_v1beta1_Grant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_feegrant_v1beta1_Grant_descriptor,
        new java.lang.String[] { "Granter", "Grantee", "Allowance", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(cosmos_proto.Cosmos.acceptsInterface);
    registry.add(cosmos_proto.Cosmos.implementsInterface);
    registry.add(cosmos_proto.Cosmos.scalar);
    registry.add(com.google.protobuf2.GoGoProtos.castrepeated);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGetters);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.stdduration);
    registry.add(com.google.protobuf2.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.protobuf2.AnyProto.getDescriptor();
    cosmos_proto.Cosmos.getDescriptor();
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
