// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coinswap/query.proto

package irismod.coinswap;

public final class QueryOuterClass {
  private QueryOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface QueryLiquidityRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.coinswap.QueryLiquidityRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string denom = 1;</code>
     * @return The denom.
     */
    java.lang.String getDenom();
    /**
     * <code>string denom = 1;</code>
     * @return The bytes for denom.
     */
    com.google.protobuf.ByteString
        getDenomBytes();
  }
  /**
   * <pre>
   * QueryLiquidityRequest is request type for the Query/Liquidity RPC method
   * </pre>
   *
   * Protobuf type {@code irismod.coinswap.QueryLiquidityRequest}
   */
  public static final class QueryLiquidityRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.coinswap.QueryLiquidityRequest)
      QueryLiquidityRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryLiquidityRequest.newBuilder() to construct.
    private QueryLiquidityRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryLiquidityRequest() {
      denom_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryLiquidityRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QueryLiquidityRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              denom_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.class, irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.Builder.class);
    }

    public static final int DENOM_FIELD_NUMBER = 1;
    private volatile java.lang.Object denom_;
    /**
     * <code>string denom = 1;</code>
     * @return The denom.
     */
    @java.lang.Override
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      }
    }
    /**
     * <code>string denom = 1;</code>
     * @return The bytes for denom.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDenomBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, denom_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDenomBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, denom_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.coinswap.QueryOuterClass.QueryLiquidityRequest)) {
        return super.equals(obj);
      }
      irismod.coinswap.QueryOuterClass.QueryLiquidityRequest other = (irismod.coinswap.QueryOuterClass.QueryLiquidityRequest) obj;

      if (!getDenom()
          .equals(other.getDenom())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DENOM_FIELD_NUMBER;
      hash = (53 * hash) + getDenom().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.coinswap.QueryOuterClass.QueryLiquidityRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * QueryLiquidityRequest is request type for the Query/Liquidity RPC method
     * </pre>
     *
     * Protobuf type {@code irismod.coinswap.QueryLiquidityRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.coinswap.QueryLiquidityRequest)
        irismod.coinswap.QueryOuterClass.QueryLiquidityRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.class, irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.Builder.class);
      }

      // Construct using irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        denom_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor;
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityRequest getDefaultInstanceForType() {
        return irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityRequest build() {
        irismod.coinswap.QueryOuterClass.QueryLiquidityRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityRequest buildPartial() {
        irismod.coinswap.QueryOuterClass.QueryLiquidityRequest result = new irismod.coinswap.QueryOuterClass.QueryLiquidityRequest(this);
        result.denom_ = denom_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.coinswap.QueryOuterClass.QueryLiquidityRequest) {
          return mergeFrom((irismod.coinswap.QueryOuterClass.QueryLiquidityRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.coinswap.QueryOuterClass.QueryLiquidityRequest other) {
        if (other == irismod.coinswap.QueryOuterClass.QueryLiquidityRequest.getDefaultInstance()) return this;
        if (!other.getDenom().isEmpty()) {
          denom_ = other.denom_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.coinswap.QueryOuterClass.QueryLiquidityRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.coinswap.QueryOuterClass.QueryLiquidityRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object denom_ = "";
      /**
       * <code>string denom = 1;</code>
       * @return The denom.
       */
      public java.lang.String getDenom() {
        java.lang.Object ref = denom_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          denom_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string denom = 1;</code>
       * @return The bytes for denom.
       */
      public com.google.protobuf.ByteString
          getDenomBytes() {
        java.lang.Object ref = denom_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          denom_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string denom = 1;</code>
       * @param value The denom to set.
       * @return This builder for chaining.
       */
      public Builder setDenom(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        denom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string denom = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDenom() {
        
        denom_ = getDefaultInstance().getDenom();
        onChanged();
        return this;
      }
      /**
       * <code>string denom = 1;</code>
       * @param value The bytes for denom to set.
       * @return This builder for chaining.
       */
      public Builder setDenomBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        denom_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.coinswap.QueryLiquidityRequest)
    }

    // @@protoc_insertion_point(class_scope:irismod.coinswap.QueryLiquidityRequest)
    private static final irismod.coinswap.QueryOuterClass.QueryLiquidityRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.coinswap.QueryOuterClass.QueryLiquidityRequest();
    }

    public static irismod.coinswap.QueryOuterClass.QueryLiquidityRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryLiquidityRequest>
        PARSER = new com.google.protobuf.AbstractParser<QueryLiquidityRequest>() {
      @java.lang.Override
      public QueryLiquidityRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryLiquidityRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryLiquidityRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryLiquidityRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.coinswap.QueryOuterClass.QueryLiquidityRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueryLiquidityResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:irismod.coinswap.QueryLiquidityResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the standard field is set.
     */
    boolean hasStandard();
    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     * @return The standard.
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getStandard();
    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getStandardOrBuilder();

    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     * @return Whether the token field is set.
     */
    boolean hasToken();
    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     * @return The token.
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getToken();
    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getTokenOrBuilder();

    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the liquidity field is set.
     */
    boolean hasLiquidity();
    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     * @return The liquidity.
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getLiquidity();
    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getLiquidityOrBuilder();

    /**
     * <code>string fee = 4;</code>
     * @return The fee.
     */
    java.lang.String getFee();
    /**
     * <code>string fee = 4;</code>
     * @return The bytes for fee.
     */
    com.google.protobuf.ByteString
        getFeeBytes();
  }
  /**
   * <pre>
   * QueryLiquidityResponse is response type for the Query/Liquidity RPC method
   * </pre>
   *
   * Protobuf type {@code irismod.coinswap.QueryLiquidityResponse}
   */
  public static final class QueryLiquidityResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:irismod.coinswap.QueryLiquidityResponse)
      QueryLiquidityResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryLiquidityResponse.newBuilder() to construct.
    private QueryLiquidityResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryLiquidityResponse() {
      fee_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryLiquidityResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QueryLiquidityResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              cosmos.base.v1beta1.CoinOuterClass.Coin.Builder subBuilder = null;
              if (standard_ != null) {
                subBuilder = standard_.toBuilder();
              }
              standard_ = input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(standard_);
                standard_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              cosmos.base.v1beta1.CoinOuterClass.Coin.Builder subBuilder = null;
              if (token_ != null) {
                subBuilder = token_.toBuilder();
              }
              token_ = input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(token_);
                token_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              cosmos.base.v1beta1.CoinOuterClass.Coin.Builder subBuilder = null;
              if (liquidity_ != null) {
                subBuilder = liquidity_.toBuilder();
              }
              liquidity_ = input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(liquidity_);
                liquidity_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              fee_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.class, irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.Builder.class);
    }

    public static final int STANDARD_FIELD_NUMBER = 1;
    private cosmos.base.v1beta1.CoinOuterClass.Coin standard_;
    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     * @return Whether the standard field is set.
     */
    @java.lang.Override
    public boolean hasStandard() {
      return standard_ != null;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     * @return The standard.
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getStandard() {
      return standard_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : standard_;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getStandardOrBuilder() {
      return getStandard();
    }

    public static final int TOKEN_FIELD_NUMBER = 2;
    private cosmos.base.v1beta1.CoinOuterClass.Coin token_;
    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     * @return Whether the token field is set.
     */
    @java.lang.Override
    public boolean hasToken() {
      return token_ != null;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     * @return The token.
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getToken() {
      return token_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : token_;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getTokenOrBuilder() {
      return getToken();
    }

    public static final int LIQUIDITY_FIELD_NUMBER = 3;
    private cosmos.base.v1beta1.CoinOuterClass.Coin liquidity_;
    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the liquidity field is set.
     */
    @java.lang.Override
    public boolean hasLiquidity() {
      return liquidity_ != null;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     * @return The liquidity.
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getLiquidity() {
      return liquidity_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : liquidity_;
    }
    /**
     * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getLiquidityOrBuilder() {
      return getLiquidity();
    }

    public static final int FEE_FIELD_NUMBER = 4;
    private volatile java.lang.Object fee_;
    /**
     * <code>string fee = 4;</code>
     * @return The fee.
     */
    @java.lang.Override
    public java.lang.String getFee() {
      java.lang.Object ref = fee_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fee_ = s;
        return s;
      }
    }
    /**
     * <code>string fee = 4;</code>
     * @return The bytes for fee.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFeeBytes() {
      java.lang.Object ref = fee_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fee_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (standard_ != null) {
        output.writeMessage(1, getStandard());
      }
      if (token_ != null) {
        output.writeMessage(2, getToken());
      }
      if (liquidity_ != null) {
        output.writeMessage(3, getLiquidity());
      }
      if (!getFeeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fee_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (standard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStandard());
      }
      if (token_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToken());
      }
      if (liquidity_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLiquidity());
      }
      if (!getFeeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fee_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof irismod.coinswap.QueryOuterClass.QueryLiquidityResponse)) {
        return super.equals(obj);
      }
      irismod.coinswap.QueryOuterClass.QueryLiquidityResponse other = (irismod.coinswap.QueryOuterClass.QueryLiquidityResponse) obj;

      if (hasStandard() != other.hasStandard()) return false;
      if (hasStandard()) {
        if (!getStandard()
            .equals(other.getStandard())) return false;
      }
      if (hasToken() != other.hasToken()) return false;
      if (hasToken()) {
        if (!getToken()
            .equals(other.getToken())) return false;
      }
      if (hasLiquidity() != other.hasLiquidity()) return false;
      if (hasLiquidity()) {
        if (!getLiquidity()
            .equals(other.getLiquidity())) return false;
      }
      if (!getFee()
          .equals(other.getFee())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStandard()) {
        hash = (37 * hash) + STANDARD_FIELD_NUMBER;
        hash = (53 * hash) + getStandard().hashCode();
      }
      if (hasToken()) {
        hash = (37 * hash) + TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getToken().hashCode();
      }
      if (hasLiquidity()) {
        hash = (37 * hash) + LIQUIDITY_FIELD_NUMBER;
        hash = (53 * hash) + getLiquidity().hashCode();
      }
      hash = (37 * hash) + FEE_FIELD_NUMBER;
      hash = (53 * hash) + getFee().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(irismod.coinswap.QueryOuterClass.QueryLiquidityResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * QueryLiquidityResponse is response type for the Query/Liquidity RPC method
     * </pre>
     *
     * Protobuf type {@code irismod.coinswap.QueryLiquidityResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:irismod.coinswap.QueryLiquidityResponse)
        irismod.coinswap.QueryOuterClass.QueryLiquidityResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.class, irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.Builder.class);
      }

      // Construct using irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (standardBuilder_ == null) {
          standard_ = null;
        } else {
          standard_ = null;
          standardBuilder_ = null;
        }
        if (tokenBuilder_ == null) {
          token_ = null;
        } else {
          token_ = null;
          tokenBuilder_ = null;
        }
        if (liquidityBuilder_ == null) {
          liquidity_ = null;
        } else {
          liquidity_ = null;
          liquidityBuilder_ = null;
        }
        fee_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return irismod.coinswap.QueryOuterClass.internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor;
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityResponse getDefaultInstanceForType() {
        return irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.getDefaultInstance();
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityResponse build() {
        irismod.coinswap.QueryOuterClass.QueryLiquidityResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public irismod.coinswap.QueryOuterClass.QueryLiquidityResponse buildPartial() {
        irismod.coinswap.QueryOuterClass.QueryLiquidityResponse result = new irismod.coinswap.QueryOuterClass.QueryLiquidityResponse(this);
        if (standardBuilder_ == null) {
          result.standard_ = standard_;
        } else {
          result.standard_ = standardBuilder_.build();
        }
        if (tokenBuilder_ == null) {
          result.token_ = token_;
        } else {
          result.token_ = tokenBuilder_.build();
        }
        if (liquidityBuilder_ == null) {
          result.liquidity_ = liquidity_;
        } else {
          result.liquidity_ = liquidityBuilder_.build();
        }
        result.fee_ = fee_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof irismod.coinswap.QueryOuterClass.QueryLiquidityResponse) {
          return mergeFrom((irismod.coinswap.QueryOuterClass.QueryLiquidityResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(irismod.coinswap.QueryOuterClass.QueryLiquidityResponse other) {
        if (other == irismod.coinswap.QueryOuterClass.QueryLiquidityResponse.getDefaultInstance()) return this;
        if (other.hasStandard()) {
          mergeStandard(other.getStandard());
        }
        if (other.hasToken()) {
          mergeToken(other.getToken());
        }
        if (other.hasLiquidity()) {
          mergeLiquidity(other.getLiquidity());
        }
        if (!other.getFee().isEmpty()) {
          fee_ = other.fee_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        irismod.coinswap.QueryOuterClass.QueryLiquidityResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (irismod.coinswap.QueryOuterClass.QueryLiquidityResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cosmos.base.v1beta1.CoinOuterClass.Coin standard_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> standardBuilder_;
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       * @return Whether the standard field is set.
       */
      public boolean hasStandard() {
        return standardBuilder_ != null || standard_ != null;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       * @return The standard.
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getStandard() {
        if (standardBuilder_ == null) {
          return standard_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : standard_;
        } else {
          return standardBuilder_.getMessage();
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setStandard(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (standardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          standard_ = value;
          onChanged();
        } else {
          standardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setStandard(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (standardBuilder_ == null) {
          standard_ = builderForValue.build();
          onChanged();
        } else {
          standardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeStandard(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (standardBuilder_ == null) {
          if (standard_ != null) {
            standard_ =
              cosmos.base.v1beta1.CoinOuterClass.Coin.newBuilder(standard_).mergeFrom(value).buildPartial();
          } else {
            standard_ = value;
          }
          onChanged();
        } else {
          standardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearStandard() {
        if (standardBuilder_ == null) {
          standard_ = null;
          onChanged();
        } else {
          standard_ = null;
          standardBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getStandardBuilder() {
        
        onChanged();
        return getStandardFieldBuilder().getBuilder();
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getStandardOrBuilder() {
        if (standardBuilder_ != null) {
          return standardBuilder_.getMessageOrBuilder();
        } else {
          return standard_ == null ?
              cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : standard_;
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin standard = 1 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getStandardFieldBuilder() {
        if (standardBuilder_ == null) {
          standardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  getStandard(),
                  getParentForChildren(),
                  isClean());
          standard_ = null;
        }
        return standardBuilder_;
      }

      private cosmos.base.v1beta1.CoinOuterClass.Coin token_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> tokenBuilder_;
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       * @return Whether the token field is set.
       */
      public boolean hasToken() {
        return tokenBuilder_ != null || token_ != null;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       * @return The token.
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getToken() {
        if (tokenBuilder_ == null) {
          return token_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : token_;
        } else {
          return tokenBuilder_.getMessage();
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setToken(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          token_ = value;
          onChanged();
        } else {
          tokenBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setToken(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          token_ = builderForValue.build();
          onChanged();
        } else {
          tokenBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeToken(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (tokenBuilder_ == null) {
          if (token_ != null) {
            token_ =
              cosmos.base.v1beta1.CoinOuterClass.Coin.newBuilder(token_).mergeFrom(value).buildPartial();
          } else {
            token_ = value;
          }
          onChanged();
        } else {
          tokenBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          token_ = null;
          onChanged();
        } else {
          token_ = null;
          tokenBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getTokenBuilder() {
        
        onChanged();
        return getTokenFieldBuilder().getBuilder();
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getTokenOrBuilder() {
        if (tokenBuilder_ != null) {
          return tokenBuilder_.getMessageOrBuilder();
        } else {
          return token_ == null ?
              cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : token_;
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin token = 2 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          tokenBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  getToken(),
                  getParentForChildren(),
                  isClean());
          token_ = null;
        }
        return tokenBuilder_;
      }

      private cosmos.base.v1beta1.CoinOuterClass.Coin liquidity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> liquidityBuilder_;
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       * @return Whether the liquidity field is set.
       */
      public boolean hasLiquidity() {
        return liquidityBuilder_ != null || liquidity_ != null;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       * @return The liquidity.
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getLiquidity() {
        if (liquidityBuilder_ == null) {
          return liquidity_ == null ? cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : liquidity_;
        } else {
          return liquidityBuilder_.getMessage();
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setLiquidity(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (liquidityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          liquidity_ = value;
          onChanged();
        } else {
          liquidityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setLiquidity(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (liquidityBuilder_ == null) {
          liquidity_ = builderForValue.build();
          onChanged();
        } else {
          liquidityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeLiquidity(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (liquidityBuilder_ == null) {
          if (liquidity_ != null) {
            liquidity_ =
              cosmos.base.v1beta1.CoinOuterClass.Coin.newBuilder(liquidity_).mergeFrom(value).buildPartial();
          } else {
            liquidity_ = value;
          }
          onChanged();
        } else {
          liquidityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearLiquidity() {
        if (liquidityBuilder_ == null) {
          liquidity_ = null;
          onChanged();
        } else {
          liquidity_ = null;
          liquidityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getLiquidityBuilder() {
        
        onChanged();
        return getLiquidityFieldBuilder().getBuilder();
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getLiquidityOrBuilder() {
        if (liquidityBuilder_ != null) {
          return liquidityBuilder_.getMessageOrBuilder();
        } else {
          return liquidity_ == null ?
              cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance() : liquidity_;
        }
      }
      /**
       * <code>.cosmos.base.v1beta1.Coin liquidity = 3 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getLiquidityFieldBuilder() {
        if (liquidityBuilder_ == null) {
          liquidityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  getLiquidity(),
                  getParentForChildren(),
                  isClean());
          liquidity_ = null;
        }
        return liquidityBuilder_;
      }

      private java.lang.Object fee_ = "";
      /**
       * <code>string fee = 4;</code>
       * @return The fee.
       */
      public java.lang.String getFee() {
        java.lang.Object ref = fee_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fee_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fee = 4;</code>
       * @return The bytes for fee.
       */
      public com.google.protobuf.ByteString
          getFeeBytes() {
        java.lang.Object ref = fee_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fee_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fee = 4;</code>
       * @param value The fee to set.
       * @return This builder for chaining.
       */
      public Builder setFee(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fee = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFee() {
        
        fee_ = getDefaultInstance().getFee();
        onChanged();
        return this;
      }
      /**
       * <code>string fee = 4;</code>
       * @param value The bytes for fee to set.
       * @return This builder for chaining.
       */
      public Builder setFeeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fee_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:irismod.coinswap.QueryLiquidityResponse)
    }

    // @@protoc_insertion_point(class_scope:irismod.coinswap.QueryLiquidityResponse)
    private static final irismod.coinswap.QueryOuterClass.QueryLiquidityResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new irismod.coinswap.QueryOuterClass.QueryLiquidityResponse();
    }

    public static irismod.coinswap.QueryOuterClass.QueryLiquidityResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryLiquidityResponse>
        PARSER = new com.google.protobuf.AbstractParser<QueryLiquidityResponse>() {
      @java.lang.Override
      public QueryLiquidityResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueryLiquidityResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryLiquidityResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryLiquidityResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public irismod.coinswap.QueryOuterClass.QueryLiquidityResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_coinswap_QueryLiquidityRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_irismod_coinswap_QueryLiquidityResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024coinswap/query.proto\022\020irismod.coinswap" +
      "\032\036cosmos/base/v1beta1/coin.proto\032\024gogopr" +
      "oto/gogo.proto\032\034google/api/annotations.p" +
      "roto\"&\n\025QueryLiquidityRequest\022\r\n\005denom\030\001" +
      " \001(\t\"\274\001\n\026QueryLiquidityResponse\0221\n\010stand" +
      "ard\030\001 \001(\0132\031.cosmos.base.v1beta1.CoinB\004\310\336" +
      "\037\000\022.\n\005token\030\002 \001(\0132\031.cosmos.base.v1beta1." +
      "CoinB\004\310\336\037\000\0222\n\tliquidity\030\003 \001(\0132\031.cosmos.b" +
      "ase.v1beta1.CoinB\004\310\336\037\000\022\013\n\003fee\030\004 \001(\t2\227\001\n\005" +
      "Query\022\215\001\n\tLiquidity\022\'.irismod.coinswap.Q" +
      "ueryLiquidityRequest\032(.irismod.coinswap." +
      "QueryLiquidityResponse\"-\202\323\344\223\002\'\022%/irismod" +
      "/coinswap/liquidities/{denom}B3Z1github." +
      "com/irisnet/irismod/modules/coinswap/typ" +
      "esb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
        });
    internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_irismod_coinswap_QueryLiquidityRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_coinswap_QueryLiquidityRequest_descriptor,
        new java.lang.String[] { "Denom", });
    internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_irismod_coinswap_QueryLiquidityResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_irismod_coinswap_QueryLiquidityResponse_descriptor,
        new java.lang.String[] { "Standard", "Token", "Liquidity", "Fee", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
