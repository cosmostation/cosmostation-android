// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/genesis.proto

package cosmos.nft.v1beta1;

public final class Genesis {
  private Genesis() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GenesisStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.GenesisState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass> 
        getClassesList();
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    cosmos.nft.v1beta1.Nft.CosmosNFTClass getClasses(int index);
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    int getClassesCount();
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder> 
        getClassesOrBuilderList();
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder getClassesOrBuilder(
        int index);

    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    java.util.List<cosmos.nft.v1beta1.Genesis.Entry> 
        getEntriesList();
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    cosmos.nft.v1beta1.Genesis.Entry getEntries(int index);
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    int getEntriesCount();
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    java.util.List<? extends cosmos.nft.v1beta1.Genesis.EntryOrBuilder> 
        getEntriesOrBuilderList();
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    cosmos.nft.v1beta1.Genesis.EntryOrBuilder getEntriesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * GenesisState defines the nft module's genesis state.
   * </pre>
   *
   * Protobuf type {@code cosmos.nft.v1beta1.GenesisState}
   */
  public static final class GenesisState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.nft.v1beta1.GenesisState)
      GenesisStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GenesisState.newBuilder() to construct.
    private GenesisState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GenesisState() {
      classes_ = java.util.Collections.emptyList();
      entries_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GenesisState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GenesisState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                classes_ = new java.util.ArrayList<cosmos.nft.v1beta1.Nft.CosmosNFTClass>();
                mutable_bitField0_ |= 0x00000001;
              }
              classes_.add(
                  input.readMessage(cosmos.nft.v1beta1.Nft.CosmosNFTClass.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                entries_ = new java.util.ArrayList<cosmos.nft.v1beta1.Genesis.Entry>();
                mutable_bitField0_ |= 0x00000002;
              }
              entries_.add(
                  input.readMessage(cosmos.nft.v1beta1.Genesis.Entry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          classes_ = java.util.Collections.unmodifiableList(classes_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          entries_ = java.util.Collections.unmodifiableList(entries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_GenesisState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.nft.v1beta1.Genesis.GenesisState.class, cosmos.nft.v1beta1.Genesis.GenesisState.Builder.class);
    }

    public static final int CLASSES_FIELD_NUMBER = 1;
    private java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass> classes_;
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass> getClassesList() {
      return classes_;
    }
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder> 
        getClassesOrBuilderList() {
      return classes_;
    }
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    @java.lang.Override
    public int getClassesCount() {
      return classes_.size();
    }
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFTClass getClasses(int index) {
      return classes_.get(index);
    }
    /**
     * <pre>
     * class defines the class of the nft type.
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder getClassesOrBuilder(
        int index) {
      return classes_.get(index);
    }

    public static final int ENTRIES_FIELD_NUMBER = 2;
    private java.util.List<cosmos.nft.v1beta1.Genesis.Entry> entries_;
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.nft.v1beta1.Genesis.Entry> getEntriesList() {
      return entries_;
    }
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.nft.v1beta1.Genesis.EntryOrBuilder> 
        getEntriesOrBuilderList() {
      return entries_;
    }
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    @java.lang.Override
    public int getEntriesCount() {
      return entries_.size();
    }
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Genesis.Entry getEntries(int index) {
      return entries_.get(index);
    }
    /**
     * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Genesis.EntryOrBuilder getEntriesOrBuilder(
        int index) {
      return entries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < classes_.size(); i++) {
        output.writeMessage(1, classes_.get(i));
      }
      for (int i = 0; i < entries_.size(); i++) {
        output.writeMessage(2, entries_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < classes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, classes_.get(i));
      }
      for (int i = 0; i < entries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, entries_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.nft.v1beta1.Genesis.GenesisState)) {
        return super.equals(obj);
      }
      cosmos.nft.v1beta1.Genesis.GenesisState other = (cosmos.nft.v1beta1.Genesis.GenesisState) obj;

      if (!getClassesList()
          .equals(other.getClassesList())) return false;
      if (!getEntriesList()
          .equals(other.getEntriesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getClassesCount() > 0) {
        hash = (37 * hash) + CLASSES_FIELD_NUMBER;
        hash = (53 * hash) + getClassesList().hashCode();
      }
      if (getEntriesCount() > 0) {
        hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getEntriesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.GenesisState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.nft.v1beta1.Genesis.GenesisState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GenesisState defines the nft module's genesis state.
     * </pre>
     *
     * Protobuf type {@code cosmos.nft.v1beta1.GenesisState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.nft.v1beta1.GenesisState)
        cosmos.nft.v1beta1.Genesis.GenesisStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_GenesisState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.nft.v1beta1.Genesis.GenesisState.class, cosmos.nft.v1beta1.Genesis.GenesisState.Builder.class);
      }

      // Construct using cosmos.nft.v1beta1.Genesis.GenesisState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getClassesFieldBuilder();
          getEntriesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (classesBuilder_ == null) {
          classes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          classesBuilder_.clear();
        }
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_GenesisState_descriptor;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.GenesisState getDefaultInstanceForType() {
        return cosmos.nft.v1beta1.Genesis.GenesisState.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.GenesisState build() {
        cosmos.nft.v1beta1.Genesis.GenesisState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.GenesisState buildPartial() {
        cosmos.nft.v1beta1.Genesis.GenesisState result = new cosmos.nft.v1beta1.Genesis.GenesisState(this);
        int from_bitField0_ = bitField0_;
        if (classesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            classes_ = java.util.Collections.unmodifiableList(classes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.classes_ = classes_;
        } else {
          result.classes_ = classesBuilder_.build();
        }
        if (entriesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.entries_ = entries_;
        } else {
          result.entries_ = entriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.nft.v1beta1.Genesis.GenesisState) {
          return mergeFrom((cosmos.nft.v1beta1.Genesis.GenesisState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.nft.v1beta1.Genesis.GenesisState other) {
        if (other == cosmos.nft.v1beta1.Genesis.GenesisState.getDefaultInstance()) return this;
        if (classesBuilder_ == null) {
          if (!other.classes_.isEmpty()) {
            if (classes_.isEmpty()) {
              classes_ = other.classes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClassesIsMutable();
              classes_.addAll(other.classes_);
            }
            onChanged();
          }
        } else {
          if (!other.classes_.isEmpty()) {
            if (classesBuilder_.isEmpty()) {
              classesBuilder_.dispose();
              classesBuilder_ = null;
              classes_ = other.classes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              classesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getClassesFieldBuilder() : null;
            } else {
              classesBuilder_.addAllMessages(other.classes_);
            }
          }
        }
        if (entriesBuilder_ == null) {
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
        } else {
          if (!other.entries_.isEmpty()) {
            if (entriesBuilder_.isEmpty()) {
              entriesBuilder_.dispose();
              entriesBuilder_ = null;
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000002);
              entriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEntriesFieldBuilder() : null;
            } else {
              entriesBuilder_.addAllMessages(other.entries_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.nft.v1beta1.Genesis.GenesisState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.nft.v1beta1.Genesis.GenesisState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass> classes_ =
        java.util.Collections.emptyList();
      private void ensureClassesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          classes_ = new java.util.ArrayList<cosmos.nft.v1beta1.Nft.CosmosNFTClass>(classes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Nft.CosmosNFTClass, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder> classesBuilder_;

      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass> getClassesList() {
        if (classesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(classes_);
        } else {
          return classesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public int getClassesCount() {
        if (classesBuilder_ == null) {
          return classes_.size();
        } else {
          return classesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass getClasses(int index) {
        if (classesBuilder_ == null) {
          return classes_.get(index);
        } else {
          return classesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder setClasses(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFTClass value) {
        if (classesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassesIsMutable();
          classes_.set(index, value);
          onChanged();
        } else {
          classesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder setClasses(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder builderForValue) {
        if (classesBuilder_ == null) {
          ensureClassesIsMutable();
          classes_.set(index, builderForValue.build());
          onChanged();
        } else {
          classesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder addClasses(cosmos.nft.v1beta1.Nft.CosmosNFTClass value) {
        if (classesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassesIsMutable();
          classes_.add(value);
          onChanged();
        } else {
          classesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder addClasses(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFTClass value) {
        if (classesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassesIsMutable();
          classes_.add(index, value);
          onChanged();
        } else {
          classesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder addClasses(
          cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder builderForValue) {
        if (classesBuilder_ == null) {
          ensureClassesIsMutable();
          classes_.add(builderForValue.build());
          onChanged();
        } else {
          classesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder addClasses(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder builderForValue) {
        if (classesBuilder_ == null) {
          ensureClassesIsMutable();
          classes_.add(index, builderForValue.build());
          onChanged();
        } else {
          classesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder addAllClasses(
          java.lang.Iterable<? extends cosmos.nft.v1beta1.Nft.CosmosNFTClass> values) {
        if (classesBuilder_ == null) {
          ensureClassesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, classes_);
          onChanged();
        } else {
          classesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder clearClasses() {
        if (classesBuilder_ == null) {
          classes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          classesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public Builder removeClasses(int index) {
        if (classesBuilder_ == null) {
          ensureClassesIsMutable();
          classes_.remove(index);
          onChanged();
        } else {
          classesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder getClassesBuilder(
          int index) {
        return getClassesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder getClassesOrBuilder(
          int index) {
        if (classesBuilder_ == null) {
          return classes_.get(index);  } else {
          return classesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder> 
           getClassesOrBuilderList() {
        if (classesBuilder_ != null) {
          return classesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(classes_);
        }
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder addClassesBuilder() {
        return getClassesFieldBuilder().addBuilder(
            cosmos.nft.v1beta1.Nft.CosmosNFTClass.getDefaultInstance());
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder addClassesBuilder(
          int index) {
        return getClassesFieldBuilder().addBuilder(
            index, cosmos.nft.v1beta1.Nft.CosmosNFTClass.getDefaultInstance());
      }
      /**
       * <pre>
       * class defines the class of the nft type.
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFTClass classes = 1;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder> 
           getClassesBuilderList() {
        return getClassesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Nft.CosmosNFTClass, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder> 
          getClassesFieldBuilder() {
        if (classesBuilder_ == null) {
          classesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.nft.v1beta1.Nft.CosmosNFTClass, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder>(
                  classes_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          classes_ = null;
        }
        return classesBuilder_;
      }

      private java.util.List<cosmos.nft.v1beta1.Genesis.Entry> entries_ =
        java.util.Collections.emptyList();
      private void ensureEntriesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          entries_ = new java.util.ArrayList<cosmos.nft.v1beta1.Genesis.Entry>(entries_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Genesis.Entry, cosmos.nft.v1beta1.Genesis.Entry.Builder, cosmos.nft.v1beta1.Genesis.EntryOrBuilder> entriesBuilder_;

      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Genesis.Entry> getEntriesList() {
        if (entriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entries_);
        } else {
          return entriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public int getEntriesCount() {
        if (entriesBuilder_ == null) {
          return entries_.size();
        } else {
          return entriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public cosmos.nft.v1beta1.Genesis.Entry getEntries(int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);
        } else {
          return entriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder setEntries(
          int index, cosmos.nft.v1beta1.Genesis.Entry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder setEntries(
          int index, cosmos.nft.v1beta1.Genesis.Entry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.set(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder addEntries(cosmos.nft.v1beta1.Genesis.Entry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder addEntries(
          int index, cosmos.nft.v1beta1.Genesis.Entry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(index, value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder addEntries(
          cosmos.nft.v1beta1.Genesis.Entry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder addEntries(
          int index, cosmos.nft.v1beta1.Genesis.Entry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder addAllEntries(
          java.lang.Iterable<? extends cosmos.nft.v1beta1.Genesis.Entry> values) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entries_);
          onChanged();
        } else {
          entriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder clearEntries() {
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public Builder removeEntries(int index) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.remove(index);
          onChanged();
        } else {
          entriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public cosmos.nft.v1beta1.Genesis.Entry.Builder getEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public cosmos.nft.v1beta1.Genesis.EntryOrBuilder getEntriesOrBuilder(
          int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);  } else {
          return entriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public java.util.List<? extends cosmos.nft.v1beta1.Genesis.EntryOrBuilder> 
           getEntriesOrBuilderList() {
        if (entriesBuilder_ != null) {
          return entriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entries_);
        }
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public cosmos.nft.v1beta1.Genesis.Entry.Builder addEntriesBuilder() {
        return getEntriesFieldBuilder().addBuilder(
            cosmos.nft.v1beta1.Genesis.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public cosmos.nft.v1beta1.Genesis.Entry.Builder addEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().addBuilder(
            index, cosmos.nft.v1beta1.Genesis.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.nft.v1beta1.Entry entries = 2;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Genesis.Entry.Builder> 
           getEntriesBuilderList() {
        return getEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Genesis.Entry, cosmos.nft.v1beta1.Genesis.Entry.Builder, cosmos.nft.v1beta1.Genesis.EntryOrBuilder> 
          getEntriesFieldBuilder() {
        if (entriesBuilder_ == null) {
          entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.nft.v1beta1.Genesis.Entry, cosmos.nft.v1beta1.Genesis.Entry.Builder, cosmos.nft.v1beta1.Genesis.EntryOrBuilder>(
                  entries_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          entries_ = null;
        }
        return entriesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.nft.v1beta1.GenesisState)
    }

    // @@protoc_insertion_point(class_scope:cosmos.nft.v1beta1.GenesisState)
    private static final cosmos.nft.v1beta1.Genesis.GenesisState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.nft.v1beta1.Genesis.GenesisState();
    }

    public static cosmos.nft.v1beta1.Genesis.GenesisState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GenesisState>
        PARSER = new com.google.protobuf.AbstractParser<GenesisState>() {
      @java.lang.Override
      public GenesisState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GenesisState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GenesisState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GenesisState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.nft.v1beta1.Genesis.GenesisState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.Entry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * owner is the owner address of the following nft
     * </pre>
     *
     * <code>string owner = 1;</code>
     * @return The owner.
     */
    java.lang.String getOwner();
    /**
     * <pre>
     * owner is the owner address of the following nft
     * </pre>
     *
     * <code>string owner = 1;</code>
     * @return The bytes for owner.
     */
    com.google.protobuf.ByteString
        getOwnerBytes();

    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT> 
        getNftsList();
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    cosmos.nft.v1beta1.Nft.CosmosNFT getNfts(int index);
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    int getNftsCount();
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder> 
        getNftsOrBuilderList();
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder getNftsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Entry Defines all nft owned by a person
   * </pre>
   *
   * Protobuf type {@code cosmos.nft.v1beta1.Entry}
   */
  public static final class Entry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.nft.v1beta1.Entry)
      EntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Entry.newBuilder() to construct.
    private Entry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Entry() {
      owner_ = "";
      nfts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Entry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Entry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              owner_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                nfts_ = new java.util.ArrayList<cosmos.nft.v1beta1.Nft.CosmosNFT>();
                mutable_bitField0_ |= 0x00000001;
              }
              nfts_.add(
                  input.readMessage(cosmos.nft.v1beta1.Nft.CosmosNFT.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          nfts_ = java.util.Collections.unmodifiableList(nfts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_Entry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.nft.v1beta1.Genesis.Entry.class, cosmos.nft.v1beta1.Genesis.Entry.Builder.class);
    }

    public static final int OWNER_FIELD_NUMBER = 1;
    private volatile java.lang.Object owner_;
    /**
     * <pre>
     * owner is the owner address of the following nft
     * </pre>
     *
     * <code>string owner = 1;</code>
     * @return The owner.
     */
    @java.lang.Override
    public java.lang.String getOwner() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        owner_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * owner is the owner address of the following nft
     * </pre>
     *
     * <code>string owner = 1;</code>
     * @return The bytes for owner.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOwnerBytes() {
      java.lang.Object ref = owner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        owner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NFTS_FIELD_NUMBER = 2;
    private java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT> nfts_;
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT> getNftsList() {
      return nfts_;
    }
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder> 
        getNftsOrBuilderList() {
      return nfts_;
    }
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    @java.lang.Override
    public int getNftsCount() {
      return nfts_.size();
    }
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFT getNfts(int index) {
      return nfts_.get(index);
    }
    /**
     * <pre>
     * nfts is a group of nfts of the same owner
     * </pre>
     *
     * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
     */
    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder getNftsOrBuilder(
        int index) {
      return nfts_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getOwnerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, owner_);
      }
      for (int i = 0; i < nfts_.size(); i++) {
        output.writeMessage(2, nfts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getOwnerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, owner_);
      }
      for (int i = 0; i < nfts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nfts_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.nft.v1beta1.Genesis.Entry)) {
        return super.equals(obj);
      }
      cosmos.nft.v1beta1.Genesis.Entry other = (cosmos.nft.v1beta1.Genesis.Entry) obj;

      if (!getOwner()
          .equals(other.getOwner())) return false;
      if (!getNftsList()
          .equals(other.getNftsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner().hashCode();
      if (getNftsCount() > 0) {
        hash = (37 * hash) + NFTS_FIELD_NUMBER;
        hash = (53 * hash) + getNftsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Genesis.Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.nft.v1beta1.Genesis.Entry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Entry Defines all nft owned by a person
     * </pre>
     *
     * Protobuf type {@code cosmos.nft.v1beta1.Entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.nft.v1beta1.Entry)
        cosmos.nft.v1beta1.Genesis.EntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_Entry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.nft.v1beta1.Genesis.Entry.class, cosmos.nft.v1beta1.Genesis.Entry.Builder.class);
      }

      // Construct using cosmos.nft.v1beta1.Genesis.Entry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNftsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        owner_ = "";

        if (nftsBuilder_ == null) {
          nfts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nftsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.nft.v1beta1.Genesis.internal_static_cosmos_nft_v1beta1_Entry_descriptor;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.Entry getDefaultInstanceForType() {
        return cosmos.nft.v1beta1.Genesis.Entry.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.Entry build() {
        cosmos.nft.v1beta1.Genesis.Entry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Genesis.Entry buildPartial() {
        cosmos.nft.v1beta1.Genesis.Entry result = new cosmos.nft.v1beta1.Genesis.Entry(this);
        int from_bitField0_ = bitField0_;
        result.owner_ = owner_;
        if (nftsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            nfts_ = java.util.Collections.unmodifiableList(nfts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nfts_ = nfts_;
        } else {
          result.nfts_ = nftsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.nft.v1beta1.Genesis.Entry) {
          return mergeFrom((cosmos.nft.v1beta1.Genesis.Entry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.nft.v1beta1.Genesis.Entry other) {
        if (other == cosmos.nft.v1beta1.Genesis.Entry.getDefaultInstance()) return this;
        if (!other.getOwner().isEmpty()) {
          owner_ = other.owner_;
          onChanged();
        }
        if (nftsBuilder_ == null) {
          if (!other.nfts_.isEmpty()) {
            if (nfts_.isEmpty()) {
              nfts_ = other.nfts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNftsIsMutable();
              nfts_.addAll(other.nfts_);
            }
            onChanged();
          }
        } else {
          if (!other.nfts_.isEmpty()) {
            if (nftsBuilder_.isEmpty()) {
              nftsBuilder_.dispose();
              nftsBuilder_ = null;
              nfts_ = other.nfts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nftsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNftsFieldBuilder() : null;
            } else {
              nftsBuilder_.addAllMessages(other.nfts_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.nft.v1beta1.Genesis.Entry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.nft.v1beta1.Genesis.Entry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object owner_ = "";
      /**
       * <pre>
       * owner is the owner address of the following nft
       * </pre>
       *
       * <code>string owner = 1;</code>
       * @return The owner.
       */
      public java.lang.String getOwner() {
        java.lang.Object ref = owner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          owner_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * owner is the owner address of the following nft
       * </pre>
       *
       * <code>string owner = 1;</code>
       * @return The bytes for owner.
       */
      public com.google.protobuf.ByteString
          getOwnerBytes() {
        java.lang.Object ref = owner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          owner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * owner is the owner address of the following nft
       * </pre>
       *
       * <code>string owner = 1;</code>
       * @param value The owner to set.
       * @return This builder for chaining.
       */
      public Builder setOwner(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * owner is the owner address of the following nft
       * </pre>
       *
       * <code>string owner = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwner() {
        
        owner_ = getDefaultInstance().getOwner();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * owner is the owner address of the following nft
       * </pre>
       *
       * <code>string owner = 1;</code>
       * @param value The bytes for owner to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        owner_ = value;
        onChanged();
        return this;
      }

      private java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT> nfts_ =
        java.util.Collections.emptyList();
      private void ensureNftsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          nfts_ = new java.util.ArrayList<cosmos.nft.v1beta1.Nft.CosmosNFT>(nfts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Nft.CosmosNFT, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder> nftsBuilder_;

      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT> getNftsList() {
        if (nftsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nfts_);
        } else {
          return nftsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public int getNftsCount() {
        if (nftsBuilder_ == null) {
          return nfts_.size();
        } else {
          return nftsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFT getNfts(int index) {
        if (nftsBuilder_ == null) {
          return nfts_.get(index);
        } else {
          return nftsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder setNfts(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.set(index, value);
          onChanged();
        } else {
          nftsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder setNfts(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.set(index, builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder addNfts(cosmos.nft.v1beta1.Nft.CosmosNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.add(value);
          onChanged();
        } else {
          nftsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder addNfts(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFT value) {
        if (nftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNftsIsMutable();
          nfts_.add(index, value);
          onChanged();
        } else {
          nftsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder addNfts(
          cosmos.nft.v1beta1.Nft.CosmosNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.add(builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder addNfts(
          int index, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder builderForValue) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.add(index, builderForValue.build());
          onChanged();
        } else {
          nftsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder addAllNfts(
          java.lang.Iterable<? extends cosmos.nft.v1beta1.Nft.CosmosNFT> values) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nfts_);
          onChanged();
        } else {
          nftsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder clearNfts() {
        if (nftsBuilder_ == null) {
          nfts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nftsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public Builder removeNfts(int index) {
        if (nftsBuilder_ == null) {
          ensureNftsIsMutable();
          nfts_.remove(index);
          onChanged();
        } else {
          nftsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFT.Builder getNftsBuilder(
          int index) {
        return getNftsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder getNftsOrBuilder(
          int index) {
        if (nftsBuilder_ == null) {
          return nfts_.get(index);  } else {
          return nftsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public java.util.List<? extends cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder> 
           getNftsOrBuilderList() {
        if (nftsBuilder_ != null) {
          return nftsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nfts_);
        }
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFT.Builder addNftsBuilder() {
        return getNftsFieldBuilder().addBuilder(
            cosmos.nft.v1beta1.Nft.CosmosNFT.getDefaultInstance());
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public cosmos.nft.v1beta1.Nft.CosmosNFT.Builder addNftsBuilder(
          int index) {
        return getNftsFieldBuilder().addBuilder(
            index, cosmos.nft.v1beta1.Nft.CosmosNFT.getDefaultInstance());
      }
      /**
       * <pre>
       * nfts is a group of nfts of the same owner
       * </pre>
       *
       * <code>repeated .cosmos.nft.v1beta1.CosmosNFT nfts = 2;</code>
       */
      public java.util.List<cosmos.nft.v1beta1.Nft.CosmosNFT.Builder> 
           getNftsBuilderList() {
        return getNftsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.nft.v1beta1.Nft.CosmosNFT, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder> 
          getNftsFieldBuilder() {
        if (nftsBuilder_ == null) {
          nftsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.nft.v1beta1.Nft.CosmosNFT, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder, cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder>(
                  nfts_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          nfts_ = null;
        }
        return nftsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.nft.v1beta1.Entry)
    }

    // @@protoc_insertion_point(class_scope:cosmos.nft.v1beta1.Entry)
    private static final cosmos.nft.v1beta1.Genesis.Entry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.nft.v1beta1.Genesis.Entry();
    }

    public static cosmos.nft.v1beta1.Genesis.Entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Entry>
        PARSER = new com.google.protobuf.AbstractParser<Entry>() {
      @java.lang.Override
      public Entry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Entry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Entry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.nft.v1beta1.Genesis.Entry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_GenesisState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_Entry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n cosmos/nft/v1beta1/genesis.proto\022\022cosm" +
      "os.nft.v1beta1\032\034cosmos/nft/v1beta1/nft.p" +
      "roto\"o\n\014GenesisState\0223\n\007classes\030\001 \003(\0132\"." +
      "cosmos.nft.v1beta1.CosmosNFTClass\022*\n\007ent" +
      "ries\030\002 \003(\0132\031.cosmos.nft.v1beta1.Entry\"C\n" +
      "\005Entry\022\r\n\005owner\030\001 \001(\t\022+\n\004nfts\030\002 \003(\0132\035.co" +
      "smos.nft.v1beta1.CosmosNFTB$Z\"github.com" +
      "/cosmos/cosmos-sdk/x/nftb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cosmos.nft.v1beta1.Nft.getDescriptor(),
        });
    internal_static_cosmos_nft_v1beta1_GenesisState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_nft_v1beta1_GenesisState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_GenesisState_descriptor,
        new java.lang.String[] { "Classes", "Entries", });
    internal_static_cosmos_nft_v1beta1_Entry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_nft_v1beta1_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_Entry_descriptor,
        new java.lang.String[] { "Owner", "Nfts", });
    cosmos.nft.v1beta1.Nft.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
