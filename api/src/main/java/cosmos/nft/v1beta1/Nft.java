// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/nft/v1beta1/nft.proto

package cosmos.nft.v1beta1;

public final class Nft {
  private Nft() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CosmosNFTClassOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.CosmosNFTClass)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * name defines the human-readable name of the NFT classification,optional
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name defines the human-readable name of the NFT classification,optional
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * symbol is an abbreviated name for nft classification,optional
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * symbol is an abbreviated name for nft classification,optional
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * description is a brief description of nft classification,optional
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * description is a brief description of nft classification,optional
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
     * </pre>
     *
     * <code>string uri = 5;</code>
     * @return The uri.
     */
    java.lang.String getUri();
    /**
     * <pre>
     * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
     * </pre>
     *
     * <code>string uri = 5;</code>
     * @return The bytes for uri.
     */
    com.google.protobuf.ByteString
        getUriBytes();

    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri,optional
     * </pre>
     *
     * <code>string uri_hash = 6;</code>
     * @return The uriHash.
     */
    java.lang.String getUriHash();
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri,optional
     * </pre>
     *
     * <code>string uri_hash = 6;</code>
     * @return The bytes for uriHash.
     */
    com.google.protobuf.ByteString
        getUriHashBytes();

    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     * @return The data.
     */
    com.google.protobuf2.Any getData();
    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     */
    com.google.protobuf2.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * <pre>
   * Class defines the class of the nft type.
   * </pre>
   *
   * Protobuf type {@code cosmos.nft.v1beta1.CosmosNFTClass}
   */
  public static final class CosmosNFTClass extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.nft.v1beta1.CosmosNFTClass)
      CosmosNFTClassOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CosmosNFTClass.newBuilder() to construct.
    private CosmosNFTClass(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CosmosNFTClass() {
      id_ = "";
      name_ = "";
      symbol_ = "";
      description_ = "";
      uri_ = "";
      uriHash_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CosmosNFTClass();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CosmosNFTClass(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              uri_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              uriHash_ = s;
              break;
            }
            case 58: {
              com.google.protobuf2.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf2.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFTClass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.nft.v1beta1.Nft.CosmosNFTClass.class, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name defines the human-readable name of the NFT classification,optional
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name defines the human-readable name of the NFT classification,optional
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 3;
    private volatile java.lang.Object symbol_;
    /**
     * <pre>
     * symbol is an abbreviated name for nft classification,optional
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * symbol is an abbreviated name for nft classification,optional
     * </pre>
     *
     * <code>string symbol = 3;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * description is a brief description of nft classification,optional
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * description is a brief description of nft classification,optional
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URI_FIELD_NUMBER = 5;
    private volatile java.lang.Object uri_;
    /**
     * <pre>
     * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
     * </pre>
     *
     * <code>string uri = 5;</code>
     * @return The uri.
     */
    @java.lang.Override
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
     * </pre>
     *
     * <code>string uri = 5;</code>
     * @return The bytes for uri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URI_HASH_FIELD_NUMBER = 6;
    private volatile java.lang.Object uriHash_;
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri,optional
     * </pre>
     *
     * <code>string uri_hash = 6;</code>
     * @return The uriHash.
     */
    @java.lang.Override
    public java.lang.String getUriHash() {
      java.lang.Object ref = uriHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uriHash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri,optional
     * </pre>
     *
     * <code>string uri_hash = 6;</code>
     * @return The bytes for uriHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriHashBytes() {
      java.lang.Object ref = uriHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uriHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 7;
    private com.google.protobuf2.Any data_;
    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf2.Any getData() {
      return data_ == null ? com.google.protobuf2.Any.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * data is the metadata of NFT classification,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf2.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, symbol_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!getUriBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, uri_);
      }
      if (!getUriHashBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, uriHash_);
      }
      if (data_ != null) {
        output.writeMessage(7, getData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, symbol_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!getUriBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, uri_);
      }
      if (!getUriHashBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, uriHash_);
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.nft.v1beta1.Nft.CosmosNFTClass)) {
        return super.equals(obj);
      }
      cosmos.nft.v1beta1.Nft.CosmosNFTClass other = (cosmos.nft.v1beta1.Nft.CosmosNFTClass) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getUri()
          .equals(other.getUri())) return false;
      if (!getUriHash()
          .equals(other.getUriHash())) return false;
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
      hash = (37 * hash) + URI_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getUriHash().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.nft.v1beta1.Nft.CosmosNFTClass prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Class defines the class of the nft type.
     * </pre>
     *
     * Protobuf type {@code cosmos.nft.v1beta1.CosmosNFTClass}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.nft.v1beta1.CosmosNFTClass)
        cosmos.nft.v1beta1.Nft.CosmosNFTClassOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFTClass_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.nft.v1beta1.Nft.CosmosNFTClass.class, cosmos.nft.v1beta1.Nft.CosmosNFTClass.Builder.class);
      }

      // Construct using cosmos.nft.v1beta1.Nft.CosmosNFTClass.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        symbol_ = "";

        description_ = "";

        uri_ = "";

        uriHash_ = "";

        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass getDefaultInstanceForType() {
        return cosmos.nft.v1beta1.Nft.CosmosNFTClass.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass build() {
        cosmos.nft.v1beta1.Nft.CosmosNFTClass result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFTClass buildPartial() {
        cosmos.nft.v1beta1.Nft.CosmosNFTClass result = new cosmos.nft.v1beta1.Nft.CosmosNFTClass(this);
        result.id_ = id_;
        result.name_ = name_;
        result.symbol_ = symbol_;
        result.description_ = description_;
        result.uri_ = uri_;
        result.uriHash_ = uriHash_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.nft.v1beta1.Nft.CosmosNFTClass) {
          return mergeFrom((cosmos.nft.v1beta1.Nft.CosmosNFTClass)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.nft.v1beta1.Nft.CosmosNFTClass other) {
        if (other == cosmos.nft.v1beta1.Nft.CosmosNFTClass.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getUri().isEmpty()) {
          uri_ = other.uri_;
          onChanged();
        }
        if (!other.getUriHash().isEmpty()) {
          uriHash_ = other.uriHash_;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.nft.v1beta1.Nft.CosmosNFTClass parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.nft.v1beta1.Nft.CosmosNFTClass) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name defines the human-readable name of the NFT classification,optional
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name defines the human-readable name of the NFT classification,optional
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name defines the human-readable name of the NFT classification,optional
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name defines the human-readable name of the NFT classification,optional
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name defines the human-readable name of the NFT classification,optional
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <pre>
       * symbol is an abbreviated name for nft classification,optional
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * symbol is an abbreviated name for nft classification,optional
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * symbol is an abbreviated name for nft classification,optional
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol is an abbreviated name for nft classification,optional
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * symbol is an abbreviated name for nft classification,optional
       * </pre>
       *
       * <code>string symbol = 3;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * description is a brief description of nft classification,optional
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * description is a brief description of nft classification,optional
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * description is a brief description of nft classification,optional
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description is a brief description of nft classification,optional
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description is a brief description of nft classification,optional
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uri_ = "";
      /**
       * <pre>
       * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
       * </pre>
       *
       * <code>string uri = 5;</code>
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = uri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
       * </pre>
       *
       * <code>string uri = 5;</code>
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString
          getUriBytes() {
        java.lang.Object ref = uri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
       * </pre>
       *
       * <code>string uri = 5;</code>
       * @param value The uri to set.
       * @return This builder for chaining.
       */
      public Builder setUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
       * </pre>
       *
       * <code>string uri = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUri() {
        
        uri_ = getDefaultInstance().getUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri is a URI may point to a JSON file that conforms to the nft classification Metadata JSON Schema.optional
       * </pre>
       *
       * <code>string uri = 5;</code>
       * @param value The bytes for uri to set.
       * @return This builder for chaining.
       */
      public Builder setUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uriHash_ = "";
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri,optional
       * </pre>
       *
       * <code>string uri_hash = 6;</code>
       * @return The uriHash.
       */
      public java.lang.String getUriHash() {
        java.lang.Object ref = uriHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uriHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri,optional
       * </pre>
       *
       * <code>string uri_hash = 6;</code>
       * @return The bytes for uriHash.
       */
      public com.google.protobuf.ByteString
          getUriHashBytes() {
        java.lang.Object ref = uriHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uriHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri,optional
       * </pre>
       *
       * <code>string uri_hash = 6;</code>
       * @param value The uriHash to set.
       * @return This builder for chaining.
       */
      public Builder setUriHash(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uriHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri,optional
       * </pre>
       *
       * <code>string uri_hash = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUriHash() {
        
        uriHash_ = getDefaultInstance().getUriHash();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri,optional
       * </pre>
       *
       * <code>string uri_hash = 6;</code>
       * @param value The bytes for uriHash to set.
       * @return This builder for chaining.
       */
      public Builder setUriHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uriHash_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf2.Any data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> dataBuilder_;
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       * @return The data.
       */
      public com.google.protobuf2.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf2.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public Builder setData(com.google.protobuf2.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public Builder setData(
          com.google.protobuf2.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public Builder mergeData(com.google.protobuf2.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf2.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public com.google.protobuf2.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      public com.google.protobuf2.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf2.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * data is the metadata of NFT classification,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.nft.v1beta1.CosmosNFTClass)
    }

    // @@protoc_insertion_point(class_scope:cosmos.nft.v1beta1.CosmosNFTClass)
    private static final cosmos.nft.v1beta1.Nft.CosmosNFTClass DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.nft.v1beta1.Nft.CosmosNFTClass();
    }

    public static cosmos.nft.v1beta1.Nft.CosmosNFTClass getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CosmosNFTClass>
        PARSER = new com.google.protobuf.AbstractParser<CosmosNFTClass>() {
      @java.lang.Override
      public CosmosNFTClass parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CosmosNFTClass(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CosmosNFTClass> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CosmosNFTClass> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFTClass getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CosmosNFTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.nft.v1beta1.CosmosNFT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string class_id = 1;</code>
     * @return The classId.
     */
    java.lang.String getClassId();
    /**
     * <pre>
     * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string class_id = 1;</code>
     * @return The bytes for classId.
     */
    com.google.protobuf.ByteString
        getClassIdBytes();

    /**
     * <pre>
     * id defines the unique identification of NFT
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * id defines the unique identification of NFT
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * uri defines NFT's metadata storage address outside the chain
     * </pre>
     *
     * <code>string uri = 3;</code>
     * @return The uri.
     */
    java.lang.String getUri();
    /**
     * <pre>
     * uri defines NFT's metadata storage address outside the chain
     * </pre>
     *
     * <code>string uri = 3;</code>
     * @return The bytes for uri.
     */
    com.google.protobuf.ByteString
        getUriBytes();

    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri
     * </pre>
     *
     * <code>string uri_hash = 4;</code>
     * @return The uriHash.
     */
    java.lang.String getUriHash();
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri
     * </pre>
     *
     * <code>string uri_hash = 4;</code>
     * @return The bytes for uriHash.
     */
    com.google.protobuf.ByteString
        getUriHashBytes();

    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     * @return The data.
     */
    com.google.protobuf2.Any getData();
    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     */
    com.google.protobuf2.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * <pre>
   * NFT defines the NFT.
   * </pre>
   *
   * Protobuf type {@code cosmos.nft.v1beta1.CosmosNFT}
   */
  public static final class CosmosNFT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.nft.v1beta1.CosmosNFT)
      CosmosNFTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CosmosNFT.newBuilder() to construct.
    private CosmosNFT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CosmosNFT() {
      classId_ = "";
      id_ = "";
      uri_ = "";
      uriHash_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CosmosNFT();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CosmosNFT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              classId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              uri_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              uriHash_ = s;
              break;
            }
            case 82: {
              com.google.protobuf2.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf2.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cosmos.nft.v1beta1.Nft.CosmosNFT.class, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder.class);
    }

    public static final int CLASS_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object classId_;
    /**
     * <pre>
     * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string class_id = 1;</code>
     * @return The classId.
     */
    @java.lang.Override
    public java.lang.String getClassId() {
      java.lang.Object ref = classId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        classId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
     * </pre>
     *
     * <code>string class_id = 1;</code>
     * @return The bytes for classId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClassIdBytes() {
      java.lang.Object ref = classId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        classId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * id defines the unique identification of NFT
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * id defines the unique identification of NFT
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URI_FIELD_NUMBER = 3;
    private volatile java.lang.Object uri_;
    /**
     * <pre>
     * uri defines NFT's metadata storage address outside the chain
     * </pre>
     *
     * <code>string uri = 3;</code>
     * @return The uri.
     */
    @java.lang.Override
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * uri defines NFT's metadata storage address outside the chain
     * </pre>
     *
     * <code>string uri = 3;</code>
     * @return The bytes for uri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URI_HASH_FIELD_NUMBER = 4;
    private volatile java.lang.Object uriHash_;
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri
     * </pre>
     *
     * <code>string uri_hash = 4;</code>
     * @return The uriHash.
     */
    @java.lang.Override
    public java.lang.String getUriHash() {
      java.lang.Object ref = uriHash_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uriHash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * uri_hash is a hash of the document pointed to uri
     * </pre>
     *
     * <code>string uri_hash = 4;</code>
     * @return The bytes for uriHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUriHashBytes() {
      java.lang.Object ref = uriHash_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uriHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 10;
    private com.google.protobuf2.Any data_;
    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf2.Any getData() {
      return data_ == null ? com.google.protobuf2.Any.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * data is the metadata of the NFT,optional
     * </pre>
     *
     * <code>.google.protobuf2.Any data = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf2.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getClassIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, classId_);
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      if (!getUriBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uri_);
      }
      if (!getUriHashBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, uriHash_);
      }
      if (data_ != null) {
        output.writeMessage(10, getData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getClassIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, classId_);
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      if (!getUriBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uri_);
      }
      if (!getUriHashBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, uriHash_);
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cosmos.nft.v1beta1.Nft.CosmosNFT)) {
        return super.equals(obj);
      }
      cosmos.nft.v1beta1.Nft.CosmosNFT other = (cosmos.nft.v1beta1.Nft.CosmosNFT) obj;

      if (!getClassId()
          .equals(other.getClassId())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getUri()
          .equals(other.getUri())) return false;
      if (!getUriHash()
          .equals(other.getUriHash())) return false;
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLASS_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClassId().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
      hash = (37 * hash) + URI_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getUriHash().hashCode();
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cosmos.nft.v1beta1.Nft.CosmosNFT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cosmos.nft.v1beta1.Nft.CosmosNFT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NFT defines the NFT.
     * </pre>
     *
     * Protobuf type {@code cosmos.nft.v1beta1.CosmosNFT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.nft.v1beta1.CosmosNFT)
        cosmos.nft.v1beta1.Nft.CosmosNFTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cosmos.nft.v1beta1.Nft.CosmosNFT.class, cosmos.nft.v1beta1.Nft.CosmosNFT.Builder.class);
      }

      // Construct using cosmos.nft.v1beta1.Nft.CosmosNFT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        classId_ = "";

        id_ = "";

        uri_ = "";

        uriHash_ = "";

        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cosmos.nft.v1beta1.Nft.internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFT getDefaultInstanceForType() {
        return cosmos.nft.v1beta1.Nft.CosmosNFT.getDefaultInstance();
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFT build() {
        cosmos.nft.v1beta1.Nft.CosmosNFT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cosmos.nft.v1beta1.Nft.CosmosNFT buildPartial() {
        cosmos.nft.v1beta1.Nft.CosmosNFT result = new cosmos.nft.v1beta1.Nft.CosmosNFT(this);
        result.classId_ = classId_;
        result.id_ = id_;
        result.uri_ = uri_;
        result.uriHash_ = uriHash_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cosmos.nft.v1beta1.Nft.CosmosNFT) {
          return mergeFrom((cosmos.nft.v1beta1.Nft.CosmosNFT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cosmos.nft.v1beta1.Nft.CosmosNFT other) {
        if (other == cosmos.nft.v1beta1.Nft.CosmosNFT.getDefaultInstance()) return this;
        if (!other.getClassId().isEmpty()) {
          classId_ = other.classId_;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getUri().isEmpty()) {
          uri_ = other.uri_;
          onChanged();
        }
        if (!other.getUriHash().isEmpty()) {
          uriHash_ = other.uriHash_;
          onChanged();
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cosmos.nft.v1beta1.Nft.CosmosNFT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cosmos.nft.v1beta1.Nft.CosmosNFT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object classId_ = "";
      /**
       * <pre>
       * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string class_id = 1;</code>
       * @return The classId.
       */
      public java.lang.String getClassId() {
        java.lang.Object ref = classId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          classId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string class_id = 1;</code>
       * @return The bytes for classId.
       */
      public com.google.protobuf.ByteString
          getClassIdBytes() {
        java.lang.Object ref = classId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          classId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string class_id = 1;</code>
       * @param value The classId to set.
       * @return This builder for chaining.
       */
      public Builder setClassId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string class_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassId() {
        
        classId_ = getDefaultInstance().getClassId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * class_id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
       * </pre>
       *
       * <code>string class_id = 1;</code>
       * @param value The bytes for classId to set.
       * @return This builder for chaining.
       */
      public Builder setClassIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        classId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * id defines the unique identification of NFT
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * id defines the unique identification of NFT
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * id defines the unique identification of NFT
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id defines the unique identification of NFT
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id defines the unique identification of NFT
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uri_ = "";
      /**
       * <pre>
       * uri defines NFT's metadata storage address outside the chain
       * </pre>
       *
       * <code>string uri = 3;</code>
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = uri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uri defines NFT's metadata storage address outside the chain
       * </pre>
       *
       * <code>string uri = 3;</code>
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString
          getUriBytes() {
        java.lang.Object ref = uri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uri defines NFT's metadata storage address outside the chain
       * </pre>
       *
       * <code>string uri = 3;</code>
       * @param value The uri to set.
       * @return This builder for chaining.
       */
      public Builder setUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri defines NFT's metadata storage address outside the chain
       * </pre>
       *
       * <code>string uri = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUri() {
        
        uri_ = getDefaultInstance().getUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri defines NFT's metadata storage address outside the chain
       * </pre>
       *
       * <code>string uri = 3;</code>
       * @param value The bytes for uri to set.
       * @return This builder for chaining.
       */
      public Builder setUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uriHash_ = "";
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri
       * </pre>
       *
       * <code>string uri_hash = 4;</code>
       * @return The uriHash.
       */
      public java.lang.String getUriHash() {
        java.lang.Object ref = uriHash_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uriHash_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri
       * </pre>
       *
       * <code>string uri_hash = 4;</code>
       * @return The bytes for uriHash.
       */
      public com.google.protobuf.ByteString
          getUriHashBytes() {
        java.lang.Object ref = uriHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uriHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri
       * </pre>
       *
       * <code>string uri_hash = 4;</code>
       * @param value The uriHash to set.
       * @return This builder for chaining.
       */
      public Builder setUriHash(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uriHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri
       * </pre>
       *
       * <code>string uri_hash = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUriHash() {
        
        uriHash_ = getDefaultInstance().getUriHash();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uri_hash is a hash of the document pointed to uri
       * </pre>
       *
       * <code>string uri_hash = 4;</code>
       * @param value The bytes for uriHash to set.
       * @return This builder for chaining.
       */
      public Builder setUriHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uriHash_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf2.Any data_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> dataBuilder_;
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       * @return The data.
       */
      public com.google.protobuf2.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf2.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public Builder setData(com.google.protobuf2.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public Builder setData(
          com.google.protobuf2.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public Builder mergeData(com.google.protobuf2.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf2.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public com.google.protobuf2.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      public com.google.protobuf2.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf2.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * data is the metadata of the NFT,optional
       * </pre>
       *
       * <code>.google.protobuf2.Any data = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf2.Any, com.google.protobuf2.Any.Builder, com.google.protobuf2.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.nft.v1beta1.CosmosNFT)
    }

    // @@protoc_insertion_point(class_scope:cosmos.nft.v1beta1.CosmosNFT)
    private static final cosmos.nft.v1beta1.Nft.CosmosNFT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cosmos.nft.v1beta1.Nft.CosmosNFT();
    }

    public static cosmos.nft.v1beta1.Nft.CosmosNFT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CosmosNFT>
        PARSER = new com.google.protobuf.AbstractParser<CosmosNFT>() {
      @java.lang.Override
      public CosmosNFT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CosmosNFT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CosmosNFT> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CosmosNFT> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cosmos.nft.v1beta1.Nft.CosmosNFT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_CosmosNFTClass_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_nft_v1beta1_CosmosNFT_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034cosmos/nft/v1beta1/nft.proto\022\022cosmos.n" +
      "ft.v1beta1\032\032google/protobuf2/any.proto\"\223" +
      "\001\n\016CosmosNFTClass\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 " +
      "\001(\t\022\016\n\006symbol\030\003 \001(\t\022\023\n\013description\030\004 \001(\t" +
      "\022\013\n\003uri\030\005 \001(\t\022\020\n\010uri_hash\030\006 \001(\t\022#\n\004data\030" +
      "\007 \001(\0132\025.google.protobuf2.Any\"m\n\tCosmosNF" +
      "T\022\020\n\010class_id\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\013\n\003uri\030\003" +
      " \001(\t\022\020\n\010uri_hash\030\004 \001(\t\022#\n\004data\030\n \001(\0132\025.g" +
      "oogle.protobuf2.AnyB$Z\"github.com/cosmos" +
      "/cosmos-sdk/x/nftb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.AnyProto.getDescriptor(),
        });
    internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_nft_v1beta1_CosmosNFTClass_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_CosmosNFTClass_descriptor,
        new java.lang.String[] { "Id", "Name", "Symbol", "Description", "Uri", "UriHash", "Data", });
    internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_nft_v1beta1_CosmosNFT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_nft_v1beta1_CosmosNFT_descriptor,
        new java.lang.String[] { "ClassId", "Id", "Uri", "UriHash", "Data", });
    com.google.protobuf2.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
