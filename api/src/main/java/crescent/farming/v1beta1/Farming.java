// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/farming/v1beta1/farming.proto

package crescent.farming.v1beta1;

public final class Farming {
  private Farming() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * PlanType enumerates the valid types of a plan.
   * </pre>
   *
   * Protobuf enum {@code crescent.farming.v1beta1.PlanType}
   */
  public enum PlanType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * PLAN_TYPE_UNSPECIFIED defines the default plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "PlanTypeNil"];</code>
     */
    PLAN_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * PLAN_TYPE_PUBLIC defines the public plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_PUBLIC = 1 [(.gogoproto.enumvalue_customname) = "PlanTypePublic"];</code>
     */
    PLAN_TYPE_PUBLIC(1),
    /**
     * <pre>
     * PLAN_TYPE_PRIVATE defines the private plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_PRIVATE = 2 [(.gogoproto.enumvalue_customname) = "PlanTypePrivate"];</code>
     */
    PLAN_TYPE_PRIVATE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * PLAN_TYPE_UNSPECIFIED defines the default plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "PlanTypeNil"];</code>
     */
    public static final int PLAN_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * PLAN_TYPE_PUBLIC defines the public plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_PUBLIC = 1 [(.gogoproto.enumvalue_customname) = "PlanTypePublic"];</code>
     */
    public static final int PLAN_TYPE_PUBLIC_VALUE = 1;
    /**
     * <pre>
     * PLAN_TYPE_PRIVATE defines the private plan type.
     * </pre>
     *
     * <code>PLAN_TYPE_PRIVATE = 2 [(.gogoproto.enumvalue_customname) = "PlanTypePrivate"];</code>
     */
    public static final int PLAN_TYPE_PRIVATE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PlanType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PlanType forNumber(int value) {
      switch (value) {
        case 0: return PLAN_TYPE_UNSPECIFIED;
        case 1: return PLAN_TYPE_PUBLIC;
        case 2: return PLAN_TYPE_PRIVATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PlanType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlanType>() {
            public PlanType findValueByNumber(int number) {
              return PlanType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.getDescriptor().getEnumTypes().get(0);
    }

    private static final PlanType[] VALUES = values();

    public static PlanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PlanType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:crescent.farming.v1beta1.PlanType)
  }

  /**
   * <pre>
   * AddressType enumerates the available types of a address.
   * </pre>
   *
   * Protobuf enum {@code crescent.farming.v1beta1.AddressType}
   */
  public enum AddressType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * the 32 bytes length address type of ADR 028.
     * </pre>
     *
     * <code>ADDRESS_TYPE_32_BYTES = 0 [(.gogoproto.enumvalue_customname) = "AddressType32Bytes"];</code>
     */
    ADDRESS_TYPE_32_BYTES(0),
    /**
     * <pre>
     * the default 20 bytes length address type.
     * </pre>
     *
     * <code>ADDRESS_TYPE_20_BYTES = 1 [(.gogoproto.enumvalue_customname) = "AddressType20Bytes"];</code>
     */
    ADDRESS_TYPE_20_BYTES(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * the 32 bytes length address type of ADR 028.
     * </pre>
     *
     * <code>ADDRESS_TYPE_32_BYTES = 0 [(.gogoproto.enumvalue_customname) = "AddressType32Bytes"];</code>
     */
    public static final int ADDRESS_TYPE_32_BYTES_VALUE = 0;
    /**
     * <pre>
     * the default 20 bytes length address type.
     * </pre>
     *
     * <code>ADDRESS_TYPE_20_BYTES = 1 [(.gogoproto.enumvalue_customname) = "AddressType20Bytes"];</code>
     */
    public static final int ADDRESS_TYPE_20_BYTES_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AddressType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AddressType forNumber(int value) {
      switch (value) {
        case 0: return ADDRESS_TYPE_32_BYTES;
        case 1: return ADDRESS_TYPE_20_BYTES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AddressType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AddressType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AddressType>() {
            public AddressType findValueByNumber(int number) {
              return AddressType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.getDescriptor().getEnumTypes().get(1);
    }

    private static final AddressType[] VALUES = values();

    public static AddressType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AddressType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:crescent.farming.v1beta1.AddressType)
  }

  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getPrivatePlanCreationFeeList();
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getPrivatePlanCreationFee(int index);
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getPrivatePlanCreationFeeCount();
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPrivatePlanCreationFeeOrBuilderList();
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPrivatePlanCreationFeeOrBuilder(
        int index);

    /**
     * <pre>
     * next_epoch_days is the epoch length in number of days
     * it updates internal state called CurrentEpochDays that is used to process
     * staking and reward distribution in end blocker
     * </pre>
     *
     * <code>uint32 next_epoch_days = 2 [(.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
     * @return The nextEpochDays.
     */
    int getNextEpochDays();

    /**
     * <pre>
     * farming_fee_collector is the module account address to collect fees within the farming module
     * </pre>
     *
     * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
     * @return The farmingFeeCollector.
     */
    java.lang.String getFarmingFeeCollector();
    /**
     * <pre>
     * farming_fee_collector is the module account address to collect fees within the farming module
     * </pre>
     *
     * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
     * @return The bytes for farmingFeeCollector.
     */
    com.google.protobuf.ByteString
        getFarmingFeeCollectorBytes();

    /**
     * <pre>
     * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
     * </pre>
     *
     * <code>uint64 delayed_staking_gas_fee = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
     * @return The delayedStakingGasFee.
     */
    long getDelayedStakingGasFee();

    /**
     * <code>uint32 max_num_private_plans = 5 [(.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
     * @return The maxNumPrivatePlans.
     */
    int getMaxNumPrivatePlans();
  }
  /**
   * <pre>
   * Params defines the set of params for the farming module.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      privatePlanCreationFee_ = java.util.Collections.emptyList();
      farmingFeeCollector_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Params(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                privatePlanCreationFee_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000001;
              }
              privatePlanCreationFee_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 16: {

              nextEpochDays_ = input.readUInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              farmingFeeCollector_ = s;
              break;
            }
            case 32: {

              delayedStakingGasFee_ = input.readUInt64();
              break;
            }
            case 40: {

              maxNumPrivatePlans_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          privatePlanCreationFee_ = java.util.Collections.unmodifiableList(privatePlanCreationFee_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.Params.class, crescent.farming.v1beta1.Farming.Params.Builder.class);
    }

    public static final int PRIVATE_PLAN_CREATION_FEE_FIELD_NUMBER = 1;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> privatePlanCreationFee_;
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPrivatePlanCreationFeeList() {
      return privatePlanCreationFee_;
    }
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getPrivatePlanCreationFeeOrBuilderList() {
      return privatePlanCreationFee_;
    }
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getPrivatePlanCreationFeeCount() {
      return privatePlanCreationFee_.size();
    }
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getPrivatePlanCreationFee(int index) {
      return privatePlanCreationFee_.get(index);
    }
    /**
     * <pre>
     * private_plan_creation_fee specifies the fee for plan creation
     * this fee prevents from spamming and is collected in the community pool
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPrivatePlanCreationFeeOrBuilder(
        int index) {
      return privatePlanCreationFee_.get(index);
    }

    public static final int NEXT_EPOCH_DAYS_FIELD_NUMBER = 2;
    private int nextEpochDays_;
    /**
     * <pre>
     * next_epoch_days is the epoch length in number of days
     * it updates internal state called CurrentEpochDays that is used to process
     * staking and reward distribution in end blocker
     * </pre>
     *
     * <code>uint32 next_epoch_days = 2 [(.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
     * @return The nextEpochDays.
     */
    @java.lang.Override
    public int getNextEpochDays() {
      return nextEpochDays_;
    }

    public static final int FARMING_FEE_COLLECTOR_FIELD_NUMBER = 3;
    private volatile java.lang.Object farmingFeeCollector_;
    /**
     * <pre>
     * farming_fee_collector is the module account address to collect fees within the farming module
     * </pre>
     *
     * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
     * @return The farmingFeeCollector.
     */
    @java.lang.Override
    public java.lang.String getFarmingFeeCollector() {
      java.lang.Object ref = farmingFeeCollector_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        farmingFeeCollector_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * farming_fee_collector is the module account address to collect fees within the farming module
     * </pre>
     *
     * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
     * @return The bytes for farmingFeeCollector.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFarmingFeeCollectorBytes() {
      java.lang.Object ref = farmingFeeCollector_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        farmingFeeCollector_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELAYED_STAKING_GAS_FEE_FIELD_NUMBER = 4;
    private long delayedStakingGasFee_;
    /**
     * <pre>
     * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
     * </pre>
     *
     * <code>uint64 delayed_staking_gas_fee = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
     * @return The delayedStakingGasFee.
     */
    @java.lang.Override
    public long getDelayedStakingGasFee() {
      return delayedStakingGasFee_;
    }

    public static final int MAX_NUM_PRIVATE_PLANS_FIELD_NUMBER = 5;
    private int maxNumPrivatePlans_;
    /**
     * <code>uint32 max_num_private_plans = 5 [(.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
     * @return The maxNumPrivatePlans.
     */
    @java.lang.Override
    public int getMaxNumPrivatePlans() {
      return maxNumPrivatePlans_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < privatePlanCreationFee_.size(); i++) {
        output.writeMessage(1, privatePlanCreationFee_.get(i));
      }
      if (nextEpochDays_ != 0) {
        output.writeUInt32(2, nextEpochDays_);
      }
      if (!getFarmingFeeCollectorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, farmingFeeCollector_);
      }
      if (delayedStakingGasFee_ != 0L) {
        output.writeUInt64(4, delayedStakingGasFee_);
      }
      if (maxNumPrivatePlans_ != 0) {
        output.writeUInt32(5, maxNumPrivatePlans_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < privatePlanCreationFee_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, privatePlanCreationFee_.get(i));
      }
      if (nextEpochDays_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nextEpochDays_);
      }
      if (!getFarmingFeeCollectorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, farmingFeeCollector_);
      }
      if (delayedStakingGasFee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, delayedStakingGasFee_);
      }
      if (maxNumPrivatePlans_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxNumPrivatePlans_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.Params)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.Params other = (crescent.farming.v1beta1.Farming.Params) obj;

      if (!getPrivatePlanCreationFeeList()
          .equals(other.getPrivatePlanCreationFeeList())) return false;
      if (getNextEpochDays()
          != other.getNextEpochDays()) return false;
      if (!getFarmingFeeCollector()
          .equals(other.getFarmingFeeCollector())) return false;
      if (getDelayedStakingGasFee()
          != other.getDelayedStakingGasFee()) return false;
      if (getMaxNumPrivatePlans()
          != other.getMaxNumPrivatePlans()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPrivatePlanCreationFeeCount() > 0) {
        hash = (37 * hash) + PRIVATE_PLAN_CREATION_FEE_FIELD_NUMBER;
        hash = (53 * hash) + getPrivatePlanCreationFeeList().hashCode();
      }
      hash = (37 * hash) + NEXT_EPOCH_DAYS_FIELD_NUMBER;
      hash = (53 * hash) + getNextEpochDays();
      hash = (37 * hash) + FARMING_FEE_COLLECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getFarmingFeeCollector().hashCode();
      hash = (37 * hash) + DELAYED_STAKING_GAS_FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDelayedStakingGasFee());
      hash = (37 * hash) + MAX_NUM_PRIVATE_PLANS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxNumPrivatePlans();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params defines the set of params for the farming module.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.Params)
        crescent.farming.v1beta1.Farming.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.Params.class, crescent.farming.v1beta1.Farming.Params.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.Params.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPrivatePlanCreationFeeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (privatePlanCreationFeeBuilder_ == null) {
          privatePlanCreationFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          privatePlanCreationFeeBuilder_.clear();
        }
        nextEpochDays_ = 0;

        farmingFeeCollector_ = "";

        delayedStakingGasFee_ = 0L;

        maxNumPrivatePlans_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Params getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.Params.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Params build() {
        crescent.farming.v1beta1.Farming.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Params buildPartial() {
        crescent.farming.v1beta1.Farming.Params result = new crescent.farming.v1beta1.Farming.Params(this);
        int from_bitField0_ = bitField0_;
        if (privatePlanCreationFeeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            privatePlanCreationFee_ = java.util.Collections.unmodifiableList(privatePlanCreationFee_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.privatePlanCreationFee_ = privatePlanCreationFee_;
        } else {
          result.privatePlanCreationFee_ = privatePlanCreationFeeBuilder_.build();
        }
        result.nextEpochDays_ = nextEpochDays_;
        result.farmingFeeCollector_ = farmingFeeCollector_;
        result.delayedStakingGasFee_ = delayedStakingGasFee_;
        result.maxNumPrivatePlans_ = maxNumPrivatePlans_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.Params) {
          return mergeFrom((crescent.farming.v1beta1.Farming.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.Params other) {
        if (other == crescent.farming.v1beta1.Farming.Params.getDefaultInstance()) return this;
        if (privatePlanCreationFeeBuilder_ == null) {
          if (!other.privatePlanCreationFee_.isEmpty()) {
            if (privatePlanCreationFee_.isEmpty()) {
              privatePlanCreationFee_ = other.privatePlanCreationFee_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePrivatePlanCreationFeeIsMutable();
              privatePlanCreationFee_.addAll(other.privatePlanCreationFee_);
            }
            onChanged();
          }
        } else {
          if (!other.privatePlanCreationFee_.isEmpty()) {
            if (privatePlanCreationFeeBuilder_.isEmpty()) {
              privatePlanCreationFeeBuilder_.dispose();
              privatePlanCreationFeeBuilder_ = null;
              privatePlanCreationFee_ = other.privatePlanCreationFee_;
              bitField0_ = (bitField0_ & ~0x00000001);
              privatePlanCreationFeeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPrivatePlanCreationFeeFieldBuilder() : null;
            } else {
              privatePlanCreationFeeBuilder_.addAllMessages(other.privatePlanCreationFee_);
            }
          }
        }
        if (other.getNextEpochDays() != 0) {
          setNextEpochDays(other.getNextEpochDays());
        }
        if (!other.getFarmingFeeCollector().isEmpty()) {
          farmingFeeCollector_ = other.farmingFeeCollector_;
          onChanged();
        }
        if (other.getDelayedStakingGasFee() != 0L) {
          setDelayedStakingGasFee(other.getDelayedStakingGasFee());
        }
        if (other.getMaxNumPrivatePlans() != 0) {
          setMaxNumPrivatePlans(other.getMaxNumPrivatePlans());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.Params parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.Params) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> privatePlanCreationFee_ =
        java.util.Collections.emptyList();
      private void ensurePrivatePlanCreationFeeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          privatePlanCreationFee_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(privatePlanCreationFee_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> privatePlanCreationFeeBuilder_;

      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getPrivatePlanCreationFeeList() {
        if (privatePlanCreationFeeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(privatePlanCreationFee_);
        } else {
          return privatePlanCreationFeeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getPrivatePlanCreationFeeCount() {
        if (privatePlanCreationFeeBuilder_ == null) {
          return privatePlanCreationFee_.size();
        } else {
          return privatePlanCreationFeeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getPrivatePlanCreationFee(int index) {
        if (privatePlanCreationFeeBuilder_ == null) {
          return privatePlanCreationFee_.get(index);
        } else {
          return privatePlanCreationFeeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPrivatePlanCreationFee(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (privatePlanCreationFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.set(index, value);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setPrivatePlanCreationFee(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (privatePlanCreationFeeBuilder_ == null) {
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.set(index, builderForValue.build());
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPrivatePlanCreationFee(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (privatePlanCreationFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.add(value);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPrivatePlanCreationFee(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (privatePlanCreationFeeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.add(index, value);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPrivatePlanCreationFee(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (privatePlanCreationFeeBuilder_ == null) {
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.add(builderForValue.build());
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addPrivatePlanCreationFee(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (privatePlanCreationFeeBuilder_ == null) {
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.add(index, builderForValue.build());
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllPrivatePlanCreationFee(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (privatePlanCreationFeeBuilder_ == null) {
          ensurePrivatePlanCreationFeeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, privatePlanCreationFee_);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearPrivatePlanCreationFee() {
        if (privatePlanCreationFeeBuilder_ == null) {
          privatePlanCreationFee_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removePrivatePlanCreationFee(int index) {
        if (privatePlanCreationFeeBuilder_ == null) {
          ensurePrivatePlanCreationFeeIsMutable();
          privatePlanCreationFee_.remove(index);
          onChanged();
        } else {
          privatePlanCreationFeeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getPrivatePlanCreationFeeBuilder(
          int index) {
        return getPrivatePlanCreationFeeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getPrivatePlanCreationFeeOrBuilder(
          int index) {
        if (privatePlanCreationFeeBuilder_ == null) {
          return privatePlanCreationFee_.get(index);  } else {
          return privatePlanCreationFeeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getPrivatePlanCreationFeeOrBuilderList() {
        if (privatePlanCreationFeeBuilder_ != null) {
          return privatePlanCreationFeeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(privatePlanCreationFee_);
        }
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPrivatePlanCreationFeeBuilder() {
        return getPrivatePlanCreationFeeFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addPrivatePlanCreationFeeBuilder(
          int index) {
        return getPrivatePlanCreationFeeFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * private_plan_creation_fee specifies the fee for plan creation
       * this fee prevents from spamming and is collected in the community pool
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin private_plan_creation_fee = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"private_plan_creation_fee&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getPrivatePlanCreationFeeBuilderList() {
        return getPrivatePlanCreationFeeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getPrivatePlanCreationFeeFieldBuilder() {
        if (privatePlanCreationFeeBuilder_ == null) {
          privatePlanCreationFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  privatePlanCreationFee_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          privatePlanCreationFee_ = null;
        }
        return privatePlanCreationFeeBuilder_;
      }

      private int nextEpochDays_ ;
      /**
       * <pre>
       * next_epoch_days is the epoch length in number of days
       * it updates internal state called CurrentEpochDays that is used to process
       * staking and reward distribution in end blocker
       * </pre>
       *
       * <code>uint32 next_epoch_days = 2 [(.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
       * @return The nextEpochDays.
       */
      @java.lang.Override
      public int getNextEpochDays() {
        return nextEpochDays_;
      }
      /**
       * <pre>
       * next_epoch_days is the epoch length in number of days
       * it updates internal state called CurrentEpochDays that is used to process
       * staking and reward distribution in end blocker
       * </pre>
       *
       * <code>uint32 next_epoch_days = 2 [(.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
       * @param value The nextEpochDays to set.
       * @return This builder for chaining.
       */
      public Builder setNextEpochDays(int value) {
        
        nextEpochDays_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * next_epoch_days is the epoch length in number of days
       * it updates internal state called CurrentEpochDays that is used to process
       * staking and reward distribution in end blocker
       * </pre>
       *
       * <code>uint32 next_epoch_days = 2 [(.gogoproto.moretags) = "yaml:&#92;"next_epoch_days&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearNextEpochDays() {
        
        nextEpochDays_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object farmingFeeCollector_ = "";
      /**
       * <pre>
       * farming_fee_collector is the module account address to collect fees within the farming module
       * </pre>
       *
       * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
       * @return The farmingFeeCollector.
       */
      public java.lang.String getFarmingFeeCollector() {
        java.lang.Object ref = farmingFeeCollector_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          farmingFeeCollector_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * farming_fee_collector is the module account address to collect fees within the farming module
       * </pre>
       *
       * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
       * @return The bytes for farmingFeeCollector.
       */
      public com.google.protobuf.ByteString
          getFarmingFeeCollectorBytes() {
        java.lang.Object ref = farmingFeeCollector_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          farmingFeeCollector_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * farming_fee_collector is the module account address to collect fees within the farming module
       * </pre>
       *
       * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
       * @param value The farmingFeeCollector to set.
       * @return This builder for chaining.
       */
      public Builder setFarmingFeeCollector(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        farmingFeeCollector_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * farming_fee_collector is the module account address to collect fees within the farming module
       * </pre>
       *
       * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearFarmingFeeCollector() {
        
        farmingFeeCollector_ = getDefaultInstance().getFarmingFeeCollector();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * farming_fee_collector is the module account address to collect fees within the farming module
       * </pre>
       *
       * <code>string farming_fee_collector = 3 [(.gogoproto.moretags) = "yaml:&#92;"farming_fee_collector&#92;""];</code>
       * @param value The bytes for farmingFeeCollector to set.
       * @return This builder for chaining.
       */
      public Builder setFarmingFeeCollectorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        farmingFeeCollector_ = value;
        onChanged();
        return this;
      }

      private long delayedStakingGasFee_ ;
      /**
       * <pre>
       * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
       * </pre>
       *
       * <code>uint64 delayed_staking_gas_fee = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
       * @return The delayedStakingGasFee.
       */
      @java.lang.Override
      public long getDelayedStakingGasFee() {
        return delayedStakingGasFee_;
      }
      /**
       * <pre>
       * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
       * </pre>
       *
       * <code>uint64 delayed_staking_gas_fee = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
       * @param value The delayedStakingGasFee to set.
       * @return This builder for chaining.
       */
      public Builder setDelayedStakingGasFee(long value) {
        
        delayedStakingGasFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * delayed_staking_gas_fee is used to impose gas fee for the delayed staking
       * </pre>
       *
       * <code>uint64 delayed_staking_gas_fee = 4 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Gas", (.gogoproto.moretags) = "yaml:&#92;"delayed_staking_gas_fee&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearDelayedStakingGasFee() {
        
        delayedStakingGasFee_ = 0L;
        onChanged();
        return this;
      }

      private int maxNumPrivatePlans_ ;
      /**
       * <code>uint32 max_num_private_plans = 5 [(.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
       * @return The maxNumPrivatePlans.
       */
      @java.lang.Override
      public int getMaxNumPrivatePlans() {
        return maxNumPrivatePlans_;
      }
      /**
       * <code>uint32 max_num_private_plans = 5 [(.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
       * @param value The maxNumPrivatePlans to set.
       * @return This builder for chaining.
       */
      public Builder setMaxNumPrivatePlans(int value) {
        
        maxNumPrivatePlans_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_num_private_plans = 5 [(.gogoproto.moretags) = "yaml:&#92;"max_num_private_plans&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxNumPrivatePlans() {
        
        maxNumPrivatePlans_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.Params)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.Params)
    private static final crescent.farming.v1beta1.Farming.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.Params();
    }

    public static crescent.farming.v1beta1.Farming.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Params(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BasePlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.BasePlan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * id specifies index of the farming plan
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * name specifies the name for the plan
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name specifies the name for the plan
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * type specifies the plan type; type 0 is public and 1 is private
     * public plan must be created through governance proposal and private plan is
     * created by account
     * </pre>
     *
     * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * type specifies the plan type; type 0 is public and 1 is private
     * public plan must be created through governance proposal and private plan is
     * created by account
     * </pre>
     *
     * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
     * @return The type.
     */
    crescent.farming.v1beta1.Farming.PlanType getType();

    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The farmingPoolAddress.
     */
    java.lang.String getFarmingPoolAddress();
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The bytes for farmingPoolAddress.
     */
    com.google.protobuf.ByteString
        getFarmingPoolAddressBytes();

    /**
     * <pre>
     * termination_address defines the Bech32-encoded address that terminates the plan
     * when the plan ends after the end time, the balance of the farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The terminationAddress.
     */
    java.lang.String getTerminationAddress();
    /**
     * <pre>
     * termination_address defines the Bech32-encoded address that terminates the plan
     * when the plan ends after the end time, the balance of the farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The bytes for terminationAddress.
     */
    com.google.protobuf.ByteString
        getTerminationAddressBytes();

    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> 
        getStakingCoinWeightsList();
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoin getStakingCoinWeights(int index);
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    int getStakingCoinWeightsCount();
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getStakingCoinWeightsOrBuilderList();
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getStakingCoinWeightsOrBuilder(
        int index);

    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    boolean hasStartTime();
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    com.google.protobuf.Timestamp getStartTime();
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the endTime field is set.
     */
    boolean hasEndTime();
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The endTime.
     */
    com.google.protobuf.Timestamp getEndTime();
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder();

    /**
     * <pre>
     * terminated indicates whether the plan has been terminated or not
     * </pre>
     *
     * <code>bool terminated = 9;</code>
     * @return The terminated.
     */
    boolean getTerminated();

    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the lastDistributionTime field is set.
     */
    boolean hasLastDistributionTime();
    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The lastDistributionTime.
     */
    com.google.protobuf.Timestamp getLastDistributionTime();
    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getLastDistributionTimeOrBuilder();

    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getDistributedCoinsList();
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getDistributedCoins(int index);
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getDistributedCoinsCount();
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getDistributedCoinsOrBuilderList();
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getDistributedCoinsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * BasePlan defines a base plan type and contains the required fields
   * for basic farming plan functionality. Any custom farming plan type must
   * extend this type for additional functionality (for example, fixed amount plan, ratio
   * plan).
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.BasePlan}
   */
  public static final class BasePlan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.BasePlan)
      BasePlanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BasePlan.newBuilder() to construct.
    private BasePlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BasePlan() {
      name_ = "";
      type_ = 0;
      farmingPoolAddress_ = "";
      terminationAddress_ = "";
      stakingCoinWeights_ = java.util.Collections.emptyList();
      distributedCoins_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BasePlan();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BasePlan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              farmingPoolAddress_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              terminationAddress_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                stakingCoinWeights_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>();
                mutable_bitField0_ |= 0x00000001;
              }
              stakingCoinWeights_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.DecCoin.parser(), extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (startTime_ != null) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (endTime_ != null) {
                subBuilder = endTime_.toBuilder();
              }
              endTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endTime_);
                endTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 72: {

              terminated_ = input.readBool();
              break;
            }
            case 82: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (lastDistributionTime_ != null) {
                subBuilder = lastDistributionTime_.toBuilder();
              }
              lastDistributionTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lastDistributionTime_);
                lastDistributionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                distributedCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000002;
              }
              distributedCoins_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          stakingCoinWeights_ = java.util.Collections.unmodifiableList(stakingCoinWeights_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          distributedCoins_ = java.util.Collections.unmodifiableList(distributedCoins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_BasePlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_BasePlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.BasePlan.class, crescent.farming.v1beta1.Farming.BasePlan.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * id specifies index of the farming plan
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name specifies the name for the plan
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name specifies the name for the plan
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * type specifies the plan type; type 0 is public and 1 is private
     * public plan must be created through governance proposal and private plan is
     * created by account
     * </pre>
     *
     * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * type specifies the plan type; type 0 is public and 1 is private
     * public plan must be created through governance proposal and private plan is
     * created by account
     * </pre>
     *
     * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
     * @return The type.
     */
    @java.lang.Override public crescent.farming.v1beta1.Farming.PlanType getType() {
      @SuppressWarnings("deprecation")
      crescent.farming.v1beta1.Farming.PlanType result = crescent.farming.v1beta1.Farming.PlanType.valueOf(type_);
      return result == null ? crescent.farming.v1beta1.Farming.PlanType.UNRECOGNIZED : result;
    }

    public static final int FARMING_POOL_ADDRESS_FIELD_NUMBER = 4;
    private volatile java.lang.Object farmingPoolAddress_;
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The farmingPoolAddress.
     */
    @java.lang.Override
    public java.lang.String getFarmingPoolAddress() {
      java.lang.Object ref = farmingPoolAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        farmingPoolAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * farming_pool_address defines the bech32-encoded address of the farming pool
     * </pre>
     *
     * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
     * @return The bytes for farmingPoolAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFarmingPoolAddressBytes() {
      java.lang.Object ref = farmingPoolAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        farmingPoolAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TERMINATION_ADDRESS_FIELD_NUMBER = 5;
    private volatile java.lang.Object terminationAddress_;
    /**
     * <pre>
     * termination_address defines the Bech32-encoded address that terminates the plan
     * when the plan ends after the end time, the balance of the farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The terminationAddress.
     */
    @java.lang.Override
    public java.lang.String getTerminationAddress() {
      java.lang.Object ref = terminationAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        terminationAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * termination_address defines the Bech32-encoded address that terminates the plan
     * when the plan ends after the end time, the balance of the farming pool address
     * is transferred to the termination address
     * </pre>
     *
     * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
     * @return The bytes for terminationAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTerminationAddressBytes() {
      java.lang.Object ref = terminationAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        terminationAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STAKING_COIN_WEIGHTS_FIELD_NUMBER = 6;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> stakingCoinWeights_;
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getStakingCoinWeightsList() {
      return stakingCoinWeights_;
    }
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getStakingCoinWeightsOrBuilderList() {
      return stakingCoinWeights_;
    }
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public int getStakingCoinWeightsCount() {
      return stakingCoinWeights_.size();
    }
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoin getStakingCoinWeights(int index) {
      return stakingCoinWeights_.get(index);
    }
    /**
     * <pre>
     * staking_coin_weights specifies the coin weights for the plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getStakingCoinWeightsOrBuilder(
        int index) {
      return stakingCoinWeights_.get(index);
    }

    public static final int START_TIME_FIELD_NUMBER = 7;
    private com.google.protobuf.Timestamp startTime_;
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    @java.lang.Override
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTime() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * start_time specifies the start time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      return getStartTime();
    }

    public static final int END_TIME_FIELD_NUMBER = 8;
    private com.google.protobuf.Timestamp endTime_;
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the endTime field is set.
     */
    @java.lang.Override
    public boolean hasEndTime() {
      return endTime_ != null;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The endTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndTime() {
      return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
    }
    /**
     * <pre>
     * end_time specifies the end time of the plan
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      return getEndTime();
    }

    public static final int TERMINATED_FIELD_NUMBER = 9;
    private boolean terminated_;
    /**
     * <pre>
     * terminated indicates whether the plan has been terminated or not
     * </pre>
     *
     * <code>bool terminated = 9;</code>
     * @return The terminated.
     */
    @java.lang.Override
    public boolean getTerminated() {
      return terminated_;
    }

    public static final int LAST_DISTRIBUTION_TIME_FIELD_NUMBER = 10;
    private com.google.protobuf.Timestamp lastDistributionTime_;
    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return Whether the lastDistributionTime field is set.
     */
    @java.lang.Override
    public boolean hasLastDistributionTime() {
      return lastDistributionTime_ != null;
    }
    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     * @return The lastDistributionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastDistributionTime() {
      return lastDistributionTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastDistributionTime_;
    }
    /**
     * <pre>
     * last_distribution_time specifies the last time a distribution occurred
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getLastDistributionTimeOrBuilder() {
      return getLastDistributionTime();
    }

    public static final int DISTRIBUTED_COINS_FIELD_NUMBER = 11;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> distributedCoins_;
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getDistributedCoinsList() {
      return distributedCoins_;
    }
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getDistributedCoinsOrBuilderList() {
      return distributedCoins_;
    }
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getDistributedCoinsCount() {
      return distributedCoins_.size();
    }
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getDistributedCoins(int index) {
      return distributedCoins_.get(index);
    }
    /**
     * <pre>
     * distributed_coins specifies the total coins distributed by this plan
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getDistributedCoinsOrBuilder(
        int index) {
      return distributedCoins_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeUInt64(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (type_ != crescent.farming.v1beta1.Farming.PlanType.PLAN_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, type_);
      }
      if (!getFarmingPoolAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, farmingPoolAddress_);
      }
      if (!getTerminationAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, terminationAddress_);
      }
      for (int i = 0; i < stakingCoinWeights_.size(); i++) {
        output.writeMessage(6, stakingCoinWeights_.get(i));
      }
      if (startTime_ != null) {
        output.writeMessage(7, getStartTime());
      }
      if (endTime_ != null) {
        output.writeMessage(8, getEndTime());
      }
      if (terminated_ != false) {
        output.writeBool(9, terminated_);
      }
      if (lastDistributionTime_ != null) {
        output.writeMessage(10, getLastDistributionTime());
      }
      for (int i = 0; i < distributedCoins_.size(); i++) {
        output.writeMessage(11, distributedCoins_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (type_ != crescent.farming.v1beta1.Farming.PlanType.PLAN_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (!getFarmingPoolAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, farmingPoolAddress_);
      }
      if (!getTerminationAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, terminationAddress_);
      }
      for (int i = 0; i < stakingCoinWeights_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, stakingCoinWeights_.get(i));
      }
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getStartTime());
      }
      if (endTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getEndTime());
      }
      if (terminated_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, terminated_);
      }
      if (lastDistributionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getLastDistributionTime());
      }
      for (int i = 0; i < distributedCoins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, distributedCoins_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.BasePlan)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.BasePlan other = (crescent.farming.v1beta1.Farming.BasePlan) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (type_ != other.type_) return false;
      if (!getFarmingPoolAddress()
          .equals(other.getFarmingPoolAddress())) return false;
      if (!getTerminationAddress()
          .equals(other.getTerminationAddress())) return false;
      if (!getStakingCoinWeightsList()
          .equals(other.getStakingCoinWeightsList())) return false;
      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (hasEndTime() != other.hasEndTime()) return false;
      if (hasEndTime()) {
        if (!getEndTime()
            .equals(other.getEndTime())) return false;
      }
      if (getTerminated()
          != other.getTerminated()) return false;
      if (hasLastDistributionTime() != other.hasLastDistributionTime()) return false;
      if (hasLastDistributionTime()) {
        if (!getLastDistributionTime()
            .equals(other.getLastDistributionTime())) return false;
      }
      if (!getDistributedCoinsList()
          .equals(other.getDistributedCoinsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + FARMING_POOL_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getFarmingPoolAddress().hashCode();
      hash = (37 * hash) + TERMINATION_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getTerminationAddress().hashCode();
      if (getStakingCoinWeightsCount() > 0) {
        hash = (37 * hash) + STAKING_COIN_WEIGHTS_FIELD_NUMBER;
        hash = (53 * hash) + getStakingCoinWeightsList().hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime().hashCode();
      }
      hash = (37 * hash) + TERMINATED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTerminated());
      if (hasLastDistributionTime()) {
        hash = (37 * hash) + LAST_DISTRIBUTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getLastDistributionTime().hashCode();
      }
      if (getDistributedCoinsCount() > 0) {
        hash = (37 * hash) + DISTRIBUTED_COINS_FIELD_NUMBER;
        hash = (53 * hash) + getDistributedCoinsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.BasePlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.BasePlan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BasePlan defines a base plan type and contains the required fields
     * for basic farming plan functionality. Any custom farming plan type must
     * extend this type for additional functionality (for example, fixed amount plan, ratio
     * plan).
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.BasePlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.BasePlan)
        crescent.farming.v1beta1.Farming.BasePlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_BasePlan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_BasePlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.BasePlan.class, crescent.farming.v1beta1.Farming.BasePlan.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.BasePlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStakingCoinWeightsFieldBuilder();
          getDistributedCoinsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        name_ = "";

        type_ = 0;

        farmingPoolAddress_ = "";

        terminationAddress_ = "";

        if (stakingCoinWeightsBuilder_ == null) {
          stakingCoinWeights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          stakingCoinWeightsBuilder_.clear();
        }
        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }
        if (endTimeBuilder_ == null) {
          endTime_ = null;
        } else {
          endTime_ = null;
          endTimeBuilder_ = null;
        }
        terminated_ = false;

        if (lastDistributionTimeBuilder_ == null) {
          lastDistributionTime_ = null;
        } else {
          lastDistributionTime_ = null;
          lastDistributionTimeBuilder_ = null;
        }
        if (distributedCoinsBuilder_ == null) {
          distributedCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          distributedCoinsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_BasePlan_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.BasePlan getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.BasePlan build() {
        crescent.farming.v1beta1.Farming.BasePlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.BasePlan buildPartial() {
        crescent.farming.v1beta1.Farming.BasePlan result = new crescent.farming.v1beta1.Farming.BasePlan(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.name_ = name_;
        result.type_ = type_;
        result.farmingPoolAddress_ = farmingPoolAddress_;
        result.terminationAddress_ = terminationAddress_;
        if (stakingCoinWeightsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            stakingCoinWeights_ = java.util.Collections.unmodifiableList(stakingCoinWeights_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.stakingCoinWeights_ = stakingCoinWeights_;
        } else {
          result.stakingCoinWeights_ = stakingCoinWeightsBuilder_.build();
        }
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (endTimeBuilder_ == null) {
          result.endTime_ = endTime_;
        } else {
          result.endTime_ = endTimeBuilder_.build();
        }
        result.terminated_ = terminated_;
        if (lastDistributionTimeBuilder_ == null) {
          result.lastDistributionTime_ = lastDistributionTime_;
        } else {
          result.lastDistributionTime_ = lastDistributionTimeBuilder_.build();
        }
        if (distributedCoinsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            distributedCoins_ = java.util.Collections.unmodifiableList(distributedCoins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.distributedCoins_ = distributedCoins_;
        } else {
          result.distributedCoins_ = distributedCoinsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.BasePlan) {
          return mergeFrom((crescent.farming.v1beta1.Farming.BasePlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.BasePlan other) {
        if (other == crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getFarmingPoolAddress().isEmpty()) {
          farmingPoolAddress_ = other.farmingPoolAddress_;
          onChanged();
        }
        if (!other.getTerminationAddress().isEmpty()) {
          terminationAddress_ = other.terminationAddress_;
          onChanged();
        }
        if (stakingCoinWeightsBuilder_ == null) {
          if (!other.stakingCoinWeights_.isEmpty()) {
            if (stakingCoinWeights_.isEmpty()) {
              stakingCoinWeights_ = other.stakingCoinWeights_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStakingCoinWeightsIsMutable();
              stakingCoinWeights_.addAll(other.stakingCoinWeights_);
            }
            onChanged();
          }
        } else {
          if (!other.stakingCoinWeights_.isEmpty()) {
            if (stakingCoinWeightsBuilder_.isEmpty()) {
              stakingCoinWeightsBuilder_.dispose();
              stakingCoinWeightsBuilder_ = null;
              stakingCoinWeights_ = other.stakingCoinWeights_;
              bitField0_ = (bitField0_ & ~0x00000001);
              stakingCoinWeightsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStakingCoinWeightsFieldBuilder() : null;
            } else {
              stakingCoinWeightsBuilder_.addAllMessages(other.stakingCoinWeights_);
            }
          }
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          mergeEndTime(other.getEndTime());
        }
        if (other.getTerminated() != false) {
          setTerminated(other.getTerminated());
        }
        if (other.hasLastDistributionTime()) {
          mergeLastDistributionTime(other.getLastDistributionTime());
        }
        if (distributedCoinsBuilder_ == null) {
          if (!other.distributedCoins_.isEmpty()) {
            if (distributedCoins_.isEmpty()) {
              distributedCoins_ = other.distributedCoins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDistributedCoinsIsMutable();
              distributedCoins_.addAll(other.distributedCoins_);
            }
            onChanged();
          }
        } else {
          if (!other.distributedCoins_.isEmpty()) {
            if (distributedCoinsBuilder_.isEmpty()) {
              distributedCoinsBuilder_.dispose();
              distributedCoinsBuilder_ = null;
              distributedCoins_ = other.distributedCoins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              distributedCoinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDistributedCoinsFieldBuilder() : null;
            } else {
              distributedCoinsBuilder_.addAllMessages(other.distributedCoins_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.BasePlan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.BasePlan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * id specifies index of the farming plan
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * id specifies index of the farming plan
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id specifies index of the farming plan
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name specifies the name for the plan
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name specifies the name for the plan
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name specifies the name for the plan
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name specifies the name for the plan
       * </pre>
       *
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name specifies the name for the plan
       * </pre>
       *
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * type specifies the plan type; type 0 is public and 1 is private
       * public plan must be created through governance proposal and private plan is
       * created by account
       * </pre>
       *
       * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * type specifies the plan type; type 0 is public and 1 is private
       * public plan must be created through governance proposal and private plan is
       * created by account
       * </pre>
       *
       * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type specifies the plan type; type 0 is public and 1 is private
       * public plan must be created through governance proposal and private plan is
       * created by account
       * </pre>
       *
       * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
       * @return The type.
       */
      @java.lang.Override
      public crescent.farming.v1beta1.Farming.PlanType getType() {
        @SuppressWarnings("deprecation")
        crescent.farming.v1beta1.Farming.PlanType result = crescent.farming.v1beta1.Farming.PlanType.valueOf(type_);
        return result == null ? crescent.farming.v1beta1.Farming.PlanType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * type specifies the plan type; type 0 is public and 1 is private
       * public plan must be created through governance proposal and private plan is
       * created by account
       * </pre>
       *
       * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(crescent.farming.v1beta1.Farming.PlanType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type specifies the plan type; type 0 is public and 1 is private
       * public plan must be created through governance proposal and private plan is
       * created by account
       * </pre>
       *
       * <code>.crescent.farming.v1beta1.PlanType type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object farmingPoolAddress_ = "";
      /**
       * <pre>
       * farming_pool_address defines the bech32-encoded address of the farming pool
       * </pre>
       *
       * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
       * @return The farmingPoolAddress.
       */
      public java.lang.String getFarmingPoolAddress() {
        java.lang.Object ref = farmingPoolAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          farmingPoolAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * farming_pool_address defines the bech32-encoded address of the farming pool
       * </pre>
       *
       * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
       * @return The bytes for farmingPoolAddress.
       */
      public com.google.protobuf.ByteString
          getFarmingPoolAddressBytes() {
        java.lang.Object ref = farmingPoolAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          farmingPoolAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * farming_pool_address defines the bech32-encoded address of the farming pool
       * </pre>
       *
       * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
       * @param value The farmingPoolAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFarmingPoolAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        farmingPoolAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * farming_pool_address defines the bech32-encoded address of the farming pool
       * </pre>
       *
       * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearFarmingPoolAddress() {
        
        farmingPoolAddress_ = getDefaultInstance().getFarmingPoolAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * farming_pool_address defines the bech32-encoded address of the farming pool
       * </pre>
       *
       * <code>string farming_pool_address = 4 [(.gogoproto.moretags) = "yaml:&#92;"farming_pool_address&#92;""];</code>
       * @param value The bytes for farmingPoolAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFarmingPoolAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        farmingPoolAddress_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object terminationAddress_ = "";
      /**
       * <pre>
       * termination_address defines the Bech32-encoded address that terminates the plan
       * when the plan ends after the end time, the balance of the farming pool address
       * is transferred to the termination address
       * </pre>
       *
       * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
       * @return The terminationAddress.
       */
      public java.lang.String getTerminationAddress() {
        java.lang.Object ref = terminationAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          terminationAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * termination_address defines the Bech32-encoded address that terminates the plan
       * when the plan ends after the end time, the balance of the farming pool address
       * is transferred to the termination address
       * </pre>
       *
       * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
       * @return The bytes for terminationAddress.
       */
      public com.google.protobuf.ByteString
          getTerminationAddressBytes() {
        java.lang.Object ref = terminationAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          terminationAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * termination_address defines the Bech32-encoded address that terminates the plan
       * when the plan ends after the end time, the balance of the farming pool address
       * is transferred to the termination address
       * </pre>
       *
       * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
       * @param value The terminationAddress to set.
       * @return This builder for chaining.
       */
      public Builder setTerminationAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        terminationAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * termination_address defines the Bech32-encoded address that terminates the plan
       * when the plan ends after the end time, the balance of the farming pool address
       * is transferred to the termination address
       * </pre>
       *
       * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearTerminationAddress() {
        
        terminationAddress_ = getDefaultInstance().getTerminationAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * termination_address defines the Bech32-encoded address that terminates the plan
       * when the plan ends after the end time, the balance of the farming pool address
       * is transferred to the termination address
       * </pre>
       *
       * <code>string termination_address = 5 [(.gogoproto.moretags) = "yaml:&#92;"termination_address&#92;""];</code>
       * @param value The bytes for terminationAddress to set.
       * @return This builder for chaining.
       */
      public Builder setTerminationAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        terminationAddress_ = value;
        onChanged();
        return this;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> stakingCoinWeights_ =
        java.util.Collections.emptyList();
      private void ensureStakingCoinWeightsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          stakingCoinWeights_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>(stakingCoinWeights_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> stakingCoinWeightsBuilder_;

      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getStakingCoinWeightsList() {
        if (stakingCoinWeightsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stakingCoinWeights_);
        } else {
          return stakingCoinWeightsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public int getStakingCoinWeightsCount() {
        if (stakingCoinWeightsBuilder_ == null) {
          return stakingCoinWeights_.size();
        } else {
          return stakingCoinWeightsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin getStakingCoinWeights(int index) {
        if (stakingCoinWeightsBuilder_ == null) {
          return stakingCoinWeights_.get(index);
        } else {
          return stakingCoinWeightsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setStakingCoinWeights(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (stakingCoinWeightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.set(index, value);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setStakingCoinWeights(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (stakingCoinWeightsBuilder_ == null) {
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.set(index, builderForValue.build());
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addStakingCoinWeights(cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (stakingCoinWeightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.add(value);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addStakingCoinWeights(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (stakingCoinWeightsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.add(index, value);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addStakingCoinWeights(
          cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (stakingCoinWeightsBuilder_ == null) {
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.add(builderForValue.build());
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addStakingCoinWeights(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (stakingCoinWeightsBuilder_ == null) {
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.add(index, builderForValue.build());
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addAllStakingCoinWeights(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoin> values) {
        if (stakingCoinWeightsBuilder_ == null) {
          ensureStakingCoinWeightsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stakingCoinWeights_);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder clearStakingCoinWeights() {
        if (stakingCoinWeightsBuilder_ == null) {
          stakingCoinWeights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder removeStakingCoinWeights(int index) {
        if (stakingCoinWeightsBuilder_ == null) {
          ensureStakingCoinWeightsIsMutable();
          stakingCoinWeights_.remove(index);
          onChanged();
        } else {
          stakingCoinWeightsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder getStakingCoinWeightsBuilder(
          int index) {
        return getStakingCoinWeightsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getStakingCoinWeightsOrBuilder(
          int index) {
        if (stakingCoinWeightsBuilder_ == null) {
          return stakingCoinWeights_.get(index);  } else {
          return stakingCoinWeightsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
           getStakingCoinWeightsOrBuilderList() {
        if (stakingCoinWeightsBuilder_ != null) {
          return stakingCoinWeightsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stakingCoinWeights_);
        }
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addStakingCoinWeightsBuilder() {
        return getStakingCoinWeightsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addStakingCoinWeightsBuilder(
          int index) {
        return getStakingCoinWeightsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <pre>
       * staking_coin_weights specifies the coin weights for the plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.DecCoin staking_coin_weights = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"staking_coin_weights&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder> 
           getStakingCoinWeightsBuilderList() {
        return getStakingCoinWeightsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
          getStakingCoinWeightsFieldBuilder() {
        if (stakingCoinWeightsBuilder_ == null) {
          stakingCoinWeightsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder>(
                  stakingCoinWeights_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          stakingCoinWeights_ = null;
        }
        return stakingCoinWeightsBuilder_;
      }

      private com.google.protobuf.Timestamp startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return Whether the startTime field is set.
       */
      public boolean hasStartTime() {
        return startTimeBuilder_ != null || startTime_ != null;
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return The startTime.
       */
      public com.google.protobuf.Timestamp getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (startTime_ != null) {
            startTime_ =
              com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
        
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * start_time specifies the start time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 7 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"start_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Timestamp endTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return Whether the endTime field is set.
       */
      public boolean hasEndTime() {
        return endTimeBuilder_ != null || endTime_ != null;
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return The endTime.
       */
      public com.google.protobuf.Timestamp getEndTime() {
        if (endTimeBuilder_ == null) {
          return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        } else {
          return endTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endTime_ = value;
          onChanged();
        } else {
          endTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setEndTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endTimeBuilder_ == null) {
          endTime_ = builderForValue.build();
          onChanged();
        } else {
          endTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (endTime_ != null) {
            endTime_ =
              com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
          } else {
            endTime_ = value;
          }
          onChanged();
        } else {
          endTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearEndTime() {
        if (endTimeBuilder_ == null) {
          endTime_ = null;
          onChanged();
        } else {
          endTime_ = null;
          endTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
        
        onChanged();
        return getEndTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
        if (endTimeBuilder_ != null) {
          return endTimeBuilder_.getMessageOrBuilder();
        } else {
          return endTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        }
      }
      /**
       * <pre>
       * end_time specifies the end time of the plan
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 8 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"end_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndTimeFieldBuilder() {
        if (endTimeBuilder_ == null) {
          endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndTime(),
                  getParentForChildren(),
                  isClean());
          endTime_ = null;
        }
        return endTimeBuilder_;
      }

      private boolean terminated_ ;
      /**
       * <pre>
       * terminated indicates whether the plan has been terminated or not
       * </pre>
       *
       * <code>bool terminated = 9;</code>
       * @return The terminated.
       */
      @java.lang.Override
      public boolean getTerminated() {
        return terminated_;
      }
      /**
       * <pre>
       * terminated indicates whether the plan has been terminated or not
       * </pre>
       *
       * <code>bool terminated = 9;</code>
       * @param value The terminated to set.
       * @return This builder for chaining.
       */
      public Builder setTerminated(boolean value) {
        
        terminated_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * terminated indicates whether the plan has been terminated or not
       * </pre>
       *
       * <code>bool terminated = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerminated() {
        
        terminated_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp lastDistributionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> lastDistributionTimeBuilder_;
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return Whether the lastDistributionTime field is set.
       */
      public boolean hasLastDistributionTime() {
        return lastDistributionTimeBuilder_ != null || lastDistributionTime_ != null;
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       * @return The lastDistributionTime.
       */
      public com.google.protobuf.Timestamp getLastDistributionTime() {
        if (lastDistributionTimeBuilder_ == null) {
          return lastDistributionTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastDistributionTime_;
        } else {
          return lastDistributionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setLastDistributionTime(com.google.protobuf.Timestamp value) {
        if (lastDistributionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastDistributionTime_ = value;
          onChanged();
        } else {
          lastDistributionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder setLastDistributionTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (lastDistributionTimeBuilder_ == null) {
          lastDistributionTime_ = builderForValue.build();
          onChanged();
        } else {
          lastDistributionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeLastDistributionTime(com.google.protobuf.Timestamp value) {
        if (lastDistributionTimeBuilder_ == null) {
          if (lastDistributionTime_ != null) {
            lastDistributionTime_ =
              com.google.protobuf.Timestamp.newBuilder(lastDistributionTime_).mergeFrom(value).buildPartial();
          } else {
            lastDistributionTime_ = value;
          }
          onChanged();
        } else {
          lastDistributionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearLastDistributionTime() {
        if (lastDistributionTimeBuilder_ == null) {
          lastDistributionTime_ = null;
          onChanged();
        } else {
          lastDistributionTime_ = null;
          lastDistributionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getLastDistributionTimeBuilder() {
        
        onChanged();
        return getLastDistributionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getLastDistributionTimeOrBuilder() {
        if (lastDistributionTimeBuilder_ != null) {
          return lastDistributionTimeBuilder_.getMessageOrBuilder();
        } else {
          return lastDistributionTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : lastDistributionTime_;
        }
      }
      /**
       * <pre>
       * last_distribution_time specifies the last time a distribution occurred
       * </pre>
       *
       * <code>.google.protobuf.Timestamp last_distribution_time = 10 [(.gogoproto.moretags) = "yaml:&#92;"last_distribution_time&#92;"", (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getLastDistributionTimeFieldBuilder() {
        if (lastDistributionTimeBuilder_ == null) {
          lastDistributionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getLastDistributionTime(),
                  getParentForChildren(),
                  isClean());
          lastDistributionTime_ = null;
        }
        return lastDistributionTimeBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> distributedCoins_ =
        java.util.Collections.emptyList();
      private void ensureDistributedCoinsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          distributedCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(distributedCoins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> distributedCoinsBuilder_;

      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getDistributedCoinsList() {
        if (distributedCoinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(distributedCoins_);
        } else {
          return distributedCoinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getDistributedCoinsCount() {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.size();
        } else {
          return distributedCoinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getDistributedCoins(int index) {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.get(index);
        } else {
          return distributedCoinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setDistributedCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.set(index, value);
          onChanged();
        } else {
          distributedCoinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setDistributedCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.set(index, builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(value);
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (distributedCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(index, value);
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addDistributedCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.add(index, builderForValue.build());
          onChanged();
        } else {
          distributedCoinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllDistributedCoins(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, distributedCoins_);
          onChanged();
        } else {
          distributedCoinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearDistributedCoins() {
        if (distributedCoinsBuilder_ == null) {
          distributedCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          distributedCoinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeDistributedCoins(int index) {
        if (distributedCoinsBuilder_ == null) {
          ensureDistributedCoinsIsMutable();
          distributedCoins_.remove(index);
          onChanged();
        } else {
          distributedCoinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getDistributedCoinsBuilder(
          int index) {
        return getDistributedCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getDistributedCoinsOrBuilder(
          int index) {
        if (distributedCoinsBuilder_ == null) {
          return distributedCoins_.get(index);  } else {
          return distributedCoinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getDistributedCoinsOrBuilderList() {
        if (distributedCoinsBuilder_ != null) {
          return distributedCoinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(distributedCoins_);
        }
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addDistributedCoinsBuilder() {
        return getDistributedCoinsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addDistributedCoinsBuilder(
          int index) {
        return getDistributedCoinsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * distributed_coins specifies the total coins distributed by this plan
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin distributed_coins = 11 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"distributed_coins&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getDistributedCoinsBuilderList() {
        return getDistributedCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getDistributedCoinsFieldBuilder() {
        if (distributedCoinsBuilder_ == null) {
          distributedCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  distributedCoins_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          distributedCoins_ = null;
        }
        return distributedCoinsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.BasePlan)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.BasePlan)
    private static final crescent.farming.v1beta1.Farming.BasePlan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.BasePlan();
    }

    public static crescent.farming.v1beta1.Farming.BasePlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BasePlan>
        PARSER = new com.google.protobuf.AbstractParser<BasePlan>() {
      @java.lang.Override
      public BasePlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BasePlan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BasePlan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BasePlan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.BasePlan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FixedAmountPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.FixedAmountPlan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return Whether the basePlan field is set.
     */
    boolean hasBasePlan();
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return The basePlan.
     */
    crescent.farming.v1beta1.Farming.BasePlan getBasePlan();
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder();

    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getEpochAmountList();
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getEpochAmount(int index);
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getEpochAmountCount();
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getEpochAmountOrBuilderList();
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getEpochAmountOrBuilder(
        int index);
  }
  /**
   * <pre>
   * FixedAmountPlan defines a fixed amount plan that distributes a fixed amount
   * of coins for every epoch.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.FixedAmountPlan}
   */
  public static final class FixedAmountPlan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.FixedAmountPlan)
      FixedAmountPlanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixedAmountPlan.newBuilder() to construct.
    private FixedAmountPlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixedAmountPlan() {
      epochAmount_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FixedAmountPlan();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FixedAmountPlan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              crescent.farming.v1beta1.Farming.BasePlan.Builder subBuilder = null;
              if (basePlan_ != null) {
                subBuilder = basePlan_.toBuilder();
              }
              basePlan_ = input.readMessage(crescent.farming.v1beta1.Farming.BasePlan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basePlan_);
                basePlan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                epochAmount_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000001;
              }
              epochAmount_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          epochAmount_ = java.util.Collections.unmodifiableList(epochAmount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_FixedAmountPlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.FixedAmountPlan.class, crescent.farming.v1beta1.Farming.FixedAmountPlan.Builder.class);
    }

    public static final int BASE_PLAN_FIELD_NUMBER = 1;
    private crescent.farming.v1beta1.Farming.BasePlan basePlan_;
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return Whether the basePlan field is set.
     */
    @java.lang.Override
    public boolean hasBasePlan() {
      return basePlan_ != null;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return The basePlan.
     */
    @java.lang.Override
    public crescent.farming.v1beta1.Farming.BasePlan getBasePlan() {
      return basePlan_ == null ? crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    @java.lang.Override
    public crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder() {
      return getBasePlan();
    }

    public static final int EPOCH_AMOUNT_FIELD_NUMBER = 2;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> epochAmount_;
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getEpochAmountList() {
      return epochAmount_;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getEpochAmountOrBuilderList() {
      return epochAmount_;
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getEpochAmountCount() {
      return epochAmount_.size();
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getEpochAmount(int index) {
      return epochAmount_.get(index);
    }
    /**
     * <pre>
     * epoch_amount specifies the distributing amount for each epoch
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getEpochAmountOrBuilder(
        int index) {
      return epochAmount_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basePlan_ != null) {
        output.writeMessage(1, getBasePlan());
      }
      for (int i = 0; i < epochAmount_.size(); i++) {
        output.writeMessage(2, epochAmount_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basePlan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasePlan());
      }
      for (int i = 0; i < epochAmount_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, epochAmount_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.FixedAmountPlan)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.FixedAmountPlan other = (crescent.farming.v1beta1.Farming.FixedAmountPlan) obj;

      if (hasBasePlan() != other.hasBasePlan()) return false;
      if (hasBasePlan()) {
        if (!getBasePlan()
            .equals(other.getBasePlan())) return false;
      }
      if (!getEpochAmountList()
          .equals(other.getEpochAmountList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasePlan()) {
        hash = (37 * hash) + BASE_PLAN_FIELD_NUMBER;
        hash = (53 * hash) + getBasePlan().hashCode();
      }
      if (getEpochAmountCount() > 0) {
        hash = (37 * hash) + EPOCH_AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getEpochAmountList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.FixedAmountPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.FixedAmountPlan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * FixedAmountPlan defines a fixed amount plan that distributes a fixed amount
     * of coins for every epoch.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.FixedAmountPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.FixedAmountPlan)
        crescent.farming.v1beta1.Farming.FixedAmountPlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_FixedAmountPlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.FixedAmountPlan.class, crescent.farming.v1beta1.Farming.FixedAmountPlan.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.FixedAmountPlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEpochAmountFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (basePlanBuilder_ == null) {
          basePlan_ = null;
        } else {
          basePlan_ = null;
          basePlanBuilder_ = null;
        }
        if (epochAmountBuilder_ == null) {
          epochAmount_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          epochAmountBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.FixedAmountPlan getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.FixedAmountPlan.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.FixedAmountPlan build() {
        crescent.farming.v1beta1.Farming.FixedAmountPlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.FixedAmountPlan buildPartial() {
        crescent.farming.v1beta1.Farming.FixedAmountPlan result = new crescent.farming.v1beta1.Farming.FixedAmountPlan(this);
        int from_bitField0_ = bitField0_;
        if (basePlanBuilder_ == null) {
          result.basePlan_ = basePlan_;
        } else {
          result.basePlan_ = basePlanBuilder_.build();
        }
        if (epochAmountBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            epochAmount_ = java.util.Collections.unmodifiableList(epochAmount_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.epochAmount_ = epochAmount_;
        } else {
          result.epochAmount_ = epochAmountBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.FixedAmountPlan) {
          return mergeFrom((crescent.farming.v1beta1.Farming.FixedAmountPlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.FixedAmountPlan other) {
        if (other == crescent.farming.v1beta1.Farming.FixedAmountPlan.getDefaultInstance()) return this;
        if (other.hasBasePlan()) {
          mergeBasePlan(other.getBasePlan());
        }
        if (epochAmountBuilder_ == null) {
          if (!other.epochAmount_.isEmpty()) {
            if (epochAmount_.isEmpty()) {
              epochAmount_ = other.epochAmount_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEpochAmountIsMutable();
              epochAmount_.addAll(other.epochAmount_);
            }
            onChanged();
          }
        } else {
          if (!other.epochAmount_.isEmpty()) {
            if (epochAmountBuilder_.isEmpty()) {
              epochAmountBuilder_.dispose();
              epochAmountBuilder_ = null;
              epochAmount_ = other.epochAmount_;
              bitField0_ = (bitField0_ & ~0x00000001);
              epochAmountBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEpochAmountFieldBuilder() : null;
            } else {
              epochAmountBuilder_.addAllMessages(other.epochAmount_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.FixedAmountPlan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.FixedAmountPlan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private crescent.farming.v1beta1.Farming.BasePlan basePlan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder> basePlanBuilder_;
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       * @return Whether the basePlan field is set.
       */
      public boolean hasBasePlan() {
        return basePlanBuilder_ != null || basePlan_ != null;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       * @return The basePlan.
       */
      public crescent.farming.v1beta1.Farming.BasePlan getBasePlan() {
        if (basePlanBuilder_ == null) {
          return basePlan_ == null ? crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
        } else {
          return basePlanBuilder_.getMessage();
        }
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder setBasePlan(crescent.farming.v1beta1.Farming.BasePlan value) {
        if (basePlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basePlan_ = value;
          onChanged();
        } else {
          basePlanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder setBasePlan(
          crescent.farming.v1beta1.Farming.BasePlan.Builder builderForValue) {
        if (basePlanBuilder_ == null) {
          basePlan_ = builderForValue.build();
          onChanged();
        } else {
          basePlanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder mergeBasePlan(crescent.farming.v1beta1.Farming.BasePlan value) {
        if (basePlanBuilder_ == null) {
          if (basePlan_ != null) {
            basePlan_ =
              crescent.farming.v1beta1.Farming.BasePlan.newBuilder(basePlan_).mergeFrom(value).buildPartial();
          } else {
            basePlan_ = value;
          }
          onChanged();
        } else {
          basePlanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder clearBasePlan() {
        if (basePlanBuilder_ == null) {
          basePlan_ = null;
          onChanged();
        } else {
          basePlan_ = null;
          basePlanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public crescent.farming.v1beta1.Farming.BasePlan.Builder getBasePlanBuilder() {
        
        onChanged();
        return getBasePlanFieldBuilder().getBuilder();
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder() {
        if (basePlanBuilder_ != null) {
          return basePlanBuilder_.getMessageOrBuilder();
        } else {
          return basePlan_ == null ?
              crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
        }
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder> 
          getBasePlanFieldBuilder() {
        if (basePlanBuilder_ == null) {
          basePlanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder>(
                  getBasePlan(),
                  getParentForChildren(),
                  isClean());
          basePlan_ = null;
        }
        return basePlanBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> epochAmount_ =
        java.util.Collections.emptyList();
      private void ensureEpochAmountIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          epochAmount_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(epochAmount_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> epochAmountBuilder_;

      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getEpochAmountList() {
        if (epochAmountBuilder_ == null) {
          return java.util.Collections.unmodifiableList(epochAmount_);
        } else {
          return epochAmountBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getEpochAmountCount() {
        if (epochAmountBuilder_ == null) {
          return epochAmount_.size();
        } else {
          return epochAmountBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getEpochAmount(int index) {
        if (epochAmountBuilder_ == null) {
          return epochAmount_.get(index);
        } else {
          return epochAmountBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setEpochAmount(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (epochAmountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpochAmountIsMutable();
          epochAmount_.set(index, value);
          onChanged();
        } else {
          epochAmountBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setEpochAmount(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (epochAmountBuilder_ == null) {
          ensureEpochAmountIsMutable();
          epochAmount_.set(index, builderForValue.build());
          onChanged();
        } else {
          epochAmountBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addEpochAmount(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (epochAmountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpochAmountIsMutable();
          epochAmount_.add(value);
          onChanged();
        } else {
          epochAmountBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addEpochAmount(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (epochAmountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEpochAmountIsMutable();
          epochAmount_.add(index, value);
          onChanged();
        } else {
          epochAmountBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addEpochAmount(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (epochAmountBuilder_ == null) {
          ensureEpochAmountIsMutable();
          epochAmount_.add(builderForValue.build());
          onChanged();
        } else {
          epochAmountBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addEpochAmount(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (epochAmountBuilder_ == null) {
          ensureEpochAmountIsMutable();
          epochAmount_.add(index, builderForValue.build());
          onChanged();
        } else {
          epochAmountBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllEpochAmount(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (epochAmountBuilder_ == null) {
          ensureEpochAmountIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, epochAmount_);
          onChanged();
        } else {
          epochAmountBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearEpochAmount() {
        if (epochAmountBuilder_ == null) {
          epochAmount_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          epochAmountBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeEpochAmount(int index) {
        if (epochAmountBuilder_ == null) {
          ensureEpochAmountIsMutable();
          epochAmount_.remove(index);
          onChanged();
        } else {
          epochAmountBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getEpochAmountBuilder(
          int index) {
        return getEpochAmountFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getEpochAmountOrBuilder(
          int index) {
        if (epochAmountBuilder_ == null) {
          return epochAmount_.get(index);  } else {
          return epochAmountBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getEpochAmountOrBuilderList() {
        if (epochAmountBuilder_ != null) {
          return epochAmountBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(epochAmount_);
        }
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addEpochAmountBuilder() {
        return getEpochAmountFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addEpochAmountBuilder(
          int index) {
        return getEpochAmountFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * epoch_amount specifies the distributing amount for each epoch
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin epoch_amount = 2 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"epoch_amount&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getEpochAmountBuilderList() {
        return getEpochAmountFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getEpochAmountFieldBuilder() {
        if (epochAmountBuilder_ == null) {
          epochAmountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  epochAmount_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          epochAmount_ = null;
        }
        return epochAmountBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.FixedAmountPlan)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.FixedAmountPlan)
    private static final crescent.farming.v1beta1.Farming.FixedAmountPlan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.FixedAmountPlan();
    }

    public static crescent.farming.v1beta1.Farming.FixedAmountPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixedAmountPlan>
        PARSER = new com.google.protobuf.AbstractParser<FixedAmountPlan>() {
      @java.lang.Override
      public FixedAmountPlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FixedAmountPlan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FixedAmountPlan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixedAmountPlan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.FixedAmountPlan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RatioPlanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.RatioPlan)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return Whether the basePlan field is set.
     */
    boolean hasBasePlan();
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return The basePlan.
     */
    crescent.farming.v1beta1.Farming.BasePlan getBasePlan();
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder();

    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The epochRatio.
     */
    java.lang.String getEpochRatio();
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The bytes for epochRatio.
     */
    com.google.protobuf.ByteString
        getEpochRatioBytes();
  }
  /**
   * <pre>
   * RatioPlan defines a plan that distributes to farmers by ratio
   * distribution for every epoch day.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.RatioPlan}
   */
  public static final class RatioPlan extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.RatioPlan)
      RatioPlanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RatioPlan.newBuilder() to construct.
    private RatioPlan(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RatioPlan() {
      epochRatio_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RatioPlan();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RatioPlan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              crescent.farming.v1beta1.Farming.BasePlan.Builder subBuilder = null;
              if (basePlan_ != null) {
                subBuilder = basePlan_.toBuilder();
              }
              basePlan_ = input.readMessage(crescent.farming.v1beta1.Farming.BasePlan.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basePlan_);
                basePlan_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              epochRatio_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.RatioPlan.class, crescent.farming.v1beta1.Farming.RatioPlan.Builder.class);
    }

    public static final int BASE_PLAN_FIELD_NUMBER = 1;
    private crescent.farming.v1beta1.Farming.BasePlan basePlan_;
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return Whether the basePlan field is set.
     */
    @java.lang.Override
    public boolean hasBasePlan() {
      return basePlan_ != null;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     * @return The basePlan.
     */
    @java.lang.Override
    public crescent.farming.v1beta1.Farming.BasePlan getBasePlan() {
      return basePlan_ == null ? crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
    }
    /**
     * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
     */
    @java.lang.Override
    public crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder() {
      return getBasePlan();
    }

    public static final int EPOCH_RATIO_FIELD_NUMBER = 2;
    private volatile java.lang.Object epochRatio_;
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The epochRatio.
     */
    @java.lang.Override
    public java.lang.String getEpochRatio() {
      java.lang.Object ref = epochRatio_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        epochRatio_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * epoch_ratio specifies the distributing amount by ratio
     * </pre>
     *
     * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
     * @return The bytes for epochRatio.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochRatioBytes() {
      java.lang.Object ref = epochRatio_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        epochRatio_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basePlan_ != null) {
        output.writeMessage(1, getBasePlan());
      }
      if (!getEpochRatioBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, epochRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basePlan_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasePlan());
      }
      if (!getEpochRatioBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, epochRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.RatioPlan)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.RatioPlan other = (crescent.farming.v1beta1.Farming.RatioPlan) obj;

      if (hasBasePlan() != other.hasBasePlan()) return false;
      if (hasBasePlan()) {
        if (!getBasePlan()
            .equals(other.getBasePlan())) return false;
      }
      if (!getEpochRatio()
          .equals(other.getEpochRatio())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasePlan()) {
        hash = (37 * hash) + BASE_PLAN_FIELD_NUMBER;
        hash = (53 * hash) + getBasePlan().hashCode();
      }
      hash = (37 * hash) + EPOCH_RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getEpochRatio().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.RatioPlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.RatioPlan prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RatioPlan defines a plan that distributes to farmers by ratio
     * distribution for every epoch day.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.RatioPlan}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.RatioPlan)
        crescent.farming.v1beta1.Farming.RatioPlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.RatioPlan.class, crescent.farming.v1beta1.Farming.RatioPlan.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.RatioPlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (basePlanBuilder_ == null) {
          basePlan_ = null;
        } else {
          basePlan_ = null;
          basePlanBuilder_ = null;
        }
        epochRatio_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.RatioPlan getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.RatioPlan.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.RatioPlan build() {
        crescent.farming.v1beta1.Farming.RatioPlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.RatioPlan buildPartial() {
        crescent.farming.v1beta1.Farming.RatioPlan result = new crescent.farming.v1beta1.Farming.RatioPlan(this);
        if (basePlanBuilder_ == null) {
          result.basePlan_ = basePlan_;
        } else {
          result.basePlan_ = basePlanBuilder_.build();
        }
        result.epochRatio_ = epochRatio_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.RatioPlan) {
          return mergeFrom((crescent.farming.v1beta1.Farming.RatioPlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.RatioPlan other) {
        if (other == crescent.farming.v1beta1.Farming.RatioPlan.getDefaultInstance()) return this;
        if (other.hasBasePlan()) {
          mergeBasePlan(other.getBasePlan());
        }
        if (!other.getEpochRatio().isEmpty()) {
          epochRatio_ = other.epochRatio_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.RatioPlan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.RatioPlan) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private crescent.farming.v1beta1.Farming.BasePlan basePlan_;
      private com.google.protobuf.SingleFieldBuilderV3<
          crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder> basePlanBuilder_;
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       * @return Whether the basePlan field is set.
       */
      public boolean hasBasePlan() {
        return basePlanBuilder_ != null || basePlan_ != null;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       * @return The basePlan.
       */
      public crescent.farming.v1beta1.Farming.BasePlan getBasePlan() {
        if (basePlanBuilder_ == null) {
          return basePlan_ == null ? crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
        } else {
          return basePlanBuilder_.getMessage();
        }
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder setBasePlan(crescent.farming.v1beta1.Farming.BasePlan value) {
        if (basePlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basePlan_ = value;
          onChanged();
        } else {
          basePlanBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder setBasePlan(
          crescent.farming.v1beta1.Farming.BasePlan.Builder builderForValue) {
        if (basePlanBuilder_ == null) {
          basePlan_ = builderForValue.build();
          onChanged();
        } else {
          basePlanBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder mergeBasePlan(crescent.farming.v1beta1.Farming.BasePlan value) {
        if (basePlanBuilder_ == null) {
          if (basePlan_ != null) {
            basePlan_ =
              crescent.farming.v1beta1.Farming.BasePlan.newBuilder(basePlan_).mergeFrom(value).buildPartial();
          } else {
            basePlan_ = value;
          }
          onChanged();
        } else {
          basePlanBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public Builder clearBasePlan() {
        if (basePlanBuilder_ == null) {
          basePlan_ = null;
          onChanged();
        } else {
          basePlan_ = null;
          basePlanBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public crescent.farming.v1beta1.Farming.BasePlan.Builder getBasePlanBuilder() {
        
        onChanged();
        return getBasePlanFieldBuilder().getBuilder();
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      public crescent.farming.v1beta1.Farming.BasePlanOrBuilder getBasePlanOrBuilder() {
        if (basePlanBuilder_ != null) {
          return basePlanBuilder_.getMessageOrBuilder();
        } else {
          return basePlan_ == null ?
              crescent.farming.v1beta1.Farming.BasePlan.getDefaultInstance() : basePlan_;
        }
      }
      /**
       * <code>.crescent.farming.v1beta1.BasePlan base_plan = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_plan&#92;""];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder> 
          getBasePlanFieldBuilder() {
        if (basePlanBuilder_ == null) {
          basePlanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              crescent.farming.v1beta1.Farming.BasePlan, crescent.farming.v1beta1.Farming.BasePlan.Builder, crescent.farming.v1beta1.Farming.BasePlanOrBuilder>(
                  getBasePlan(),
                  getParentForChildren(),
                  isClean());
          basePlan_ = null;
        }
        return basePlanBuilder_;
      }

      private java.lang.Object epochRatio_ = "";
      /**
       * <pre>
       * epoch_ratio specifies the distributing amount by ratio
       * </pre>
       *
       * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
       * @return The epochRatio.
       */
      public java.lang.String getEpochRatio() {
        java.lang.Object ref = epochRatio_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          epochRatio_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * epoch_ratio specifies the distributing amount by ratio
       * </pre>
       *
       * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
       * @return The bytes for epochRatio.
       */
      public com.google.protobuf.ByteString
          getEpochRatioBytes() {
        java.lang.Object ref = epochRatio_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          epochRatio_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * epoch_ratio specifies the distributing amount by ratio
       * </pre>
       *
       * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
       * @param value The epochRatio to set.
       * @return This builder for chaining.
       */
      public Builder setEpochRatio(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        epochRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_ratio specifies the distributing amount by ratio
       * </pre>
       *
       * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearEpochRatio() {
        
        epochRatio_ = getDefaultInstance().getEpochRatio();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * epoch_ratio specifies the distributing amount by ratio
       * </pre>
       *
       * <code>string epoch_ratio = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (.gogoproto.moretags) = "yaml:&#92;"epoch_ratio&#92;""];</code>
       * @param value The bytes for epochRatio to set.
       * @return This builder for chaining.
       */
      public Builder setEpochRatioBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        epochRatio_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.RatioPlan)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.RatioPlan)
    private static final crescent.farming.v1beta1.Farming.RatioPlan DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.RatioPlan();
    }

    public static crescent.farming.v1beta1.Farming.RatioPlan getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RatioPlan>
        PARSER = new com.google.protobuf.AbstractParser<RatioPlan>() {
      @java.lang.Override
      public RatioPlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RatioPlan(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RatioPlan> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RatioPlan> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.RatioPlan getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StakingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.Staking)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();

    /**
     * <code>uint64 starting_epoch = 2 [(.gogoproto.moretags) = "yaml:&#92;"starting_epoch&#92;""];</code>
     * @return The startingEpoch.
     */
    long getStartingEpoch();
  }
  /**
   * <pre>
   * Staking defines a farmer's staking information.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.Staking}
   */
  public static final class Staking extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.Staking)
      StakingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Staking.newBuilder() to construct.
    private Staking(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Staking() {
      amount_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Staking();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Staking(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              amount_ = s;
              break;
            }
            case 16: {

              startingEpoch_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Staking_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Staking_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.Staking.class, crescent.farming.v1beta1.Farming.Staking.Builder.class);
    }

    public static final int AMOUNT_FIELD_NUMBER = 1;
    private volatile java.lang.Object amount_;
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amount_ = s;
        return s;
      }
    }
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTING_EPOCH_FIELD_NUMBER = 2;
    private long startingEpoch_;
    /**
     * <code>uint64 starting_epoch = 2 [(.gogoproto.moretags) = "yaml:&#92;"starting_epoch&#92;""];</code>
     * @return The startingEpoch.
     */
    @java.lang.Override
    public long getStartingEpoch() {
      return startingEpoch_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAmountBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, amount_);
      }
      if (startingEpoch_ != 0L) {
        output.writeUInt64(2, startingEpoch_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAmountBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, amount_);
      }
      if (startingEpoch_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, startingEpoch_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.Staking)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.Staking other = (crescent.farming.v1beta1.Farming.Staking) obj;

      if (!getAmount()
          .equals(other.getAmount())) return false;
      if (getStartingEpoch()
          != other.getStartingEpoch()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount().hashCode();
      hash = (37 * hash) + STARTING_EPOCH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartingEpoch());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.Staking parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.Staking prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Staking defines a farmer's staking information.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.Staking}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.Staking)
        crescent.farming.v1beta1.Farming.StakingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Staking_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Staking_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.Staking.class, crescent.farming.v1beta1.Farming.Staking.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.Staking.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = "";

        startingEpoch_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_Staking_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Staking getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.Staking.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Staking build() {
        crescent.farming.v1beta1.Farming.Staking result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.Staking buildPartial() {
        crescent.farming.v1beta1.Farming.Staking result = new crescent.farming.v1beta1.Farming.Staking(this);
        result.amount_ = amount_;
        result.startingEpoch_ = startingEpoch_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.Staking) {
          return mergeFrom((crescent.farming.v1beta1.Farming.Staking)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.Staking other) {
        if (other == crescent.farming.v1beta1.Farming.Staking.getDefaultInstance()) return this;
        if (!other.getAmount().isEmpty()) {
          amount_ = other.amount_;
          onChanged();
        }
        if (other.getStartingEpoch() != 0L) {
          setStartingEpoch(other.getStartingEpoch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.Staking parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.Staking) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object amount_ = "";
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The amount.
       */
      public java.lang.String getAmount() {
        java.lang.Object ref = amount_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          amount_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The bytes for amount.
       */
      public com.google.protobuf.ByteString
          getAmountBytes() {
        java.lang.Object ref = amount_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          amount_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        amount_ = value;
        onChanged();
        return this;
      }

      private long startingEpoch_ ;
      /**
       * <code>uint64 starting_epoch = 2 [(.gogoproto.moretags) = "yaml:&#92;"starting_epoch&#92;""];</code>
       * @return The startingEpoch.
       */
      @java.lang.Override
      public long getStartingEpoch() {
        return startingEpoch_;
      }
      /**
       * <code>uint64 starting_epoch = 2 [(.gogoproto.moretags) = "yaml:&#92;"starting_epoch&#92;""];</code>
       * @param value The startingEpoch to set.
       * @return This builder for chaining.
       */
      public Builder setStartingEpoch(long value) {
        
        startingEpoch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 starting_epoch = 2 [(.gogoproto.moretags) = "yaml:&#92;"starting_epoch&#92;""];</code>
       * @return This builder for chaining.
       */
      public Builder clearStartingEpoch() {
        
        startingEpoch_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.Staking)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.Staking)
    private static final crescent.farming.v1beta1.Farming.Staking DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.Staking();
    }

    public static crescent.farming.v1beta1.Farming.Staking getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Staking>
        PARSER = new com.google.protobuf.AbstractParser<Staking>() {
      @java.lang.Override
      public Staking parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Staking(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Staking> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Staking> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.Staking getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueuedStakingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.QueuedStaking)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * QueuedStaking defines staking that is waiting in a queue.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.QueuedStaking}
   */
  public static final class QueuedStaking extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.QueuedStaking)
      QueuedStakingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueuedStaking.newBuilder() to construct.
    private QueuedStaking(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueuedStaking() {
      amount_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueuedStaking();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QueuedStaking(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              amount_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_QueuedStaking_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.QueuedStaking.class, crescent.farming.v1beta1.Farming.QueuedStaking.Builder.class);
    }

    public static final int AMOUNT_FIELD_NUMBER = 1;
    private volatile java.lang.Object amount_;
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amount_ = s;
        return s;
      }
    }
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAmountBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, amount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAmountBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.QueuedStaking)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.QueuedStaking other = (crescent.farming.v1beta1.Farming.QueuedStaking) obj;

      if (!getAmount()
          .equals(other.getAmount())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.QueuedStaking parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.QueuedStaking prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * QueuedStaking defines staking that is waiting in a queue.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.QueuedStaking}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.QueuedStaking)
        crescent.farming.v1beta1.Farming.QueuedStakingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_QueuedStaking_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.QueuedStaking.class, crescent.farming.v1beta1.Farming.QueuedStaking.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.QueuedStaking.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.QueuedStaking getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.QueuedStaking.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.QueuedStaking build() {
        crescent.farming.v1beta1.Farming.QueuedStaking result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.QueuedStaking buildPartial() {
        crescent.farming.v1beta1.Farming.QueuedStaking result = new crescent.farming.v1beta1.Farming.QueuedStaking(this);
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.QueuedStaking) {
          return mergeFrom((crescent.farming.v1beta1.Farming.QueuedStaking)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.QueuedStaking other) {
        if (other == crescent.farming.v1beta1.Farming.QueuedStaking.getDefaultInstance()) return this;
        if (!other.getAmount().isEmpty()) {
          amount_ = other.amount_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.QueuedStaking parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.QueuedStaking) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object amount_ = "";
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The amount.
       */
      public java.lang.String getAmount() {
        java.lang.Object ref = amount_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          amount_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The bytes for amount.
       */
      public com.google.protobuf.ByteString
          getAmountBytes() {
        java.lang.Object ref = amount_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          amount_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        amount_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.QueuedStaking)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.QueuedStaking)
    private static final crescent.farming.v1beta1.Farming.QueuedStaking DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.QueuedStaking();
    }

    public static crescent.farming.v1beta1.Farming.QueuedStaking getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueuedStaking>
        PARSER = new com.google.protobuf.AbstractParser<QueuedStaking>() {
      @java.lang.Override
      public QueuedStaking parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QueuedStaking(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueuedStaking> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueuedStaking> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.QueuedStaking getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TotalStakingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.TotalStakings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    java.lang.String getAmount();
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    com.google.protobuf.ByteString
        getAmountBytes();
  }
  /**
   * <pre>
   * TotalStakings defines the total staking amount for a staking coin denom.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.TotalStakings}
   */
  public static final class TotalStakings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.TotalStakings)
      TotalStakingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TotalStakings.newBuilder() to construct.
    private TotalStakings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TotalStakings() {
      amount_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TotalStakings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TotalStakings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              amount_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_TotalStakings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_TotalStakings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.TotalStakings.class, crescent.farming.v1beta1.Farming.TotalStakings.Builder.class);
    }

    public static final int AMOUNT_FIELD_NUMBER = 1;
    private volatile java.lang.Object amount_;
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public java.lang.String getAmount() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amount_ = s;
        return s;
      }
    }
    /**
     * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
     * @return The bytes for amount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAmountBytes() {
      java.lang.Object ref = amount_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAmountBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, amount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAmountBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, amount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.TotalStakings)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.TotalStakings other = (crescent.farming.v1beta1.Farming.TotalStakings) obj;

      if (!getAmount()
          .equals(other.getAmount())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.TotalStakings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.TotalStakings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TotalStakings defines the total staking amount for a staking coin denom.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.TotalStakings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.TotalStakings)
        crescent.farming.v1beta1.Farming.TotalStakingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_TotalStakings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_TotalStakings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.TotalStakings.class, crescent.farming.v1beta1.Farming.TotalStakings.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.TotalStakings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        amount_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_TotalStakings_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.TotalStakings getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.TotalStakings.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.TotalStakings build() {
        crescent.farming.v1beta1.Farming.TotalStakings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.TotalStakings buildPartial() {
        crescent.farming.v1beta1.Farming.TotalStakings result = new crescent.farming.v1beta1.Farming.TotalStakings(this);
        result.amount_ = amount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.TotalStakings) {
          return mergeFrom((crescent.farming.v1beta1.Farming.TotalStakings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.TotalStakings other) {
        if (other == crescent.farming.v1beta1.Farming.TotalStakings.getDefaultInstance()) return this;
        if (!other.getAmount().isEmpty()) {
          amount_ = other.amount_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.TotalStakings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.TotalStakings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object amount_ = "";
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The amount.
       */
      public java.lang.String getAmount() {
        java.lang.Object ref = amount_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          amount_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return The bytes for amount.
       */
      public com.google.protobuf.ByteString
          getAmountBytes() {
        java.lang.Object ref = amount_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          amount_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = getDefaultInstance().getAmount();
        onChanged();
        return this;
      }
      /**
       * <code>string amount = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int"];</code>
       * @param value The bytes for amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        amount_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.TotalStakings)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.TotalStakings)
    private static final crescent.farming.v1beta1.Farming.TotalStakings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.TotalStakings();
    }

    public static crescent.farming.v1beta1.Farming.TotalStakings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TotalStakings>
        PARSER = new com.google.protobuf.AbstractParser<TotalStakings>() {
      @java.lang.Override
      public TotalStakings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TotalStakings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TotalStakings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TotalStakings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.TotalStakings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HistoricalRewardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.HistoricalRewards)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> 
        getCumulativeUnitRewardsList();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoin getCumulativeUnitRewards(int index);
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    int getCumulativeUnitRewardsCount();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getCumulativeUnitRewardsOrBuilderList();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getCumulativeUnitRewardsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * HistoricalRewards defines the cumulative unit rewards for a given staking coin denom and an epoch number.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.HistoricalRewards}
   */
  public static final class HistoricalRewards extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.HistoricalRewards)
      HistoricalRewardsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HistoricalRewards.newBuilder() to construct.
    private HistoricalRewards(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HistoricalRewards() {
      cumulativeUnitRewards_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HistoricalRewards();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HistoricalRewards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cumulativeUnitRewards_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>();
                mutable_bitField0_ |= 0x00000001;
              }
              cumulativeUnitRewards_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.DecCoin.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cumulativeUnitRewards_ = java.util.Collections.unmodifiableList(cumulativeUnitRewards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_HistoricalRewards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.HistoricalRewards.class, crescent.farming.v1beta1.Farming.HistoricalRewards.Builder.class);
    }

    public static final int CUMULATIVE_UNIT_REWARDS_FIELD_NUMBER = 1;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> cumulativeUnitRewards_;
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getCumulativeUnitRewardsList() {
      return cumulativeUnitRewards_;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getCumulativeUnitRewardsOrBuilderList() {
      return cumulativeUnitRewards_;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public int getCumulativeUnitRewardsCount() {
      return cumulativeUnitRewards_.size();
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoin getCumulativeUnitRewards(int index) {
      return cumulativeUnitRewards_.get(index);
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getCumulativeUnitRewardsOrBuilder(
        int index) {
      return cumulativeUnitRewards_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cumulativeUnitRewards_.size(); i++) {
        output.writeMessage(1, cumulativeUnitRewards_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cumulativeUnitRewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cumulativeUnitRewards_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.HistoricalRewards)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.HistoricalRewards other = (crescent.farming.v1beta1.Farming.HistoricalRewards) obj;

      if (!getCumulativeUnitRewardsList()
          .equals(other.getCumulativeUnitRewardsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCumulativeUnitRewardsCount() > 0) {
        hash = (37 * hash) + CUMULATIVE_UNIT_REWARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCumulativeUnitRewardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.HistoricalRewards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.HistoricalRewards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * HistoricalRewards defines the cumulative unit rewards for a given staking coin denom and an epoch number.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.HistoricalRewards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.HistoricalRewards)
        crescent.farming.v1beta1.Farming.HistoricalRewardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_HistoricalRewards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.HistoricalRewards.class, crescent.farming.v1beta1.Farming.HistoricalRewards.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.HistoricalRewards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCumulativeUnitRewardsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (cumulativeUnitRewardsBuilder_ == null) {
          cumulativeUnitRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cumulativeUnitRewardsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.HistoricalRewards getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.HistoricalRewards.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.HistoricalRewards build() {
        crescent.farming.v1beta1.Farming.HistoricalRewards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.HistoricalRewards buildPartial() {
        crescent.farming.v1beta1.Farming.HistoricalRewards result = new crescent.farming.v1beta1.Farming.HistoricalRewards(this);
        int from_bitField0_ = bitField0_;
        if (cumulativeUnitRewardsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cumulativeUnitRewards_ = java.util.Collections.unmodifiableList(cumulativeUnitRewards_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cumulativeUnitRewards_ = cumulativeUnitRewards_;
        } else {
          result.cumulativeUnitRewards_ = cumulativeUnitRewardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.HistoricalRewards) {
          return mergeFrom((crescent.farming.v1beta1.Farming.HistoricalRewards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.HistoricalRewards other) {
        if (other == crescent.farming.v1beta1.Farming.HistoricalRewards.getDefaultInstance()) return this;
        if (cumulativeUnitRewardsBuilder_ == null) {
          if (!other.cumulativeUnitRewards_.isEmpty()) {
            if (cumulativeUnitRewards_.isEmpty()) {
              cumulativeUnitRewards_ = other.cumulativeUnitRewards_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCumulativeUnitRewardsIsMutable();
              cumulativeUnitRewards_.addAll(other.cumulativeUnitRewards_);
            }
            onChanged();
          }
        } else {
          if (!other.cumulativeUnitRewards_.isEmpty()) {
            if (cumulativeUnitRewardsBuilder_.isEmpty()) {
              cumulativeUnitRewardsBuilder_.dispose();
              cumulativeUnitRewardsBuilder_ = null;
              cumulativeUnitRewards_ = other.cumulativeUnitRewards_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cumulativeUnitRewardsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCumulativeUnitRewardsFieldBuilder() : null;
            } else {
              cumulativeUnitRewardsBuilder_.addAllMessages(other.cumulativeUnitRewards_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.HistoricalRewards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.HistoricalRewards) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> cumulativeUnitRewards_ =
        java.util.Collections.emptyList();
      private void ensureCumulativeUnitRewardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cumulativeUnitRewards_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>(cumulativeUnitRewards_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> cumulativeUnitRewardsBuilder_;

      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getCumulativeUnitRewardsList() {
        if (cumulativeUnitRewardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cumulativeUnitRewards_);
        } else {
          return cumulativeUnitRewardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public int getCumulativeUnitRewardsCount() {
        if (cumulativeUnitRewardsBuilder_ == null) {
          return cumulativeUnitRewards_.size();
        } else {
          return cumulativeUnitRewardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin getCumulativeUnitRewards(int index) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          return cumulativeUnitRewards_.get(index);
        } else {
          return cumulativeUnitRewardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setCumulativeUnitRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.set(index, value);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setCumulativeUnitRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addCumulativeUnitRewards(cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.add(value);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addCumulativeUnitRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.add(index, value);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addCumulativeUnitRewards(
          cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.add(builderForValue.build());
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addCumulativeUnitRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addAllCumulativeUnitRewards(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoin> values) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          ensureCumulativeUnitRewardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cumulativeUnitRewards_);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder clearCumulativeUnitRewards() {
        if (cumulativeUnitRewardsBuilder_ == null) {
          cumulativeUnitRewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder removeCumulativeUnitRewards(int index) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          ensureCumulativeUnitRewardsIsMutable();
          cumulativeUnitRewards_.remove(index);
          onChanged();
        } else {
          cumulativeUnitRewardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder getCumulativeUnitRewardsBuilder(
          int index) {
        return getCumulativeUnitRewardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getCumulativeUnitRewardsOrBuilder(
          int index) {
        if (cumulativeUnitRewardsBuilder_ == null) {
          return cumulativeUnitRewards_.get(index);  } else {
          return cumulativeUnitRewardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
           getCumulativeUnitRewardsOrBuilderList() {
        if (cumulativeUnitRewardsBuilder_ != null) {
          return cumulativeUnitRewardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cumulativeUnitRewards_);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addCumulativeUnitRewardsBuilder() {
        return getCumulativeUnitRewardsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addCumulativeUnitRewardsBuilder(
          int index) {
        return getCumulativeUnitRewardsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"cumulative_unit_rewards&#92;"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder> 
           getCumulativeUnitRewardsBuilderList() {
        return getCumulativeUnitRewardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
          getCumulativeUnitRewardsFieldBuilder() {
        if (cumulativeUnitRewardsBuilder_ == null) {
          cumulativeUnitRewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder>(
                  cumulativeUnitRewards_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cumulativeUnitRewards_ = null;
        }
        return cumulativeUnitRewardsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.HistoricalRewards)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.HistoricalRewards)
    private static final crescent.farming.v1beta1.Farming.HistoricalRewards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.HistoricalRewards();
    }

    public static crescent.farming.v1beta1.Farming.HistoricalRewards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HistoricalRewards>
        PARSER = new com.google.protobuf.AbstractParser<HistoricalRewards>() {
      @java.lang.Override
      public HistoricalRewards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HistoricalRewards(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HistoricalRewards> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HistoricalRewards> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.HistoricalRewards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutstandingRewardsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.farming.v1beta1.OutstandingRewards)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> 
        getRewardsList();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoin getRewards(int index);
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    int getRewardsCount();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getRewardsOrBuilderList();
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getRewardsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * OutstandingRewards represents outstanding (un-withdrawn) rewards
   * for a staking coin denom.
   * </pre>
   *
   * Protobuf type {@code crescent.farming.v1beta1.OutstandingRewards}
   */
  public static final class OutstandingRewards extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.farming.v1beta1.OutstandingRewards)
      OutstandingRewardsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutstandingRewards.newBuilder() to construct.
    private OutstandingRewards(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutstandingRewards() {
      rewards_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OutstandingRewards();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutstandingRewards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rewards_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>();
                mutable_bitField0_ |= 0x00000001;
              }
              rewards_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.DecCoin.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rewards_ = java.util.Collections.unmodifiableList(rewards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_OutstandingRewards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.farming.v1beta1.Farming.OutstandingRewards.class, crescent.farming.v1beta1.Farming.OutstandingRewards.Builder.class);
    }

    public static final int REWARDS_FIELD_NUMBER = 1;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> rewards_;
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getRewardsList() {
      return rewards_;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
        getRewardsOrBuilderList() {
      return rewards_;
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public int getRewardsCount() {
      return rewards_.size();
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoin getRewards(int index) {
      return rewards_.get(index);
    }
    /**
     * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getRewardsOrBuilder(
        int index) {
      return rewards_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rewards_.size(); i++) {
        output.writeMessage(1, rewards_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rewards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rewards_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.farming.v1beta1.Farming.OutstandingRewards)) {
        return super.equals(obj);
      }
      crescent.farming.v1beta1.Farming.OutstandingRewards other = (crescent.farming.v1beta1.Farming.OutstandingRewards) obj;

      if (!getRewardsList()
          .equals(other.getRewardsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRewardsCount() > 0) {
        hash = (37 * hash) + REWARDS_FIELD_NUMBER;
        hash = (53 * hash) + getRewardsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.farming.v1beta1.Farming.OutstandingRewards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.farming.v1beta1.Farming.OutstandingRewards prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OutstandingRewards represents outstanding (un-withdrawn) rewards
     * for a staking coin denom.
     * </pre>
     *
     * Protobuf type {@code crescent.farming.v1beta1.OutstandingRewards}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.farming.v1beta1.OutstandingRewards)
        crescent.farming.v1beta1.Farming.OutstandingRewardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_OutstandingRewards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.farming.v1beta1.Farming.OutstandingRewards.class, crescent.farming.v1beta1.Farming.OutstandingRewards.Builder.class);
      }

      // Construct using crescent.farming.v1beta1.Farming.OutstandingRewards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRewardsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rewardsBuilder_ == null) {
          rewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rewardsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.farming.v1beta1.Farming.internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.OutstandingRewards getDefaultInstanceForType() {
        return crescent.farming.v1beta1.Farming.OutstandingRewards.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.OutstandingRewards build() {
        crescent.farming.v1beta1.Farming.OutstandingRewards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.farming.v1beta1.Farming.OutstandingRewards buildPartial() {
        crescent.farming.v1beta1.Farming.OutstandingRewards result = new crescent.farming.v1beta1.Farming.OutstandingRewards(this);
        int from_bitField0_ = bitField0_;
        if (rewardsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rewards_ = java.util.Collections.unmodifiableList(rewards_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rewards_ = rewards_;
        } else {
          result.rewards_ = rewardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.farming.v1beta1.Farming.OutstandingRewards) {
          return mergeFrom((crescent.farming.v1beta1.Farming.OutstandingRewards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.farming.v1beta1.Farming.OutstandingRewards other) {
        if (other == crescent.farming.v1beta1.Farming.OutstandingRewards.getDefaultInstance()) return this;
        if (rewardsBuilder_ == null) {
          if (!other.rewards_.isEmpty()) {
            if (rewards_.isEmpty()) {
              rewards_ = other.rewards_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRewardsIsMutable();
              rewards_.addAll(other.rewards_);
            }
            onChanged();
          }
        } else {
          if (!other.rewards_.isEmpty()) {
            if (rewardsBuilder_.isEmpty()) {
              rewardsBuilder_.dispose();
              rewardsBuilder_ = null;
              rewards_ = other.rewards_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rewardsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRewardsFieldBuilder() : null;
            } else {
              rewardsBuilder_.addAllMessages(other.rewards_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.farming.v1beta1.Farming.OutstandingRewards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.farming.v1beta1.Farming.OutstandingRewards) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> rewards_ =
        java.util.Collections.emptyList();
      private void ensureRewardsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rewards_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.DecCoin>(rewards_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> rewardsBuilder_;

      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin> getRewardsList() {
        if (rewardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewards_);
        } else {
          return rewardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public int getRewardsCount() {
        if (rewardsBuilder_ == null) {
          return rewards_.size();
        } else {
          return rewardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin getRewards(int index) {
        if (rewardsBuilder_ == null) {
          return rewards_.get(index);
        } else {
          return rewardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.set(index, value);
          onChanged();
        } else {
          rewardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder setRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addRewards(cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.add(value);
          onChanged();
        } else {
          rewardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin value) {
        if (rewardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardsIsMutable();
          rewards_.add(index, value);
          onChanged();
        } else {
          rewardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addRewards(
          cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.add(builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addRewards(
          int index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder builderForValue) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder addAllRewards(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoin> values) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rewards_);
          onChanged();
        } else {
          rewardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder clearRewards() {
        if (rewardsBuilder_ == null) {
          rewards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rewardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public Builder removeRewards(int index) {
        if (rewardsBuilder_ == null) {
          ensureRewardsIsMutable();
          rewards_.remove(index);
          onChanged();
        } else {
          rewardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder getRewardsBuilder(
          int index) {
        return getRewardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder getRewardsOrBuilder(
          int index) {
        if (rewardsBuilder_ == null) {
          return rewards_.get(index);  } else {
          return rewardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
           getRewardsOrBuilderList() {
        if (rewardsBuilder_ != null) {
          return rewardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewards_);
        }
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addRewardsBuilder() {
        return getRewardsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder addRewardsBuilder(
          int index) {
        return getRewardsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.DecCoin.getDefaultInstance());
      }
      /**
       * <code>repeated .cosmos.base.v1beta1.DecCoin rewards = 1 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder> 
           getRewardsBuilderList() {
        return getRewardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder> 
          getRewardsFieldBuilder() {
        if (rewardsBuilder_ == null) {
          rewardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.DecCoin, cosmos.base.v1beta1.CoinOuterClass.DecCoin.Builder, cosmos.base.v1beta1.CoinOuterClass.DecCoinOrBuilder>(
                  rewards_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rewards_ = null;
        }
        return rewardsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.farming.v1beta1.OutstandingRewards)
    }

    // @@protoc_insertion_point(class_scope:crescent.farming.v1beta1.OutstandingRewards)
    private static final crescent.farming.v1beta1.Farming.OutstandingRewards DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.farming.v1beta1.Farming.OutstandingRewards();
    }

    public static crescent.farming.v1beta1.Farming.OutstandingRewards getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutstandingRewards>
        PARSER = new com.google.protobuf.AbstractParser<OutstandingRewards>() {
      @java.lang.Override
      public OutstandingRewards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutstandingRewards(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutstandingRewards> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutstandingRewards> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.farming.v1beta1.Farming.OutstandingRewards getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_Params_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_BasePlan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_BasePlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_FixedAmountPlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_RatioPlan_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_Staking_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_Staking_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_QueuedStaking_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_TotalStakings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_TotalStakings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_HistoricalRewards_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_farming_v1beta1_OutstandingRewards_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&crescent/farming/v1beta1/farming.proto" +
      "\022\030crescent.farming.v1beta1\032\024gogoproto/go" +
      "go.proto\032\031cosmos_proto/cosmos.proto\032\036cos" +
      "mos/base/v1beta1/coin.proto\032\037google/prot" +
      "obuf/timestamp.proto\"\321\003\n\006Params\022\222\001\n\031priv" +
      "ate_plan_creation_fee\030\001 \003(\0132\031.cosmos.bas" +
      "e.v1beta1.CoinBT\362\336\037 yaml:\"private_plan_c" +
      "reation_fee\"\252\337\037(github.com/cosmos/cosmos" +
      "-sdk/types.Coins\310\336\037\000\0223\n\017next_epoch_days\030" +
      "\002 \001(\rB\032\362\336\037\026yaml:\"next_epoch_days\"\022?\n\025far" +
      "ming_fee_collector\030\003 \001(\tB \362\336\037\034yaml:\"farm" +
      "ing_fee_collector\"\022q\n\027delayed_staking_ga" +
      "s_fee\030\004 \001(\004BP\362\336\037\036yaml:\"delayed_staking_g" +
      "as_fee\"\332\336\037&github.com/cosmos/cosmos-sdk/" +
      "types.Gas\310\336\037\000\022?\n\025max_num_private_plans\030\005" +
      " \001(\rB \362\336\037\034yaml:\"max_num_private_plans\":\010" +
      "\210\240\037\000\230\240\037\000\"\210\006\n\010BasePlan\022\n\n\002id\030\001 \001(\004\022\014\n\004nam" +
      "e\030\002 \001(\t\0220\n\004type\030\003 \001(\0162\".crescent.farming" +
      ".v1beta1.PlanType\022=\n\024farming_pool_addres" +
      "s\030\004 \001(\tB\037\362\336\037\033yaml:\"farming_pool_address\"" +
      "\022;\n\023termination_address\030\005 \001(\tB\036\362\336\037\032yaml:" +
      "\"termination_address\"\022\216\001\n\024staking_coin_w" +
      "eights\030\006 \003(\0132\034.cosmos.base.v1beta1.DecCo" +
      "inBR\362\336\037\033yaml:\"staking_coin_weights\"\252\337\037+g" +
      "ithub.com/cosmos/cosmos-sdk/types.DecCoi" +
      "ns\310\336\037\000\022M\n\nstart_time\030\007 \001(\0132\032.google.prot" +
      "obuf.TimestampB\035\220\337\037\001\310\336\037\000\362\336\037\021yaml:\"start_" +
      "time\"\022I\n\010end_time\030\010 \001(\0132\032.google.protobu" +
      "f.TimestampB\033\220\337\037\001\310\336\037\000\362\336\037\017yaml:\"end_time\"" +
      "\022\022\n\nterminated\030\t \001(\010\022a\n\026last_distributio" +
      "n_time\030\n \001(\0132\032.google.protobuf.Timestamp" +
      "B%\220\337\037\001\362\336\037\035yaml:\"last_distribution_time\"\022" +
      "\202\001\n\021distributed_coins\030\013 \003(\0132\031.cosmos.bas" +
      "e.v1beta1.CoinBL\362\336\037\030yaml:\"distributed_co" +
      "ins\"\252\337\037(github.com/cosmos/cosmos-sdk/typ" +
      "es.Coins\310\336\037\000:\r\210\240\037\000\312\264-\005PlanI\"\342\001\n\017FixedAmo" +
      "untPlan\022O\n\tbase_plan\030\001 \001(\0132\".crescent.fa" +
      "rming.v1beta1.BasePlanB\030\320\336\037\001\362\336\037\020yaml:\"ba" +
      "se_plan\"\022x\n\014epoch_amount\030\002 \003(\0132\031.cosmos." +
      "base.v1beta1.CoinBG\362\336\037\023yaml:\"epoch_amoun" +
      "t\"\252\337\037(github.com/cosmos/cosmos-sdk/types" +
      ".Coins\310\336\037\000:\004\210\240\037\000\"\275\001\n\tRatioPlan\022O\n\tbase_p" +
      "lan\030\001 \001(\0132\".crescent.farming.v1beta1.Bas" +
      "ePlanB\030\320\336\037\001\362\336\037\020yaml:\"base_plan\"\022Y\n\013epoch" +
      "_ratio\030\002 \001(\tBD\362\336\037\022yaml:\"epoch_ratio\"\332\336\037&" +
      "github.com/cosmos/cosmos-sdk/types.Dec\310\336" +
      "\037\000:\004\210\240\037\000\"\202\001\n\007Staking\022>\n\006amount\030\001 \001(\tB.\332\336" +
      "\037&github.com/cosmos/cosmos-sdk/types.Int" +
      "\310\336\037\000\0221\n\016starting_epoch\030\002 \001(\004B\031\362\336\037\025yaml:\"" +
      "starting_epoch\":\004\210\240\037\000\"U\n\rQueuedStaking\022>" +
      "\n\006amount\030\001 \001(\tB.\332\336\037&github.com/cosmos/co" +
      "smos-sdk/types.Int\310\336\037\000:\004\210\240\037\000\"U\n\rTotalSta" +
      "kings\022>\n\006amount\030\001 \001(\tB.\332\336\037&github.com/co" +
      "smos/cosmos-sdk/types.Int\310\336\037\000:\004\210\240\037\000\"\260\001\n\021" +
      "HistoricalRewards\022\224\001\n\027cumulative_unit_re" +
      "wards\030\001 \003(\0132\034.cosmos.base.v1beta1.DecCoi" +
      "nBU\362\336\037\036yaml:\"cumulative_unit_rewards\"\252\337\037" +
      "+github.com/cosmos/cosmos-sdk/types.DecC" +
      "oins\310\336\037\000:\004\210\240\037\000\"~\n\022OutstandingRewards\022b\n\007" +
      "rewards\030\001 \003(\0132\034.cosmos.base.v1beta1.DecC" +
      "oinB3\252\337\037+github.com/cosmos/cosmos-sdk/ty" +
      "pes.DecCoins\310\336\037\000:\004\210\240\037\000*\222\001\n\010PlanType\022*\n\025P" +
      "LAN_TYPE_UNSPECIFIED\020\000\032\017\212\235 \013PlanTypeNil\022" +
      "(\n\020PLAN_TYPE_PUBLIC\020\001\032\022\212\235 \016PlanTypePubli" +
      "c\022*\n\021PLAN_TYPE_PRIVATE\020\002\032\023\212\235 \017PlanTypePr" +
      "ivate\032\004\210\243\036\000*y\n\013AddressType\0221\n\025ADDRESS_TY" +
      "PE_32_BYTES\020\000\032\026\212\235 \022AddressType32Bytes\0221\n" +
      "\025ADDRESS_TYPE_20_BYTES\020\001\032\026\212\235 \022AddressTyp" +
      "e20Bytes\032\004\210\243\036\000B6Z4github.com/crescent-ne" +
      "twork/crescent/x/farming/typesb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          cosmos_proto.Cosmos.getDescriptor(),
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_crescent_farming_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_farming_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_Params_descriptor,
        new java.lang.String[] { "PrivatePlanCreationFee", "NextEpochDays", "FarmingFeeCollector", "DelayedStakingGasFee", "MaxNumPrivatePlans", });
    internal_static_crescent_farming_v1beta1_BasePlan_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_farming_v1beta1_BasePlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_BasePlan_descriptor,
        new java.lang.String[] { "Id", "Name", "Type", "FarmingPoolAddress", "TerminationAddress", "StakingCoinWeights", "StartTime", "EndTime", "Terminated", "LastDistributionTime", "DistributedCoins", });
    internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_crescent_farming_v1beta1_FixedAmountPlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_FixedAmountPlan_descriptor,
        new java.lang.String[] { "BasePlan", "EpochAmount", });
    internal_static_crescent_farming_v1beta1_RatioPlan_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_crescent_farming_v1beta1_RatioPlan_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_RatioPlan_descriptor,
        new java.lang.String[] { "BasePlan", "EpochRatio", });
    internal_static_crescent_farming_v1beta1_Staking_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_crescent_farming_v1beta1_Staking_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_Staking_descriptor,
        new java.lang.String[] { "Amount", "StartingEpoch", });
    internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_crescent_farming_v1beta1_QueuedStaking_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_QueuedStaking_descriptor,
        new java.lang.String[] { "Amount", });
    internal_static_crescent_farming_v1beta1_TotalStakings_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_crescent_farming_v1beta1_TotalStakings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_TotalStakings_descriptor,
        new java.lang.String[] { "Amount", });
    internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_crescent_farming_v1beta1_HistoricalRewards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_HistoricalRewards_descriptor,
        new java.lang.String[] { "CumulativeUnitRewards", });
    internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_crescent_farming_v1beta1_OutstandingRewards_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_farming_v1beta1_OutstandingRewards_descriptor,
        new java.lang.String[] { "Rewards", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(cosmos_proto.Cosmos.implementsInterface);
    registry.add(com.google.protobuf2.GoGoProtos.castrepeated);
    registry.add(com.google.protobuf2.GoGoProtos.customtype);
    registry.add(com.google.protobuf2.GoGoProtos.embed);
    registry.add(com.google.protobuf2.GoGoProtos.enumvalueCustomname);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumPrefix);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGetters);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoStringer);
    registry.add(com.google.protobuf2.GoGoProtos.moretags);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    cosmos_proto.Cosmos.getDescriptor();
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
