// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crescent/claim/v1beta1/claim.proto

package crescent.claim.v1beta1;

public final class Claim {
  private Claim() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * ConditionType defines the type of condition that a recipient must execute in order to receive a claimable amount.
   * </pre>
   *
   * Protobuf enum {@code crescent.claim.v1beta1.ConditionType}
   */
  public enum ConditionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "ConditionTypeUnspecified"];</code>
     */
    CONDITION_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * CONDITION_TYPE_DEPOSIT specifies deposit condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "ConditionTypeDeposit"];</code>
     */
    CONDITION_TYPE_DEPOSIT(1),
    /**
     * <pre>
     * CONDITION_TYPE_SWAP specifies swap condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_SWAP = 2 [(.gogoproto.enumvalue_customname) = "ConditionTypeSwap"];</code>
     */
    CONDITION_TYPE_SWAP(2),
    /**
     * <pre>
     * CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_LIQUIDSTAKE = 3 [(.gogoproto.enumvalue_customname) = "ConditionTypeLiquidStake"];</code>
     */
    CONDITION_TYPE_LIQUIDSTAKE(3),
    /**
     * <pre>
     * CONDITION_TYPE_VOTE specifies governance vote condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_VOTE = 4 [(.gogoproto.enumvalue_customname) = "ConditionTypeVote"];</code>
     */
    CONDITION_TYPE_VOTE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "ConditionTypeUnspecified"];</code>
     */
    public static final int CONDITION_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * CONDITION_TYPE_DEPOSIT specifies deposit condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "ConditionTypeDeposit"];</code>
     */
    public static final int CONDITION_TYPE_DEPOSIT_VALUE = 1;
    /**
     * <pre>
     * CONDITION_TYPE_SWAP specifies swap condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_SWAP = 2 [(.gogoproto.enumvalue_customname) = "ConditionTypeSwap"];</code>
     */
    public static final int CONDITION_TYPE_SWAP_VALUE = 2;
    /**
     * <pre>
     * CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_LIQUIDSTAKE = 3 [(.gogoproto.enumvalue_customname) = "ConditionTypeLiquidStake"];</code>
     */
    public static final int CONDITION_TYPE_LIQUIDSTAKE_VALUE = 3;
    /**
     * <pre>
     * CONDITION_TYPE_VOTE specifies governance vote condition type
     * </pre>
     *
     * <code>CONDITION_TYPE_VOTE = 4 [(.gogoproto.enumvalue_customname) = "ConditionTypeVote"];</code>
     */
    public static final int CONDITION_TYPE_VOTE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConditionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ConditionType forNumber(int value) {
      switch (value) {
        case 0: return CONDITION_TYPE_UNSPECIFIED;
        case 1: return CONDITION_TYPE_DEPOSIT;
        case 2: return CONDITION_TYPE_SWAP;
        case 3: return CONDITION_TYPE_LIQUIDSTAKE;
        case 4: return CONDITION_TYPE_VOTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConditionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConditionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConditionType>() {
            public ConditionType findValueByNumber(int number) {
              return ConditionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return crescent.claim.v1beta1.Claim.getDescriptor().getEnumTypes().get(0);
    }

    private static final ConditionType[] VALUES = values();

    public static ConditionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConditionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:crescent.claim.v1beta1.ConditionType)
  }

  public interface AirdropOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.claim.v1beta1.Airdrop)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * id specifies index of the airdrop
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * source_address defines the bech32-encoded source address
     * where the source of coins from
     * </pre>
     *
     * <code>string source_address = 2;</code>
     * @return The sourceAddress.
     */
    java.lang.String getSourceAddress();
    /**
     * <pre>
     * source_address defines the bech32-encoded source address
     * where the source of coins from
     * </pre>
     *
     * <code>string source_address = 2;</code>
     * @return The bytes for sourceAddress.
     */
    com.google.protobuf.ByteString
        getSourceAddressBytes();

    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return A list containing the conditions.
     */
    java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getConditionsList();
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return The count of conditions.
     */
    int getConditionsCount();
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @param index The index of the element to return.
     * @return The conditions at the given index.
     */
    crescent.claim.v1beta1.Claim.ConditionType getConditions(int index);
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return A list containing the enum numeric values on the wire for conditions.
     */
    java.util.List<java.lang.Integer>
    getConditionsValueList();
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of conditions at the given index.
     */
    int getConditionsValue(int index);

    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    boolean hasStartTime();
    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    com.google.protobuf.Timestamp getStartTime();
    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the endTime field is set.
     */
    boolean hasEndTime();
    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The endTime.
     */
    com.google.protobuf.Timestamp getEndTime();
    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder();
  }
  /**
   * <pre>
   * Airdrop defines airdrop information.
   * </pre>
   *
   * Protobuf type {@code crescent.claim.v1beta1.Airdrop}
   */
  public static final class Airdrop extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.claim.v1beta1.Airdrop)
      AirdropOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Airdrop.newBuilder() to construct.
    private Airdrop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Airdrop() {
      sourceAddress_ = "";
      conditions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Airdrop();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Airdrop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readUInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              sourceAddress_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                conditions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              conditions_.add(rawValue);
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  conditions_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                conditions_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            case 34: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (startTime_ != null) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (endTime_ != null) {
                subBuilder = endTime_.toBuilder();
              }
              endTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endTime_);
                endTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          conditions_ = java.util.Collections.unmodifiableList(conditions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_Airdrop_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.claim.v1beta1.Claim.Airdrop.class, crescent.claim.v1beta1.Claim.Airdrop.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     * id specifies index of the airdrop
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int SOURCE_ADDRESS_FIELD_NUMBER = 2;
    private volatile java.lang.Object sourceAddress_;
    /**
     * <pre>
     * source_address defines the bech32-encoded source address
     * where the source of coins from
     * </pre>
     *
     * <code>string source_address = 2;</code>
     * @return The sourceAddress.
     */
    @java.lang.Override
    public java.lang.String getSourceAddress() {
      java.lang.Object ref = sourceAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceAddress_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * source_address defines the bech32-encoded source address
     * where the source of coins from
     * </pre>
     *
     * <code>string source_address = 2;</code>
     * @return The bytes for sourceAddress.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceAddressBytes() {
      java.lang.Object ref = sourceAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONDITIONS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> conditions_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType> conditions_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>() {
              public crescent.claim.v1beta1.Claim.ConditionType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                crescent.claim.v1beta1.Claim.ConditionType result = crescent.claim.v1beta1.Claim.ConditionType.valueOf(from);
                return result == null ? crescent.claim.v1beta1.Claim.ConditionType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return A list containing the conditions.
     */
    @java.lang.Override
    public java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getConditionsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>(conditions_, conditions_converter_);
    }
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return The count of conditions.
     */
    @java.lang.Override
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @param index The index of the element to return.
     * @return The conditions at the given index.
     */
    @java.lang.Override
    public crescent.claim.v1beta1.Claim.ConditionType getConditions(int index) {
      return conditions_converter_.convert(conditions_.get(index));
    }
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @return A list containing the enum numeric values on the wire for conditions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getConditionsValueList() {
      return conditions_;
    }
    /**
     * <pre>
     * conditions specifies a list of conditions
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of conditions at the given index.
     */
    @java.lang.Override
    public int getConditionsValue(int index) {
      return conditions_.get(index);
    }
    private int conditionsMemoizedSerializedSize;

    public static final int START_TIME_FIELD_NUMBER = 4;
    private com.google.protobuf.Timestamp startTime_;
    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the startTime field is set.
     */
    @java.lang.Override
    public boolean hasStartTime() {
      return startTime_ != null;
    }
    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The startTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTime() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }
    /**
     * <pre>
     * start_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      return getStartTime();
    }

    public static final int END_TIME_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp endTime_;
    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the endTime field is set.
     */
    @java.lang.Override
    public boolean hasEndTime() {
      return endTime_ != null;
    }
    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return The endTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndTime() {
      return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
    }
    /**
     * <pre>
     * end_time specifies the start time of the airdrop
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      return getEndTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (id_ != 0L) {
        output.writeUInt64(1, id_);
      }
      if (!getSourceAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourceAddress_);
      }
      if (getConditionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(conditionsMemoizedSerializedSize);
      }
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeEnumNoTag(conditions_.get(i));
      }
      if (startTime_ != null) {
        output.writeMessage(4, getStartTime());
      }
      if (endTime_ != null) {
        output.writeMessage(5, getEndTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (!getSourceAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sourceAddress_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < conditions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(conditions_.get(i));
        }
        size += dataSize;
        if (!getConditionsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }conditionsMemoizedSerializedSize = dataSize;
      }
      if (startTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getStartTime());
      }
      if (endTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getEndTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.claim.v1beta1.Claim.Airdrop)) {
        return super.equals(obj);
      }
      crescent.claim.v1beta1.Claim.Airdrop other = (crescent.claim.v1beta1.Claim.Airdrop) obj;

      if (getId()
          != other.getId()) return false;
      if (!getSourceAddress()
          .equals(other.getSourceAddress())) return false;
      if (!conditions_.equals(other.conditions_)) return false;
      if (hasStartTime() != other.hasStartTime()) return false;
      if (hasStartTime()) {
        if (!getStartTime()
            .equals(other.getStartTime())) return false;
      }
      if (hasEndTime() != other.hasEndTime()) return false;
      if (hasEndTime()) {
        if (!getEndTime()
            .equals(other.getEndTime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + SOURCE_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getSourceAddress().hashCode();
      if (getConditionsCount() > 0) {
        hash = (37 * hash) + CONDITIONS_FIELD_NUMBER;
        hash = (53 * hash) + conditions_.hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.Airdrop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.claim.v1beta1.Claim.Airdrop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Airdrop defines airdrop information.
     * </pre>
     *
     * Protobuf type {@code crescent.claim.v1beta1.Airdrop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.claim.v1beta1.Airdrop)
        crescent.claim.v1beta1.Claim.AirdropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_Airdrop_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.claim.v1beta1.Claim.Airdrop.class, crescent.claim.v1beta1.Claim.Airdrop.Builder.class);
      }

      // Construct using crescent.claim.v1beta1.Claim.Airdrop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0L;

        sourceAddress_ = "";

        conditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }
        if (endTimeBuilder_ == null) {
          endTime_ = null;
        } else {
          endTime_ = null;
          endTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_Airdrop_descriptor;
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.Airdrop getDefaultInstanceForType() {
        return crescent.claim.v1beta1.Claim.Airdrop.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.Airdrop build() {
        crescent.claim.v1beta1.Claim.Airdrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.Airdrop buildPartial() {
        crescent.claim.v1beta1.Claim.Airdrop result = new crescent.claim.v1beta1.Claim.Airdrop(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.sourceAddress_ = sourceAddress_;
        if (((bitField0_ & 0x00000001) != 0)) {
          conditions_ = java.util.Collections.unmodifiableList(conditions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.conditions_ = conditions_;
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (endTimeBuilder_ == null) {
          result.endTime_ = endTime_;
        } else {
          result.endTime_ = endTimeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.claim.v1beta1.Claim.Airdrop) {
          return mergeFrom((crescent.claim.v1beta1.Claim.Airdrop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.claim.v1beta1.Claim.Airdrop other) {
        if (other == crescent.claim.v1beta1.Claim.Airdrop.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getSourceAddress().isEmpty()) {
          sourceAddress_ = other.sourceAddress_;
          onChanged();
        }
        if (!other.conditions_.isEmpty()) {
          if (conditions_.isEmpty()) {
            conditions_ = other.conditions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureConditionsIsMutable();
            conditions_.addAll(other.conditions_);
          }
          onChanged();
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          mergeEndTime(other.getEndTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.claim.v1beta1.Claim.Airdrop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.claim.v1beta1.Claim.Airdrop) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * id specifies index of the airdrop
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * id specifies index of the airdrop
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id specifies index of the airdrop
       * </pre>
       *
       * <code>uint64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object sourceAddress_ = "";
      /**
       * <pre>
       * source_address defines the bech32-encoded source address
       * where the source of coins from
       * </pre>
       *
       * <code>string source_address = 2;</code>
       * @return The sourceAddress.
       */
      public java.lang.String getSourceAddress() {
        java.lang.Object ref = sourceAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sourceAddress_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * source_address defines the bech32-encoded source address
       * where the source of coins from
       * </pre>
       *
       * <code>string source_address = 2;</code>
       * @return The bytes for sourceAddress.
       */
      public com.google.protobuf.ByteString
          getSourceAddressBytes() {
        java.lang.Object ref = sourceAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * source_address defines the bech32-encoded source address
       * where the source of coins from
       * </pre>
       *
       * <code>string source_address = 2;</code>
       * @param value The sourceAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSourceAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sourceAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * source_address defines the bech32-encoded source address
       * where the source of coins from
       * </pre>
       *
       * <code>string source_address = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceAddress() {
        
        sourceAddress_ = getDefaultInstance().getSourceAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * source_address defines the bech32-encoded source address
       * where the source of coins from
       * </pre>
       *
       * <code>string source_address = 2;</code>
       * @param value The bytes for sourceAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSourceAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sourceAddress_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> conditions_ =
        java.util.Collections.emptyList();
      private void ensureConditionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          conditions_ = new java.util.ArrayList<java.lang.Integer>(conditions_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @return A list containing the conditions.
       */
      public java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getConditionsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>(conditions_, conditions_converter_);
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @return The count of conditions.
       */
      public int getConditionsCount() {
        return conditions_.size();
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param index The index of the element to return.
       * @return The conditions at the given index.
       */
      public crescent.claim.v1beta1.Claim.ConditionType getConditions(int index) {
        return conditions_converter_.convert(conditions_.get(index));
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param index The index to set the value at.
       * @param value The conditions to set.
       * @return This builder for chaining.
       */
      public Builder setConditions(
          int index, crescent.claim.v1beta1.Claim.ConditionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionsIsMutable();
        conditions_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param value The conditions to add.
       * @return This builder for chaining.
       */
      public Builder addConditions(crescent.claim.v1beta1.Claim.ConditionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConditionsIsMutable();
        conditions_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param values The conditions to add.
       * @return This builder for chaining.
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends crescent.claim.v1beta1.Claim.ConditionType> values) {
        ensureConditionsIsMutable();
        for (crescent.claim.v1beta1.Claim.ConditionType value : values) {
          conditions_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConditions() {
        conditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @return A list containing the enum numeric values on the wire for conditions.
       */
      public java.util.List<java.lang.Integer>
      getConditionsValueList() {
        return java.util.Collections.unmodifiableList(conditions_);
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of conditions at the given index.
       */
      public int getConditionsValue(int index) {
        return conditions_.get(index);
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of conditions at the given index.
       * @return This builder for chaining.
       */
      public Builder setConditionsValue(
          int index, int value) {
        ensureConditionsIsMutable();
        conditions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param value The enum numeric value on the wire for conditions to add.
       * @return This builder for chaining.
       */
      public Builder addConditionsValue(int value) {
        ensureConditionsIsMutable();
        conditions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * conditions specifies a list of conditions
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType conditions = 3;</code>
       * @param values The enum numeric values on the wire for conditions to add.
       * @return This builder for chaining.
       */
      public Builder addAllConditionsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureConditionsIsMutable();
        for (int value : values) {
          conditions_.add(value);
        }
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp startTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return Whether the startTime field is set.
       */
      public boolean hasStartTime() {
        return startTimeBuilder_ != null || startTime_ != null;
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return The startTime.
       */
      public com.google.protobuf.Timestamp getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (startTime_ != null) {
            startTime_ =
              com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTime_ = null;
          startTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
        
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <pre>
       * start_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp start_time = 4 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Timestamp endTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return Whether the endTime field is set.
       */
      public boolean hasEndTime() {
        return endTimeBuilder_ != null || endTime_ != null;
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       * @return The endTime.
       */
      public com.google.protobuf.Timestamp getEndTime() {
        if (endTimeBuilder_ == null) {
          return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        } else {
          return endTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endTime_ = value;
          onChanged();
        } else {
          endTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder setEndTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endTimeBuilder_ == null) {
          endTime_ = builderForValue.build();
          onChanged();
        } else {
          endTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (endTime_ != null) {
            endTime_ =
              com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
          } else {
            endTime_ = value;
          }
          onChanged();
        } else {
          endTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public Builder clearEndTime() {
        if (endTimeBuilder_ == null) {
          endTime_ = null;
          onChanged();
        } else {
          endTime_ = null;
          endTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
        
        onChanged();
        return getEndTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
        if (endTimeBuilder_ != null) {
          return endTimeBuilder_.getMessageOrBuilder();
        } else {
          return endTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        }
      }
      /**
       * <pre>
       * end_time specifies the start time of the airdrop
       * </pre>
       *
       * <code>.google.protobuf.Timestamp end_time = 5 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndTimeFieldBuilder() {
        if (endTimeBuilder_ == null) {
          endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndTime(),
                  getParentForChildren(),
                  isClean());
          endTime_ = null;
        }
        return endTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.claim.v1beta1.Airdrop)
    }

    // @@protoc_insertion_point(class_scope:crescent.claim.v1beta1.Airdrop)
    private static final crescent.claim.v1beta1.Claim.Airdrop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.claim.v1beta1.Claim.Airdrop();
    }

    public static crescent.claim.v1beta1.Claim.Airdrop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Airdrop>
        PARSER = new com.google.protobuf.AbstractParser<Airdrop>() {
      @java.lang.Override
      public Airdrop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Airdrop(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Airdrop> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Airdrop> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.claim.v1beta1.Claim.Airdrop getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClaimRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:crescent.claim.v1beta1.ClaimRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * airdrop_id specifies airdrop id
     * </pre>
     *
     * <code>uint64 airdrop_id = 1;</code>
     * @return The airdropId.
     */
    long getAirdropId();

    /**
     * <pre>
     * recipient specifies the bech32-encoded address that is eligible to claim airdrop
     * </pre>
     *
     * <code>string recipient = 2;</code>
     * @return The recipient.
     */
    java.lang.String getRecipient();
    /**
     * <pre>
     * recipient specifies the bech32-encoded address that is eligible to claim airdrop
     * </pre>
     *
     * <code>string recipient = 2;</code>
     * @return The bytes for recipient.
     */
    com.google.protobuf.ByteString
        getRecipientBytes();

    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getInitialClaimableCoinsList();
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getInitialClaimableCoins(int index);
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getInitialClaimableCoinsCount();
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getInitialClaimableCoinsOrBuilderList();
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getInitialClaimableCoinsOrBuilder(
        int index);

    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> 
        getClaimableCoinsList();
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.Coin getClaimableCoins(int index);
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    int getClaimableCoinsCount();
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getClaimableCoinsOrBuilderList();
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getClaimableCoinsOrBuilder(
        int index);

    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return A list containing the claimedConditions.
     */
    java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getClaimedConditionsList();
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return The count of claimedConditions.
     */
    int getClaimedConditionsCount();
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @param index The index of the element to return.
     * @return The claimedConditions at the given index.
     */
    crescent.claim.v1beta1.Claim.ConditionType getClaimedConditions(int index);
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return A list containing the enum numeric values on the wire for claimedConditions.
     */
    java.util.List<java.lang.Integer>
    getClaimedConditionsValueList();
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of claimedConditions at the given index.
     */
    int getClaimedConditionsValue(int index);
  }
  /**
   * <pre>
   * ClaimRecord defines claim record that corresponds to the airdrop.
   * </pre>
   *
   * Protobuf type {@code crescent.claim.v1beta1.ClaimRecord}
   */
  public static final class ClaimRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:crescent.claim.v1beta1.ClaimRecord)
      ClaimRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClaimRecord.newBuilder() to construct.
    private ClaimRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClaimRecord() {
      recipient_ = "";
      initialClaimableCoins_ = java.util.Collections.emptyList();
      claimableCoins_ = java.util.Collections.emptyList();
      claimedConditions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClaimRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClaimRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              airdropId_ = input.readUInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              recipient_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                initialClaimableCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000001;
              }
              initialClaimableCoins_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                claimableCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>();
                mutable_bitField0_ |= 0x00000002;
              }
              claimableCoins_.add(
                  input.readMessage(cosmos.base.v1beta1.CoinOuterClass.Coin.parser(), extensionRegistry));
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                claimedConditions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              claimedConditions_.add(rawValue);
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  claimedConditions_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000004;
                }
                claimedConditions_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          initialClaimableCoins_ = java.util.Collections.unmodifiableList(initialClaimableCoins_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          claimableCoins_ = java.util.Collections.unmodifiableList(claimableCoins_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          claimedConditions_ = java.util.Collections.unmodifiableList(claimedConditions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              crescent.claim.v1beta1.Claim.ClaimRecord.class, crescent.claim.v1beta1.Claim.ClaimRecord.Builder.class);
    }

    public static final int AIRDROP_ID_FIELD_NUMBER = 1;
    private long airdropId_;
    /**
     * <pre>
     * airdrop_id specifies airdrop id
     * </pre>
     *
     * <code>uint64 airdrop_id = 1;</code>
     * @return The airdropId.
     */
    @java.lang.Override
    public long getAirdropId() {
      return airdropId_;
    }

    public static final int RECIPIENT_FIELD_NUMBER = 2;
    private volatile java.lang.Object recipient_;
    /**
     * <pre>
     * recipient specifies the bech32-encoded address that is eligible to claim airdrop
     * </pre>
     *
     * <code>string recipient = 2;</code>
     * @return The recipient.
     */
    @java.lang.Override
    public java.lang.String getRecipient() {
      java.lang.Object ref = recipient_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        recipient_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * recipient specifies the bech32-encoded address that is eligible to claim airdrop
     * </pre>
     *
     * <code>string recipient = 2;</code>
     * @return The bytes for recipient.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRecipientBytes() {
      java.lang.Object ref = recipient_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        recipient_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INITIAL_CLAIMABLE_COINS_FIELD_NUMBER = 3;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> initialClaimableCoins_;
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getInitialClaimableCoinsList() {
      return initialClaimableCoins_;
    }
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getInitialClaimableCoinsOrBuilderList() {
      return initialClaimableCoins_;
    }
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getInitialClaimableCoinsCount() {
      return initialClaimableCoins_.size();
    }
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getInitialClaimableCoins(int index) {
      return initialClaimableCoins_.get(index);
    }
    /**
     * <pre>
     * initial_claimable_coins specifies the initial claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getInitialClaimableCoinsOrBuilder(
        int index) {
      return initialClaimableCoins_.get(index);
    }

    public static final int CLAIMABLE_COINS_FIELD_NUMBER = 4;
    private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> claimableCoins_;
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getClaimableCoinsList() {
      return claimableCoins_;
    }
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
        getClaimableCoinsOrBuilderList() {
      return claimableCoins_;
    }
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public int getClaimableCoinsCount() {
      return claimableCoins_.size();
    }
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.Coin getClaimableCoins(int index) {
      return claimableCoins_.get(index);
    }
    /**
     * <pre>
     * claimable_coins specifies the unclaimed claimable coins
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
     */
    @java.lang.Override
    public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getClaimableCoinsOrBuilder(
        int index) {
      return claimableCoins_.get(index);
    }

    public static final int CLAIMED_CONDITIONS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> claimedConditions_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType> claimedConditions_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>() {
              public crescent.claim.v1beta1.Claim.ConditionType convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                crescent.claim.v1beta1.Claim.ConditionType result = crescent.claim.v1beta1.Claim.ConditionType.valueOf(from);
                return result == null ? crescent.claim.v1beta1.Claim.ConditionType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return A list containing the claimedConditions.
     */
    @java.lang.Override
    public java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getClaimedConditionsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>(claimedConditions_, claimedConditions_converter_);
    }
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return The count of claimedConditions.
     */
    @java.lang.Override
    public int getClaimedConditionsCount() {
      return claimedConditions_.size();
    }
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @param index The index of the element to return.
     * @return The claimedConditions at the given index.
     */
    @java.lang.Override
    public crescent.claim.v1beta1.Claim.ConditionType getClaimedConditions(int index) {
      return claimedConditions_converter_.convert(claimedConditions_.get(index));
    }
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @return A list containing the enum numeric values on the wire for claimedConditions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getClaimedConditionsValueList() {
      return claimedConditions_;
    }
    /**
     * <pre>
     * claimed_conditions specifies a list of condition types
     * initial values are empty and each condition type gets appended when claim is successfully executed
     * </pre>
     *
     * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of claimedConditions at the given index.
     */
    @java.lang.Override
    public int getClaimedConditionsValue(int index) {
      return claimedConditions_.get(index);
    }
    private int claimedConditionsMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (airdropId_ != 0L) {
        output.writeUInt64(1, airdropId_);
      }
      if (!getRecipientBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, recipient_);
      }
      for (int i = 0; i < initialClaimableCoins_.size(); i++) {
        output.writeMessage(3, initialClaimableCoins_.get(i));
      }
      for (int i = 0; i < claimableCoins_.size(); i++) {
        output.writeMessage(4, claimableCoins_.get(i));
      }
      if (getClaimedConditionsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(claimedConditionsMemoizedSerializedSize);
      }
      for (int i = 0; i < claimedConditions_.size(); i++) {
        output.writeEnumNoTag(claimedConditions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (airdropId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, airdropId_);
      }
      if (!getRecipientBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, recipient_);
      }
      for (int i = 0; i < initialClaimableCoins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, initialClaimableCoins_.get(i));
      }
      for (int i = 0; i < claimableCoins_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, claimableCoins_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < claimedConditions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(claimedConditions_.get(i));
        }
        size += dataSize;
        if (!getClaimedConditionsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }claimedConditionsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof crescent.claim.v1beta1.Claim.ClaimRecord)) {
        return super.equals(obj);
      }
      crescent.claim.v1beta1.Claim.ClaimRecord other = (crescent.claim.v1beta1.Claim.ClaimRecord) obj;

      if (getAirdropId()
          != other.getAirdropId()) return false;
      if (!getRecipient()
          .equals(other.getRecipient())) return false;
      if (!getInitialClaimableCoinsList()
          .equals(other.getInitialClaimableCoinsList())) return false;
      if (!getClaimableCoinsList()
          .equals(other.getClaimableCoinsList())) return false;
      if (!claimedConditions_.equals(other.claimedConditions_)) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AIRDROP_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAirdropId());
      hash = (37 * hash) + RECIPIENT_FIELD_NUMBER;
      hash = (53 * hash) + getRecipient().hashCode();
      if (getInitialClaimableCoinsCount() > 0) {
        hash = (37 * hash) + INITIAL_CLAIMABLE_COINS_FIELD_NUMBER;
        hash = (53 * hash) + getInitialClaimableCoinsList().hashCode();
      }
      if (getClaimableCoinsCount() > 0) {
        hash = (37 * hash) + CLAIMABLE_COINS_FIELD_NUMBER;
        hash = (53 * hash) + getClaimableCoinsList().hashCode();
      }
      if (getClaimedConditionsCount() > 0) {
        hash = (37 * hash) + CLAIMED_CONDITIONS_FIELD_NUMBER;
        hash = (53 * hash) + claimedConditions_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static crescent.claim.v1beta1.Claim.ClaimRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(crescent.claim.v1beta1.Claim.ClaimRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClaimRecord defines claim record that corresponds to the airdrop.
     * </pre>
     *
     * Protobuf type {@code crescent.claim.v1beta1.ClaimRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:crescent.claim.v1beta1.ClaimRecord)
        crescent.claim.v1beta1.Claim.ClaimRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                crescent.claim.v1beta1.Claim.ClaimRecord.class, crescent.claim.v1beta1.Claim.ClaimRecord.Builder.class);
      }

      // Construct using crescent.claim.v1beta1.Claim.ClaimRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInitialClaimableCoinsFieldBuilder();
          getClaimableCoinsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        airdropId_ = 0L;

        recipient_ = "";

        if (initialClaimableCoinsBuilder_ == null) {
          initialClaimableCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          initialClaimableCoinsBuilder_.clear();
        }
        if (claimableCoinsBuilder_ == null) {
          claimableCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          claimableCoinsBuilder_.clear();
        }
        claimedConditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return crescent.claim.v1beta1.Claim.internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor;
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.ClaimRecord getDefaultInstanceForType() {
        return crescent.claim.v1beta1.Claim.ClaimRecord.getDefaultInstance();
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.ClaimRecord build() {
        crescent.claim.v1beta1.Claim.ClaimRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public crescent.claim.v1beta1.Claim.ClaimRecord buildPartial() {
        crescent.claim.v1beta1.Claim.ClaimRecord result = new crescent.claim.v1beta1.Claim.ClaimRecord(this);
        int from_bitField0_ = bitField0_;
        result.airdropId_ = airdropId_;
        result.recipient_ = recipient_;
        if (initialClaimableCoinsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            initialClaimableCoins_ = java.util.Collections.unmodifiableList(initialClaimableCoins_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.initialClaimableCoins_ = initialClaimableCoins_;
        } else {
          result.initialClaimableCoins_ = initialClaimableCoinsBuilder_.build();
        }
        if (claimableCoinsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            claimableCoins_ = java.util.Collections.unmodifiableList(claimableCoins_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.claimableCoins_ = claimableCoins_;
        } else {
          result.claimableCoins_ = claimableCoinsBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          claimedConditions_ = java.util.Collections.unmodifiableList(claimedConditions_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.claimedConditions_ = claimedConditions_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof crescent.claim.v1beta1.Claim.ClaimRecord) {
          return mergeFrom((crescent.claim.v1beta1.Claim.ClaimRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(crescent.claim.v1beta1.Claim.ClaimRecord other) {
        if (other == crescent.claim.v1beta1.Claim.ClaimRecord.getDefaultInstance()) return this;
        if (other.getAirdropId() != 0L) {
          setAirdropId(other.getAirdropId());
        }
        if (!other.getRecipient().isEmpty()) {
          recipient_ = other.recipient_;
          onChanged();
        }
        if (initialClaimableCoinsBuilder_ == null) {
          if (!other.initialClaimableCoins_.isEmpty()) {
            if (initialClaimableCoins_.isEmpty()) {
              initialClaimableCoins_ = other.initialClaimableCoins_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInitialClaimableCoinsIsMutable();
              initialClaimableCoins_.addAll(other.initialClaimableCoins_);
            }
            onChanged();
          }
        } else {
          if (!other.initialClaimableCoins_.isEmpty()) {
            if (initialClaimableCoinsBuilder_.isEmpty()) {
              initialClaimableCoinsBuilder_.dispose();
              initialClaimableCoinsBuilder_ = null;
              initialClaimableCoins_ = other.initialClaimableCoins_;
              bitField0_ = (bitField0_ & ~0x00000001);
              initialClaimableCoinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInitialClaimableCoinsFieldBuilder() : null;
            } else {
              initialClaimableCoinsBuilder_.addAllMessages(other.initialClaimableCoins_);
            }
          }
        }
        if (claimableCoinsBuilder_ == null) {
          if (!other.claimableCoins_.isEmpty()) {
            if (claimableCoins_.isEmpty()) {
              claimableCoins_ = other.claimableCoins_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureClaimableCoinsIsMutable();
              claimableCoins_.addAll(other.claimableCoins_);
            }
            onChanged();
          }
        } else {
          if (!other.claimableCoins_.isEmpty()) {
            if (claimableCoinsBuilder_.isEmpty()) {
              claimableCoinsBuilder_.dispose();
              claimableCoinsBuilder_ = null;
              claimableCoins_ = other.claimableCoins_;
              bitField0_ = (bitField0_ & ~0x00000002);
              claimableCoinsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getClaimableCoinsFieldBuilder() : null;
            } else {
              claimableCoinsBuilder_.addAllMessages(other.claimableCoins_);
            }
          }
        }
        if (!other.claimedConditions_.isEmpty()) {
          if (claimedConditions_.isEmpty()) {
            claimedConditions_ = other.claimedConditions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureClaimedConditionsIsMutable();
            claimedConditions_.addAll(other.claimedConditions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        crescent.claim.v1beta1.Claim.ClaimRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (crescent.claim.v1beta1.Claim.ClaimRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long airdropId_ ;
      /**
       * <pre>
       * airdrop_id specifies airdrop id
       * </pre>
       *
       * <code>uint64 airdrop_id = 1;</code>
       * @return The airdropId.
       */
      @java.lang.Override
      public long getAirdropId() {
        return airdropId_;
      }
      /**
       * <pre>
       * airdrop_id specifies airdrop id
       * </pre>
       *
       * <code>uint64 airdrop_id = 1;</code>
       * @param value The airdropId to set.
       * @return This builder for chaining.
       */
      public Builder setAirdropId(long value) {
        
        airdropId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * airdrop_id specifies airdrop id
       * </pre>
       *
       * <code>uint64 airdrop_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAirdropId() {
        
        airdropId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object recipient_ = "";
      /**
       * <pre>
       * recipient specifies the bech32-encoded address that is eligible to claim airdrop
       * </pre>
       *
       * <code>string recipient = 2;</code>
       * @return The recipient.
       */
      public java.lang.String getRecipient() {
        java.lang.Object ref = recipient_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          recipient_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * recipient specifies the bech32-encoded address that is eligible to claim airdrop
       * </pre>
       *
       * <code>string recipient = 2;</code>
       * @return The bytes for recipient.
       */
      public com.google.protobuf.ByteString
          getRecipientBytes() {
        java.lang.Object ref = recipient_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          recipient_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * recipient specifies the bech32-encoded address that is eligible to claim airdrop
       * </pre>
       *
       * <code>string recipient = 2;</code>
       * @param value The recipient to set.
       * @return This builder for chaining.
       */
      public Builder setRecipient(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recipient_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * recipient specifies the bech32-encoded address that is eligible to claim airdrop
       * </pre>
       *
       * <code>string recipient = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecipient() {
        
        recipient_ = getDefaultInstance().getRecipient();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * recipient specifies the bech32-encoded address that is eligible to claim airdrop
       * </pre>
       *
       * <code>string recipient = 2;</code>
       * @param value The bytes for recipient to set.
       * @return This builder for chaining.
       */
      public Builder setRecipientBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recipient_ = value;
        onChanged();
        return this;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> initialClaimableCoins_ =
        java.util.Collections.emptyList();
      private void ensureInitialClaimableCoinsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          initialClaimableCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(initialClaimableCoins_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> initialClaimableCoinsBuilder_;

      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getInitialClaimableCoinsList() {
        if (initialClaimableCoinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(initialClaimableCoins_);
        } else {
          return initialClaimableCoinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getInitialClaimableCoinsCount() {
        if (initialClaimableCoinsBuilder_ == null) {
          return initialClaimableCoins_.size();
        } else {
          return initialClaimableCoinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getInitialClaimableCoins(int index) {
        if (initialClaimableCoinsBuilder_ == null) {
          return initialClaimableCoins_.get(index);
        } else {
          return initialClaimableCoinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setInitialClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (initialClaimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.set(index, value);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setInitialClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (initialClaimableCoinsBuilder_ == null) {
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.set(index, builderForValue.build());
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addInitialClaimableCoins(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (initialClaimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.add(value);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addInitialClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (initialClaimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.add(index, value);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addInitialClaimableCoins(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (initialClaimableCoinsBuilder_ == null) {
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.add(builderForValue.build());
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addInitialClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (initialClaimableCoinsBuilder_ == null) {
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.add(index, builderForValue.build());
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllInitialClaimableCoins(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (initialClaimableCoinsBuilder_ == null) {
          ensureInitialClaimableCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, initialClaimableCoins_);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearInitialClaimableCoins() {
        if (initialClaimableCoinsBuilder_ == null) {
          initialClaimableCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeInitialClaimableCoins(int index) {
        if (initialClaimableCoinsBuilder_ == null) {
          ensureInitialClaimableCoinsIsMutable();
          initialClaimableCoins_.remove(index);
          onChanged();
        } else {
          initialClaimableCoinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getInitialClaimableCoinsBuilder(
          int index) {
        return getInitialClaimableCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getInitialClaimableCoinsOrBuilder(
          int index) {
        if (initialClaimableCoinsBuilder_ == null) {
          return initialClaimableCoins_.get(index);  } else {
          return initialClaimableCoinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getInitialClaimableCoinsOrBuilderList() {
        if (initialClaimableCoinsBuilder_ != null) {
          return initialClaimableCoinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(initialClaimableCoins_);
        }
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addInitialClaimableCoinsBuilder() {
        return getInitialClaimableCoinsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addInitialClaimableCoinsBuilder(
          int index) {
        return getInitialClaimableCoinsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * initial_claimable_coins specifies the initial claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin initial_claimable_coins = 3 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getInitialClaimableCoinsBuilderList() {
        return getInitialClaimableCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getInitialClaimableCoinsFieldBuilder() {
        if (initialClaimableCoinsBuilder_ == null) {
          initialClaimableCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  initialClaimableCoins_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          initialClaimableCoins_ = null;
        }
        return initialClaimableCoinsBuilder_;
      }

      private java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> claimableCoins_ =
        java.util.Collections.emptyList();
      private void ensureClaimableCoinsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          claimableCoins_ = new java.util.ArrayList<cosmos.base.v1beta1.CoinOuterClass.Coin>(claimableCoins_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> claimableCoinsBuilder_;

      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin> getClaimableCoinsList() {
        if (claimableCoinsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(claimableCoins_);
        } else {
          return claimableCoinsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public int getClaimableCoinsCount() {
        if (claimableCoinsBuilder_ == null) {
          return claimableCoins_.size();
        } else {
          return claimableCoinsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin getClaimableCoins(int index) {
        if (claimableCoinsBuilder_ == null) {
          return claimableCoins_.get(index);
        } else {
          return claimableCoinsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (claimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClaimableCoinsIsMutable();
          claimableCoins_.set(index, value);
          onChanged();
        } else {
          claimableCoinsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder setClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (claimableCoinsBuilder_ == null) {
          ensureClaimableCoinsIsMutable();
          claimableCoins_.set(index, builderForValue.build());
          onChanged();
        } else {
          claimableCoinsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addClaimableCoins(cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (claimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClaimableCoinsIsMutable();
          claimableCoins_.add(value);
          onChanged();
        } else {
          claimableCoinsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin value) {
        if (claimableCoinsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClaimableCoinsIsMutable();
          claimableCoins_.add(index, value);
          onChanged();
        } else {
          claimableCoinsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addClaimableCoins(
          cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (claimableCoinsBuilder_ == null) {
          ensureClaimableCoinsIsMutable();
          claimableCoins_.add(builderForValue.build());
          onChanged();
        } else {
          claimableCoinsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addClaimableCoins(
          int index, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder builderForValue) {
        if (claimableCoinsBuilder_ == null) {
          ensureClaimableCoinsIsMutable();
          claimableCoins_.add(index, builderForValue.build());
          onChanged();
        } else {
          claimableCoinsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder addAllClaimableCoins(
          java.lang.Iterable<? extends cosmos.base.v1beta1.CoinOuterClass.Coin> values) {
        if (claimableCoinsBuilder_ == null) {
          ensureClaimableCoinsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, claimableCoins_);
          onChanged();
        } else {
          claimableCoinsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder clearClaimableCoins() {
        if (claimableCoinsBuilder_ == null) {
          claimableCoins_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          claimableCoinsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public Builder removeClaimableCoins(int index) {
        if (claimableCoinsBuilder_ == null) {
          ensureClaimableCoinsIsMutable();
          claimableCoins_.remove(index);
          onChanged();
        } else {
          claimableCoinsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder getClaimableCoinsBuilder(
          int index) {
        return getClaimableCoinsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder getClaimableCoinsOrBuilder(
          int index) {
        if (claimableCoinsBuilder_ == null) {
          return claimableCoins_.get(index);  } else {
          return claimableCoinsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<? extends cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
           getClaimableCoinsOrBuilderList() {
        if (claimableCoinsBuilder_ != null) {
          return claimableCoinsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(claimableCoins_);
        }
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addClaimableCoinsBuilder() {
        return getClaimableCoinsFieldBuilder().addBuilder(
            cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public cosmos.base.v1beta1.CoinOuterClass.Coin.Builder addClaimableCoinsBuilder(
          int index) {
        return getClaimableCoinsFieldBuilder().addBuilder(
            index, cosmos.base.v1beta1.CoinOuterClass.Coin.getDefaultInstance());
      }
      /**
       * <pre>
       * claimable_coins specifies the unclaimed claimable coins
       * </pre>
       *
       * <code>repeated .cosmos.base.v1beta1.Coin claimable_coins = 4 [(.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];</code>
       */
      public java.util.List<cosmos.base.v1beta1.CoinOuterClass.Coin.Builder> 
           getClaimableCoinsBuilderList() {
        return getClaimableCoinsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder> 
          getClaimableCoinsFieldBuilder() {
        if (claimableCoinsBuilder_ == null) {
          claimableCoinsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cosmos.base.v1beta1.CoinOuterClass.Coin, cosmos.base.v1beta1.CoinOuterClass.Coin.Builder, cosmos.base.v1beta1.CoinOuterClass.CoinOrBuilder>(
                  claimableCoins_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          claimableCoins_ = null;
        }
        return claimableCoinsBuilder_;
      }

      private java.util.List<java.lang.Integer> claimedConditions_ =
        java.util.Collections.emptyList();
      private void ensureClaimedConditionsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          claimedConditions_ = new java.util.ArrayList<java.lang.Integer>(claimedConditions_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @return A list containing the claimedConditions.
       */
      public java.util.List<crescent.claim.v1beta1.Claim.ConditionType> getClaimedConditionsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, crescent.claim.v1beta1.Claim.ConditionType>(claimedConditions_, claimedConditions_converter_);
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @return The count of claimedConditions.
       */
      public int getClaimedConditionsCount() {
        return claimedConditions_.size();
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param index The index of the element to return.
       * @return The claimedConditions at the given index.
       */
      public crescent.claim.v1beta1.Claim.ConditionType getClaimedConditions(int index) {
        return claimedConditions_converter_.convert(claimedConditions_.get(index));
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param index The index to set the value at.
       * @param value The claimedConditions to set.
       * @return This builder for chaining.
       */
      public Builder setClaimedConditions(
          int index, crescent.claim.v1beta1.Claim.ConditionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClaimedConditionsIsMutable();
        claimedConditions_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param value The claimedConditions to add.
       * @return This builder for chaining.
       */
      public Builder addClaimedConditions(crescent.claim.v1beta1.Claim.ConditionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClaimedConditionsIsMutable();
        claimedConditions_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param values The claimedConditions to add.
       * @return This builder for chaining.
       */
      public Builder addAllClaimedConditions(
          java.lang.Iterable<? extends crescent.claim.v1beta1.Claim.ConditionType> values) {
        ensureClaimedConditionsIsMutable();
        for (crescent.claim.v1beta1.Claim.ConditionType value : values) {
          claimedConditions_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaimedConditions() {
        claimedConditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @return A list containing the enum numeric values on the wire for claimedConditions.
       */
      public java.util.List<java.lang.Integer>
      getClaimedConditionsValueList() {
        return java.util.Collections.unmodifiableList(claimedConditions_);
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of claimedConditions at the given index.
       */
      public int getClaimedConditionsValue(int index) {
        return claimedConditions_.get(index);
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of claimedConditions at the given index.
       * @return This builder for chaining.
       */
      public Builder setClaimedConditionsValue(
          int index, int value) {
        ensureClaimedConditionsIsMutable();
        claimedConditions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param value The enum numeric value on the wire for claimedConditions to add.
       * @return This builder for chaining.
       */
      public Builder addClaimedConditionsValue(int value) {
        ensureClaimedConditionsIsMutable();
        claimedConditions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * claimed_conditions specifies a list of condition types
       * initial values are empty and each condition type gets appended when claim is successfully executed
       * </pre>
       *
       * <code>repeated .crescent.claim.v1beta1.ConditionType claimed_conditions = 5;</code>
       * @param values The enum numeric values on the wire for claimedConditions to add.
       * @return This builder for chaining.
       */
      public Builder addAllClaimedConditionsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureClaimedConditionsIsMutable();
        for (int value : values) {
          claimedConditions_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:crescent.claim.v1beta1.ClaimRecord)
    }

    // @@protoc_insertion_point(class_scope:crescent.claim.v1beta1.ClaimRecord)
    private static final crescent.claim.v1beta1.Claim.ClaimRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new crescent.claim.v1beta1.Claim.ClaimRecord();
    }

    public static crescent.claim.v1beta1.Claim.ClaimRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClaimRecord>
        PARSER = new com.google.protobuf.AbstractParser<ClaimRecord>() {
      @java.lang.Override
      public ClaimRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClaimRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClaimRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClaimRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public crescent.claim.v1beta1.Claim.ClaimRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_claim_v1beta1_Airdrop_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"crescent/claim/v1beta1/claim.proto\022\026cr" +
      "escent.claim.v1beta1\032\024gogoproto/gogo.pro" +
      "to\032\037google/protobuf/timestamp.proto\032\036cos" +
      "mos/base/v1beta1/coin.proto\"\332\001\n\007Airdrop\022" +
      "\n\n\002id\030\001 \001(\004\022\026\n\016source_address\030\002 \001(\t\0229\n\nc" +
      "onditions\030\003 \003(\0162%.crescent.claim.v1beta1" +
      ".ConditionType\0228\n\nstart_time\030\004 \001(\0132\032.goo" +
      "gle.protobuf.TimestampB\010\220\337\037\001\310\336\037\000\0226\n\010end_" +
      "time\030\005 \001(\0132\032.google.protobuf.TimestampB\010" +
      "\220\337\037\001\310\336\037\000\"\313\002\n\013ClaimRecord\022\022\n\nairdrop_id\030\001" +
      " \001(\004\022\021\n\trecipient\030\002 \001(\t\022l\n\027initial_claim" +
      "able_coins\030\003 \003(\0132\031.cosmos.base.v1beta1.C" +
      "oinB0\252\337\037(github.com/cosmos/cosmos-sdk/ty" +
      "pes.Coins\310\336\037\000\022d\n\017claimable_coins\030\004 \003(\0132\031" +
      ".cosmos.base.v1beta1.CoinB0\252\337\037(github.co" +
      "m/cosmos/cosmos-sdk/types.Coins\310\336\037\000\022A\n\022c" +
      "laimed_conditions\030\005 \003(\0162%.crescent.claim" +
      ".v1beta1.ConditionType*\247\002\n\rConditionType" +
      "\022<\n\032CONDITION_TYPE_UNSPECIFIED\020\000\032\034\212\235 \030Co" +
      "nditionTypeUnspecified\0224\n\026CONDITION_TYPE" +
      "_DEPOSIT\020\001\032\030\212\235 \024ConditionTypeDeposit\022.\n\023" +
      "CONDITION_TYPE_SWAP\020\002\032\025\212\235 \021ConditionType" +
      "Swap\022<\n\032CONDITION_TYPE_LIQUIDSTAKE\020\003\032\034\212\235" +
      " \030ConditionTypeLiquidStake\022.\n\023CONDITION_" +
      "TYPE_VOTE\020\004\032\025\212\235 \021ConditionTypeVote\032\004\210\243\036\000" +
      "B8Z2github.com/crescent-network/crescent" +
      "/x/claim/types\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          cosmos.base.v1beta1.CoinOuterClass.getDescriptor(),
        });
    internal_static_crescent_claim_v1beta1_Airdrop_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_crescent_claim_v1beta1_Airdrop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_claim_v1beta1_Airdrop_descriptor,
        new java.lang.String[] { "Id", "SourceAddress", "Conditions", "StartTime", "EndTime", });
    internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_crescent_claim_v1beta1_ClaimRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_crescent_claim_v1beta1_ClaimRecord_descriptor,
        new java.lang.String[] { "AirdropId", "Recipient", "InitialClaimableCoins", "ClaimableCoins", "ClaimedConditions", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.castrepeated);
    registry.add(com.google.protobuf2.GoGoProtos.enumvalueCustomname);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumPrefix);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGettersAll);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    cosmos.base.v1beta1.CoinOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
