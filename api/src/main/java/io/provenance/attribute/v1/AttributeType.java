// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/attribute/v1/attribute.proto

package io.provenance.attribute.v1;

/**
 * <pre>
 * AttributeType defines the type of the data stored in the attribute value
 * </pre>
 *
 * Protobuf enum {@code provenance.attribute.v1.AttributeType}
 */
public enum AttributeType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * ATTRIBUTE_TYPE_UNSPECIFIED defines an unknown/invalid type
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
   */
  ATTRIBUTE_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_UUID defines an attribute value that contains a string value representation of a V4 uuid
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_UUID = 1 [(.gogoproto.enumvalue_customname) = "UUID"];</code>
   */
  ATTRIBUTE_TYPE_UUID(1),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_JSON defines an attribute value that contains a byte string containing json data
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_JSON = 2 [(.gogoproto.enumvalue_customname) = "JSON"];</code>
   */
  ATTRIBUTE_TYPE_JSON(2),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_STRING defines an attribute value that contains a generic string value
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_STRING = 3 [(.gogoproto.enumvalue_customname) = "String"];</code>
   */
  ATTRIBUTE_TYPE_STRING(3),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_URI defines an attribute value that contains a URI
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_URI = 4 [(.gogoproto.enumvalue_customname) = "Uri"];</code>
   */
  ATTRIBUTE_TYPE_URI(4),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_INT defines an attribute value that contains an integer (cast as int64)
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_INT = 5 [(.gogoproto.enumvalue_customname) = "Int"];</code>
   */
  ATTRIBUTE_TYPE_INT(5),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_FLOAT defines an attribute value that contains a float
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_FLOAT = 6 [(.gogoproto.enumvalue_customname) = "Float"];</code>
   */
  ATTRIBUTE_TYPE_FLOAT(6),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_PROTO defines an attribute value that contains a serialized proto value in bytes
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_PROTO = 7 [(.gogoproto.enumvalue_customname) = "Proto"];</code>
   */
  ATTRIBUTE_TYPE_PROTO(7),
  /**
   * <pre>
   * ATTRIBUTE_TYPE_BYTES defines an attribute value that contains an untyped array of bytes
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_BYTES = 8 [(.gogoproto.enumvalue_customname) = "Bytes"];</code>
   */
  ATTRIBUTE_TYPE_BYTES(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * ATTRIBUTE_TYPE_UNSPECIFIED defines an unknown/invalid type
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
   */
  public static final int ATTRIBUTE_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_UUID defines an attribute value that contains a string value representation of a V4 uuid
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_UUID = 1 [(.gogoproto.enumvalue_customname) = "UUID"];</code>
   */
  public static final int ATTRIBUTE_TYPE_UUID_VALUE = 1;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_JSON defines an attribute value that contains a byte string containing json data
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_JSON = 2 [(.gogoproto.enumvalue_customname) = "JSON"];</code>
   */
  public static final int ATTRIBUTE_TYPE_JSON_VALUE = 2;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_STRING defines an attribute value that contains a generic string value
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_STRING = 3 [(.gogoproto.enumvalue_customname) = "String"];</code>
   */
  public static final int ATTRIBUTE_TYPE_STRING_VALUE = 3;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_URI defines an attribute value that contains a URI
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_URI = 4 [(.gogoproto.enumvalue_customname) = "Uri"];</code>
   */
  public static final int ATTRIBUTE_TYPE_URI_VALUE = 4;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_INT defines an attribute value that contains an integer (cast as int64)
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_INT = 5 [(.gogoproto.enumvalue_customname) = "Int"];</code>
   */
  public static final int ATTRIBUTE_TYPE_INT_VALUE = 5;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_FLOAT defines an attribute value that contains a float
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_FLOAT = 6 [(.gogoproto.enumvalue_customname) = "Float"];</code>
   */
  public static final int ATTRIBUTE_TYPE_FLOAT_VALUE = 6;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_PROTO defines an attribute value that contains a serialized proto value in bytes
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_PROTO = 7 [(.gogoproto.enumvalue_customname) = "Proto"];</code>
   */
  public static final int ATTRIBUTE_TYPE_PROTO_VALUE = 7;
  /**
   * <pre>
   * ATTRIBUTE_TYPE_BYTES defines an attribute value that contains an untyped array of bytes
   * </pre>
   *
   * <code>ATTRIBUTE_TYPE_BYTES = 8 [(.gogoproto.enumvalue_customname) = "Bytes"];</code>
   */
  public static final int ATTRIBUTE_TYPE_BYTES_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AttributeType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AttributeType forNumber(int value) {
    switch (value) {
      case 0: return ATTRIBUTE_TYPE_UNSPECIFIED;
      case 1: return ATTRIBUTE_TYPE_UUID;
      case 2: return ATTRIBUTE_TYPE_JSON;
      case 3: return ATTRIBUTE_TYPE_STRING;
      case 4: return ATTRIBUTE_TYPE_URI;
      case 5: return ATTRIBUTE_TYPE_INT;
      case 6: return ATTRIBUTE_TYPE_FLOAT;
      case 7: return ATTRIBUTE_TYPE_PROTO;
      case 8: return ATTRIBUTE_TYPE_BYTES;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AttributeType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AttributeType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AttributeType>() {
          public AttributeType findValueByNumber(int number) {
            return AttributeType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.provenance.attribute.v1.AttributeOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final AttributeType[] VALUES = values();

  public static AttributeType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AttributeType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:provenance.attribute.v1.AttributeType)
}

