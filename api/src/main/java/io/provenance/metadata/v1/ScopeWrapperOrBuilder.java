// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/query.proto

package io.provenance.metadata.v1;

public interface ScopeWrapperOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.ScopeWrapper)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1;</code>
   * @return Whether the scope field is set.
   */
  boolean hasScope();
  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1;</code>
   * @return The scope.
   */
  io.provenance.metadata.v1.Scope getScope();
  /**
   * <pre>
   * scope is the on-chain scope message.
   * </pre>
   *
   * <code>.provenance.metadata.v1.Scope scope = 1;</code>
   */
  io.provenance.metadata.v1.ScopeOrBuilder getScopeOrBuilder();

  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [(.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   * @return Whether the scopeIdInfo field is set.
   */
  boolean hasScopeIdInfo();
  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [(.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   * @return The scopeIdInfo.
   */
  io.provenance.metadata.v1.ScopeIdInfo getScopeIdInfo();
  /**
   * <pre>
   * scope_id_info contains information about the id/address of the scope.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeIdInfo scope_id_info = 2 [(.gogoproto.moretags) = "yaml:&#92;"scope_id_info&#92;""];</code>
   */
  io.provenance.metadata.v1.ScopeIdInfoOrBuilder getScopeIdInfoOrBuilder();

  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [(.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   * @return Whether the scopeSpecIdInfo field is set.
   */
  boolean hasScopeSpecIdInfo();
  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [(.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   * @return The scopeSpecIdInfo.
   */
  io.provenance.metadata.v1.ScopeSpecIdInfo getScopeSpecIdInfo();
  /**
   * <pre>
   * scope_spec_id_info contains information about the id/address of the scope specification.
   * </pre>
   *
   * <code>.provenance.metadata.v1.ScopeSpecIdInfo scope_spec_id_info = 3 [(.gogoproto.moretags) = "yaml:&#92;"scope_spec_id_info&#92;""];</code>
   */
  io.provenance.metadata.v1.ScopeSpecIdInfoOrBuilder getScopeSpecIdInfoOrBuilder();
}
