// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/p8e/p8e.proto

package io.provenance.metadata.v1.p8e;

public interface ConsiderationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.p8e.Consideration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string consideration_name = 1;</code>
   * @return The considerationName.
   */
  java.lang.String getConsiderationName();
  /**
   * <code>string consideration_name = 1;</code>
   * @return The bytes for considerationName.
   */
  com.google.protobuf.ByteString
      getConsiderationNameBytes();

  /**
   * <pre>
   * Data pushed to a consideration that will ultimately match the output_spec of the consideration
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.p8e.ProposedFact inputs = 2;</code>
   */
  java.util.List<io.provenance.metadata.v1.p8e.ProposedFact> 
      getInputsList();
  /**
   * <pre>
   * Data pushed to a consideration that will ultimately match the output_spec of the consideration
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.p8e.ProposedFact inputs = 2;</code>
   */
  io.provenance.metadata.v1.p8e.ProposedFact getInputs(int index);
  /**
   * <pre>
   * Data pushed to a consideration that will ultimately match the output_spec of the consideration
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.p8e.ProposedFact inputs = 2;</code>
   */
  int getInputsCount();
  /**
   * <pre>
   * Data pushed to a consideration that will ultimately match the output_spec of the consideration
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.p8e.ProposedFact inputs = 2;</code>
   */
  java.util.List<? extends io.provenance.metadata.v1.p8e.ProposedFactOrBuilder> 
      getInputsOrBuilderList();
  /**
   * <pre>
   * Data pushed to a consideration that will ultimately match the output_spec of the consideration
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.p8e.ProposedFact inputs = 2;</code>
   */
  io.provenance.metadata.v1.p8e.ProposedFactOrBuilder getInputsOrBuilder(
      int index);

  /**
   * <code>.provenance.metadata.v1.p8e.ExecutionResult result = 3;</code>
   * @return Whether the result field is set.
   */
  boolean hasResult();
  /**
   * <code>.provenance.metadata.v1.p8e.ExecutionResult result = 3;</code>
   * @return The result.
   */
  io.provenance.metadata.v1.p8e.ExecutionResult getResult();
  /**
   * <code>.provenance.metadata.v1.p8e.ExecutionResult result = 3;</code>
   */
  io.provenance.metadata.v1.p8e.ExecutionResultOrBuilder getResultOrBuilder();
}
