// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/scope.proto

package io.provenance.metadata.v1;

public interface RecordInputOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.RecordInput)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name value included to link back to the definition spec.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name value included to link back to the definition spec.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * the address of a record on chain (For Established Records)
   * </pre>
   *
   * <code>bytes record_id = 2 [(.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"record_id&#92;""];</code>
   * @return Whether the recordId field is set.
   */
  boolean hasRecordId();
  /**
   * <pre>
   * the address of a record on chain (For Established Records)
   * </pre>
   *
   * <code>bytes record_id = 2 [(.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"record_id&#92;""];</code>
   * @return The recordId.
   */
  com.google.protobuf.ByteString getRecordId();

  /**
   * <pre>
   * the hash of an off-chain piece of information (For Proposed Records)
   * </pre>
   *
   * <code>string hash = 3;</code>
   * @return Whether the hash field is set.
   */
  boolean hasHash();
  /**
   * <pre>
   * the hash of an off-chain piece of information (For Proposed Records)
   * </pre>
   *
   * <code>string hash = 3;</code>
   * @return The hash.
   */
  java.lang.String getHash();
  /**
   * <pre>
   * the hash of an off-chain piece of information (For Proposed Records)
   * </pre>
   *
   * <code>string hash = 3;</code>
   * @return The bytes for hash.
   */
  com.google.protobuf.ByteString
      getHashBytes();

  /**
   * <pre>
   * from proposed fact structure to unmarshal
   * </pre>
   *
   * <code>string type_name = 4 [(.gogoproto.moretags) = "yaml:&#92;"type_name&#92;""];</code>
   * @return The typeName.
   */
  java.lang.String getTypeName();
  /**
   * <pre>
   * from proposed fact structure to unmarshal
   * </pre>
   *
   * <code>string type_name = 4 [(.gogoproto.moretags) = "yaml:&#92;"type_name&#92;""];</code>
   * @return The bytes for typeName.
   */
  com.google.protobuf.ByteString
      getTypeNameBytes();

  /**
   * <pre>
   * Indicates if this input was a recorded fact on chain or just a given hashed input
   * </pre>
   *
   * <code>.provenance.metadata.v1.RecordInputStatus status = 5;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * Indicates if this input was a recorded fact on chain or just a given hashed input
   * </pre>
   *
   * <code>.provenance.metadata.v1.RecordInputStatus status = 5;</code>
   * @return The status.
   */
  io.provenance.metadata.v1.RecordInputStatus getStatus();

  public io.provenance.metadata.v1.RecordInput.SourceCase getSourceCase();
}
