// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/p8e/p8e.proto

package io.provenance.metadata.v1.p8e;

/**
 * Protobuf type {@code provenance.metadata.v1.p8e.PublicKey}
 */
public final class PublicKey extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.metadata.v1.p8e.PublicKey)
    PublicKeyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PublicKey.newBuilder() to construct.
  private PublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PublicKey() {
    publicKeyBytes_ = com.google.protobuf.ByteString.EMPTY;
    type_ = 0;
    curve_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PublicKey();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PublicKey(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {

            publicKeyBytes_ = input.readBytes();
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            curve_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.provenance.metadata.v1.p8e.P8E.internal_static_provenance_metadata_v1_p8e_PublicKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.provenance.metadata.v1.p8e.P8E.internal_static_provenance_metadata_v1_p8e_PublicKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.provenance.metadata.v1.p8e.PublicKey.class, io.provenance.metadata.v1.p8e.PublicKey.Builder.class);
  }

  public static final int PUBLIC_KEY_BYTES_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString publicKeyBytes_;
  /**
   * <code>bytes public_key_bytes = 1;</code>
   * @return The publicKeyBytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getPublicKeyBytes() {
    return publicKeyBytes_;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_;
  /**
   * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
   * @return The type.
   */
  @java.lang.Override public io.provenance.metadata.v1.p8e.PublicKeyType getType() {
    @SuppressWarnings("deprecation")
    io.provenance.metadata.v1.p8e.PublicKeyType result = io.provenance.metadata.v1.p8e.PublicKeyType.valueOf(type_);
    return result == null ? io.provenance.metadata.v1.p8e.PublicKeyType.UNRECOGNIZED : result;
  }

  public static final int CURVE_FIELD_NUMBER = 3;
  private int curve_;
  /**
   * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
   * @return The enum numeric value on the wire for curve.
   */
  @java.lang.Override public int getCurveValue() {
    return curve_;
  }
  /**
   * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
   * @return The curve.
   */
  @java.lang.Override public io.provenance.metadata.v1.p8e.PublicKeyCurve getCurve() {
    @SuppressWarnings("deprecation")
    io.provenance.metadata.v1.p8e.PublicKeyCurve result = io.provenance.metadata.v1.p8e.PublicKeyCurve.valueOf(curve_);
    return result == null ? io.provenance.metadata.v1.p8e.PublicKeyCurve.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!publicKeyBytes_.isEmpty()) {
      output.writeBytes(1, publicKeyBytes_);
    }
    if (type_ != io.provenance.metadata.v1.p8e.PublicKeyType.ELLIPTIC.getNumber()) {
      output.writeEnum(2, type_);
    }
    if (curve_ != io.provenance.metadata.v1.p8e.PublicKeyCurve.SECP256K1.getNumber()) {
      output.writeEnum(3, curve_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!publicKeyBytes_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, publicKeyBytes_);
    }
    if (type_ != io.provenance.metadata.v1.p8e.PublicKeyType.ELLIPTIC.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (curve_ != io.provenance.metadata.v1.p8e.PublicKeyCurve.SECP256K1.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, curve_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.provenance.metadata.v1.p8e.PublicKey)) {
      return super.equals(obj);
    }
    io.provenance.metadata.v1.p8e.PublicKey other = (io.provenance.metadata.v1.p8e.PublicKey) obj;

    if (!getPublicKeyBytes()
        .equals(other.getPublicKeyBytes())) return false;
    if (type_ != other.type_) return false;
    if (curve_ != other.curve_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PUBLIC_KEY_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getPublicKeyBytes().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + CURVE_FIELD_NUMBER;
    hash = (53 * hash) + curve_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provenance.metadata.v1.p8e.PublicKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.provenance.metadata.v1.p8e.PublicKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code provenance.metadata.v1.p8e.PublicKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.metadata.v1.p8e.PublicKey)
      io.provenance.metadata.v1.p8e.PublicKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.provenance.metadata.v1.p8e.P8E.internal_static_provenance_metadata_v1_p8e_PublicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.provenance.metadata.v1.p8e.P8E.internal_static_provenance_metadata_v1_p8e_PublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.provenance.metadata.v1.p8e.PublicKey.class, io.provenance.metadata.v1.p8e.PublicKey.Builder.class);
    }

    // Construct using io.provenance.metadata.v1.p8e.PublicKey.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      publicKeyBytes_ = com.google.protobuf.ByteString.EMPTY;

      type_ = 0;

      curve_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.provenance.metadata.v1.p8e.P8E.internal_static_provenance_metadata_v1_p8e_PublicKey_descriptor;
    }

    @java.lang.Override
    public io.provenance.metadata.v1.p8e.PublicKey getDefaultInstanceForType() {
      return io.provenance.metadata.v1.p8e.PublicKey.getDefaultInstance();
    }

    @java.lang.Override
    public io.provenance.metadata.v1.p8e.PublicKey build() {
      io.provenance.metadata.v1.p8e.PublicKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.provenance.metadata.v1.p8e.PublicKey buildPartial() {
      io.provenance.metadata.v1.p8e.PublicKey result = new io.provenance.metadata.v1.p8e.PublicKey(this);
      result.publicKeyBytes_ = publicKeyBytes_;
      result.type_ = type_;
      result.curve_ = curve_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.provenance.metadata.v1.p8e.PublicKey) {
        return mergeFrom((io.provenance.metadata.v1.p8e.PublicKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.provenance.metadata.v1.p8e.PublicKey other) {
      if (other == io.provenance.metadata.v1.p8e.PublicKey.getDefaultInstance()) return this;
      if (other.getPublicKeyBytes() != com.google.protobuf.ByteString.EMPTY) {
        setPublicKeyBytes(other.getPublicKeyBytes());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.curve_ != 0) {
        setCurveValue(other.getCurveValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.provenance.metadata.v1.p8e.PublicKey parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.provenance.metadata.v1.p8e.PublicKey) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.ByteString publicKeyBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes public_key_bytes = 1;</code>
     * @return The publicKeyBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPublicKeyBytes() {
      return publicKeyBytes_;
    }
    /**
     * <code>bytes public_key_bytes = 1;</code>
     * @param value The publicKeyBytes to set.
     * @return This builder for chaining.
     */
    public Builder setPublicKeyBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      publicKeyBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bytes public_key_bytes = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPublicKeyBytes() {
      
      publicKeyBytes_ = getDefaultInstance().getPublicKeyBytes();
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public io.provenance.metadata.v1.p8e.PublicKeyType getType() {
      @SuppressWarnings("deprecation")
      io.provenance.metadata.v1.p8e.PublicKeyType result = io.provenance.metadata.v1.p8e.PublicKeyType.valueOf(type_);
      return result == null ? io.provenance.metadata.v1.p8e.PublicKeyType.UNRECOGNIZED : result;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(io.provenance.metadata.v1.p8e.PublicKeyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyType type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private int curve_ = 0;
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
     * @return The enum numeric value on the wire for curve.
     */
    @java.lang.Override public int getCurveValue() {
      return curve_;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
     * @param value The enum numeric value on the wire for curve to set.
     * @return This builder for chaining.
     */
    public Builder setCurveValue(int value) {
      
      curve_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
     * @return The curve.
     */
    @java.lang.Override
    public io.provenance.metadata.v1.p8e.PublicKeyCurve getCurve() {
      @SuppressWarnings("deprecation")
      io.provenance.metadata.v1.p8e.PublicKeyCurve result = io.provenance.metadata.v1.p8e.PublicKeyCurve.valueOf(curve_);
      return result == null ? io.provenance.metadata.v1.p8e.PublicKeyCurve.UNRECOGNIZED : result;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
     * @param value The curve to set.
     * @return This builder for chaining.
     */
    public Builder setCurve(io.provenance.metadata.v1.p8e.PublicKeyCurve value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      curve_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.provenance.metadata.v1.p8e.PublicKeyCurve curve = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCurve() {
      
      curve_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.metadata.v1.p8e.PublicKey)
  }

  // @@protoc_insertion_point(class_scope:provenance.metadata.v1.p8e.PublicKey)
  private static final io.provenance.metadata.v1.p8e.PublicKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.provenance.metadata.v1.p8e.PublicKey();
  }

  public static io.provenance.metadata.v1.p8e.PublicKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PublicKey>
      PARSER = new com.google.protobuf.AbstractParser<PublicKey>() {
    @java.lang.Override
    public PublicKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PublicKey(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PublicKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PublicKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.provenance.metadata.v1.p8e.PublicKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

