// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/p8e/p8e.proto

package io.provenance.metadata.v1.p8e;

public interface SignatureOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.p8e.Signature)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Signature Detail
   * </pre>
   *
   * <code>string algo = 1;</code>
   * @return The algo.
   */
  java.lang.String getAlgo();
  /**
   * <pre>
   * Signature Detail
   * </pre>
   *
   * <code>string algo = 1;</code>
   * @return The bytes for algo.
   */
  com.google.protobuf.ByteString
      getAlgoBytes();

  /**
   * <code>string provider = 2;</code>
   * @return The provider.
   */
  java.lang.String getProvider();
  /**
   * <code>string provider = 2;</code>
   * @return The bytes for provider.
   */
  com.google.protobuf.ByteString
      getProviderBytes();

  /**
   * <code>string signature = 3;</code>
   * @return The signature.
   */
  java.lang.String getSignature();
  /**
   * <code>string signature = 3;</code>
   * @return The bytes for signature.
   */
  com.google.protobuf.ByteString
      getSignatureBytes();

  /**
   * <pre>
   * Identity of signer
   * </pre>
   *
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4;</code>
   * @return Whether the signer field is set.
   */
  boolean hasSigner();
  /**
   * <pre>
   * Identity of signer
   * </pre>
   *
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4;</code>
   * @return The signer.
   */
  io.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys getSigner();
  /**
   * <pre>
   * Identity of signer
   * </pre>
   *
   * <code>.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeys signer = 4;</code>
   */
  io.provenance.metadata.v1.p8e.SigningAndEncryptionPublicKeysOrBuilder getSignerOrBuilder();
}
