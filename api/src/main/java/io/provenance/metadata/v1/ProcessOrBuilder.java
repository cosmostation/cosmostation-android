// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/scope.proto

package io.provenance.metadata.v1;

public interface ProcessOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.Process)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the address of a smart contract used for this process
   * </pre>
   *
   * <code>string address = 1;</code>
   * @return Whether the address field is set.
   */
  boolean hasAddress();
  /**
   * <pre>
   * the address of a smart contract used for this process
   * </pre>
   *
   * <code>string address = 1;</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * the address of a smart contract used for this process
   * </pre>
   *
   * <code>string address = 1;</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * the hash of an off-chain process used
   * </pre>
   *
   * <code>string hash = 2;</code>
   * @return Whether the hash field is set.
   */
  boolean hasHash();
  /**
   * <pre>
   * the hash of an off-chain process used
   * </pre>
   *
   * <code>string hash = 2;</code>
   * @return The hash.
   */
  java.lang.String getHash();
  /**
   * <pre>
   * the hash of an off-chain process used
   * </pre>
   *
   * <code>string hash = 2;</code>
   * @return The bytes for hash.
   */
  com.google.protobuf.ByteString
      getHashBytes();

  /**
   * <pre>
   * a name associated with the process (type_name, classname or smart contract common name)
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * a name associated with the process (type_name, classname or smart contract common name)
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * method is a name or reference to a specific operation (method) within a class/contract that was invoked
   * </pre>
   *
   * <code>string method = 4;</code>
   * @return The method.
   */
  java.lang.String getMethod();
  /**
   * <pre>
   * method is a name or reference to a specific operation (method) within a class/contract that was invoked
   * </pre>
   *
   * <code>string method = 4;</code>
   * @return The bytes for method.
   */
  com.google.protobuf.ByteString
      getMethodBytes();

  public io.provenance.metadata.v1.Process.ProcessIdCase getProcessIdCase();
}
