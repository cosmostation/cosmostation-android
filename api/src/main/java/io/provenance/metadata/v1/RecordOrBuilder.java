// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/scope.proto

package io.provenance.metadata.v1;

public interface RecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.metadata.v1.Record)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * name/identifier for this record.  Value must be unique within the scope.  Also known as a Fact name
   * </pre>
   *
   * <code>string name = 1 [(.gogoproto.jsontag) = "id", (.gogoproto.moretags) = "yaml:&#92;"id&#92;""];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name/identifier for this record.  Value must be unique within the scope.  Also known as a Fact name
   * </pre>
   *
   * <code>string name = 1 [(.gogoproto.jsontag) = "id", (.gogoproto.moretags) = "yaml:&#92;"id&#92;""];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * id of the session context that was used to create this record (use with filtered kvprefix iterator)
   * </pre>
   *
   * <code>bytes session_id = 2 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"session_id&#92;""];</code>
   * @return The sessionId.
   */
  com.google.protobuf.ByteString getSessionId();

  /**
   * <pre>
   * process contain information used to uniquely identify an execution on or off chain that generated this record
   * </pre>
   *
   * <code>.provenance.metadata.v1.Process process = 3 [(.gogoproto.nullable) = false];</code>
   * @return Whether the process field is set.
   */
  boolean hasProcess();
  /**
   * <pre>
   * process contain information used to uniquely identify an execution on or off chain that generated this record
   * </pre>
   *
   * <code>.provenance.metadata.v1.Process process = 3 [(.gogoproto.nullable) = false];</code>
   * @return The process.
   */
  io.provenance.metadata.v1.Process getProcess();
  /**
   * <pre>
   * process contain information used to uniquely identify an execution on or off chain that generated this record
   * </pre>
   *
   * <code>.provenance.metadata.v1.Process process = 3 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.metadata.v1.ProcessOrBuilder getProcessOrBuilder();

  /**
   * <pre>
   * inputs used with the process to achieve the output on this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordInput inputs = 4 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<io.provenance.metadata.v1.RecordInput> 
      getInputsList();
  /**
   * <pre>
   * inputs used with the process to achieve the output on this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordInput inputs = 4 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.metadata.v1.RecordInput getInputs(int index);
  /**
   * <pre>
   * inputs used with the process to achieve the output on this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordInput inputs = 4 [(.gogoproto.nullable) = false];</code>
   */
  int getInputsCount();
  /**
   * <pre>
   * inputs used with the process to achieve the output on this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordInput inputs = 4 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends io.provenance.metadata.v1.RecordInputOrBuilder> 
      getInputsOrBuilderList();
  /**
   * <pre>
   * inputs used with the process to achieve the output on this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordInput inputs = 4 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.metadata.v1.RecordInputOrBuilder getInputsOrBuilder(
      int index);

  /**
   * <pre>
   * output(s) is the results of executing the process on the given process indicated in this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordOutput outputs = 5 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<io.provenance.metadata.v1.RecordOutput> 
      getOutputsList();
  /**
   * <pre>
   * output(s) is the results of executing the process on the given process indicated in this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordOutput outputs = 5 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.metadata.v1.RecordOutput getOutputs(int index);
  /**
   * <pre>
   * output(s) is the results of executing the process on the given process indicated in this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordOutput outputs = 5 [(.gogoproto.nullable) = false];</code>
   */
  int getOutputsCount();
  /**
   * <pre>
   * output(s) is the results of executing the process on the given process indicated in this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordOutput outputs = 5 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends io.provenance.metadata.v1.RecordOutputOrBuilder> 
      getOutputsOrBuilderList();
  /**
   * <pre>
   * output(s) is the results of executing the process on the given process indicated in this record
   * </pre>
   *
   * <code>repeated .provenance.metadata.v1.RecordOutput outputs = 5 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.metadata.v1.RecordOutputOrBuilder getOutputsOrBuilder(
      int index);

  /**
   * <pre>
   * specification_id is the id of the record specification that was used to create this record.
   * </pre>
   *
   * <code>bytes specification_id = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "MetadataAddress", (.gogoproto.moretags) = "yaml:&#92;"specification_id&#92;""];</code>
   * @return The specificationId.
   */
  com.google.protobuf.ByteString getSpecificationId();
}
