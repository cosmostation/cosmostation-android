// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/metadata/v1/specification.proto

package io.provenance.metadata.v1;

/**
 * <pre>
 * PartyType are the different roles parties on a contract may use
 * </pre>
 *
 * Protobuf enum {@code provenance.metadata.v1.PartyType}
 */
public enum PartyType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * PARTY_TYPE_UNSPECIFIED is an error condition
   * </pre>
   *
   * <code>PARTY_TYPE_UNSPECIFIED = 0;</code>
   */
  PARTY_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * PARTY_TYPE_ORIGINATOR is an asset originator
   * </pre>
   *
   * <code>PARTY_TYPE_ORIGINATOR = 1;</code>
   */
  PARTY_TYPE_ORIGINATOR(1),
  /**
   * <pre>
   * PARTY_TYPE_SERVICER provides debt servicing functions
   * </pre>
   *
   * <code>PARTY_TYPE_SERVICER = 2;</code>
   */
  PARTY_TYPE_SERVICER(2),
  /**
   * <pre>
   * PARTY_TYPE_INVESTOR is a generic investor
   * </pre>
   *
   * <code>PARTY_TYPE_INVESTOR = 3;</code>
   */
  PARTY_TYPE_INVESTOR(3),
  /**
   * <pre>
   * PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
   * </pre>
   *
   * <code>PARTY_TYPE_CUSTODIAN = 4;</code>
   */
  PARTY_TYPE_CUSTODIAN(4),
  /**
   * <pre>
   * PARTY_TYPE_OWNER indicates this party is an owner of the item
   * </pre>
   *
   * <code>PARTY_TYPE_OWNER = 5;</code>
   */
  PARTY_TYPE_OWNER(5),
  /**
   * <pre>
   * PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
   * </pre>
   *
   * <code>PARTY_TYPE_AFFILIATE = 6;</code>
   */
  PARTY_TYPE_AFFILIATE(6),
  /**
   * <pre>
   * PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
   * </pre>
   *
   * <code>PARTY_TYPE_OMNIBUS = 7;</code>
   */
  PARTY_TYPE_OMNIBUS(7),
  /**
   * <pre>
   * PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
   * </pre>
   *
   * <code>PARTY_TYPE_PROVENANCE = 8;</code>
   */
  PARTY_TYPE_PROVENANCE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * PARTY_TYPE_UNSPECIFIED is an error condition
   * </pre>
   *
   * <code>PARTY_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int PARTY_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * PARTY_TYPE_ORIGINATOR is an asset originator
   * </pre>
   *
   * <code>PARTY_TYPE_ORIGINATOR = 1;</code>
   */
  public static final int PARTY_TYPE_ORIGINATOR_VALUE = 1;
  /**
   * <pre>
   * PARTY_TYPE_SERVICER provides debt servicing functions
   * </pre>
   *
   * <code>PARTY_TYPE_SERVICER = 2;</code>
   */
  public static final int PARTY_TYPE_SERVICER_VALUE = 2;
  /**
   * <pre>
   * PARTY_TYPE_INVESTOR is a generic investor
   * </pre>
   *
   * <code>PARTY_TYPE_INVESTOR = 3;</code>
   */
  public static final int PARTY_TYPE_INVESTOR_VALUE = 3;
  /**
   * <pre>
   * PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
   * </pre>
   *
   * <code>PARTY_TYPE_CUSTODIAN = 4;</code>
   */
  public static final int PARTY_TYPE_CUSTODIAN_VALUE = 4;
  /**
   * <pre>
   * PARTY_TYPE_OWNER indicates this party is an owner of the item
   * </pre>
   *
   * <code>PARTY_TYPE_OWNER = 5;</code>
   */
  public static final int PARTY_TYPE_OWNER_VALUE = 5;
  /**
   * <pre>
   * PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
   * </pre>
   *
   * <code>PARTY_TYPE_AFFILIATE = 6;</code>
   */
  public static final int PARTY_TYPE_AFFILIATE_VALUE = 6;
  /**
   * <pre>
   * PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
   * </pre>
   *
   * <code>PARTY_TYPE_OMNIBUS = 7;</code>
   */
  public static final int PARTY_TYPE_OMNIBUS_VALUE = 7;
  /**
   * <pre>
   * PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
   * </pre>
   *
   * <code>PARTY_TYPE_PROVENANCE = 8;</code>
   */
  public static final int PARTY_TYPE_PROVENANCE_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PartyType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PartyType forNumber(int value) {
    switch (value) {
      case 0: return PARTY_TYPE_UNSPECIFIED;
      case 1: return PARTY_TYPE_ORIGINATOR;
      case 2: return PARTY_TYPE_SERVICER;
      case 3: return PARTY_TYPE_INVESTOR;
      case 4: return PARTY_TYPE_CUSTODIAN;
      case 5: return PARTY_TYPE_OWNER;
      case 6: return PARTY_TYPE_AFFILIATE;
      case 7: return PARTY_TYPE_OMNIBUS;
      case 8: return PARTY_TYPE_PROVENANCE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PartyType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PartyType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PartyType>() {
          public PartyType findValueByNumber(int number) {
            return PartyType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.provenance.metadata.v1.Specification.getDescriptor().getEnumTypes().get(1);
  }

  private static final PartyType[] VALUES = values();

  public static PartyType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PartyType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:provenance.metadata.v1.PartyType)
}

