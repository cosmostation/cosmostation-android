// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/marker.proto

package io.provenance.marker.v1;

public interface ParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.marker.v1.Params)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * maximum amount of supply to allow a marker to be created with
   * </pre>
   *
   * <code>uint64 max_total_supply = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "uint64"];</code>
   * @return The maxTotalSupply.
   */
  long getMaxTotalSupply();

  /**
   * <pre>
   * indicates if governance based controls of markers is allowed.
   * </pre>
   *
   * <code>bool enable_governance = 2;</code>
   * @return The enableGovernance.
   */
  boolean getEnableGovernance();

  /**
   * <pre>
   * a regular expression used to validate marker denom values from normal create requests (governance
   * requests are only subject to platform coin validation denom expression)
   * </pre>
   *
   * <code>string unrestricted_denom_regex = 3;</code>
   * @return The unrestrictedDenomRegex.
   */
  java.lang.String getUnrestrictedDenomRegex();
  /**
   * <pre>
   * a regular expression used to validate marker denom values from normal create requests (governance
   * requests are only subject to platform coin validation denom expression)
   * </pre>
   *
   * <code>string unrestricted_denom_regex = 3;</code>
   * @return The bytes for unrestrictedDenomRegex.
   */
  com.google.protobuf.ByteString
      getUnrestrictedDenomRegexBytes();
}
