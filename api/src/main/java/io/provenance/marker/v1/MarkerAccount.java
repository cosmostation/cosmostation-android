// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/marker.proto

package io.provenance.marker.v1;

/**
 * <pre>
 * MarkerAccount holds the marker configuration information in addition to a base account structure.
 * </pre>
 *
 * Protobuf type {@code provenance.marker.v1.MarkerAccount}
 */
public final class MarkerAccount extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:provenance.marker.v1.MarkerAccount)
    MarkerAccountOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MarkerAccount.newBuilder() to construct.
  private MarkerAccount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MarkerAccount() {
    manager_ = "";
    accessControl_ = java.util.Collections.emptyList();
    status_ = 0;
    denom_ = "";
    supply_ = "";
    markerType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MarkerAccount();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MarkerAccount(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            cosmos.auth.v1beta1.Auth.BaseAccount.Builder subBuilder = null;
            if (baseAccount_ != null) {
              subBuilder = baseAccount_.toBuilder();
            }
            baseAccount_ = input.readMessage(cosmos.auth.v1beta1.Auth.BaseAccount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(baseAccount_);
              baseAccount_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            manager_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              accessControl_ = new java.util.ArrayList<io.provenance.marker.v1.AccessGrant>();
              mutable_bitField0_ |= 0x00000001;
            }
            accessControl_.add(
                input.readMessage(io.provenance.marker.v1.AccessGrant.parser(), extensionRegistry));
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            denom_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            supply_ = s;
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            markerType_ = rawValue;
            break;
          }
          case 64: {

            supplyFixed_ = input.readBool();
            break;
          }
          case 72: {

            allowGovernanceControl_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        accessControl_ = java.util.Collections.unmodifiableList(accessControl_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.provenance.marker.v1.Marker.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.provenance.marker.v1.Marker.internal_static_provenance_marker_v1_MarkerAccount_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.provenance.marker.v1.MarkerAccount.class, io.provenance.marker.v1.MarkerAccount.Builder.class);
  }

  public static final int BASE_ACCOUNT_FIELD_NUMBER = 1;
  private cosmos.auth.v1beta1.Auth.BaseAccount baseAccount_;
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return Whether the baseAccount field is set.
   */
  @java.lang.Override
  public boolean hasBaseAccount() {
    return baseAccount_ != null;
  }
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   * @return The baseAccount.
   */
  @java.lang.Override
  public cosmos.auth.v1beta1.Auth.BaseAccount getBaseAccount() {
    return baseAccount_ == null ? cosmos.auth.v1beta1.Auth.BaseAccount.getDefaultInstance() : baseAccount_;
  }
  /**
   * <pre>
   * base cosmos account information including address and coin holdings.
   * </pre>
   *
   * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
   */
  @java.lang.Override
  public cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder getBaseAccountOrBuilder() {
    return getBaseAccount();
  }

  public static final int MANAGER_FIELD_NUMBER = 2;
  private volatile java.lang.Object manager_;
  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The manager.
   */
  @java.lang.Override
  public java.lang.String getManager() {
    java.lang.Object ref = manager_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      manager_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Address that owns the marker configuration.  This account must sign any requests
   * to change marker config (only valid for statuses prior to finalization)
   * </pre>
   *
   * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
   * @return The bytes for manager.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getManagerBytes() {
    java.lang.Object ref = manager_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      manager_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACCESS_CONTROL_FIELD_NUMBER = 3;
  private java.util.List<io.provenance.marker.v1.AccessGrant> accessControl_;
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<io.provenance.marker.v1.AccessGrant> getAccessControlList() {
    return accessControl_;
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.provenance.marker.v1.AccessGrantOrBuilder> 
      getAccessControlOrBuilderList() {
    return accessControl_;
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public int getAccessControlCount() {
    return accessControl_.size();
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public io.provenance.marker.v1.AccessGrant getAccessControl(int index) {
    return accessControl_.get(index);
  }
  /**
   * <pre>
   * Access control lists
   * </pre>
   *
   * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
   */
  @java.lang.Override
  public io.provenance.marker.v1.AccessGrantOrBuilder getAccessControlOrBuilder(
      int index) {
    return accessControl_.get(index);
  }

  public static final int STATUS_FIELD_NUMBER = 4;
  private int status_;
  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * Indicates the current status of this marker record.
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
   * @return The status.
   */
  @java.lang.Override public io.provenance.marker.v1.MarkerStatus getStatus() {
    @SuppressWarnings("deprecation")
    io.provenance.marker.v1.MarkerStatus result = io.provenance.marker.v1.MarkerStatus.valueOf(status_);
    return result == null ? io.provenance.marker.v1.MarkerStatus.UNRECOGNIZED : result;
  }

  public static final int DENOM_FIELD_NUMBER = 5;
  private volatile java.lang.Object denom_;
  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5;</code>
   * @return The denom.
   */
  @java.lang.Override
  public java.lang.String getDenom() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      denom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * value denomination and total supply for the token.
   * </pre>
   *
   * <code>string denom = 5;</code>
   * @return The bytes for denom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDenomBytes() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      denom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUPPLY_FIELD_NUMBER = 6;
  private volatile java.lang.Object supply_;
  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The supply.
   */
  @java.lang.Override
  public java.lang.String getSupply() {
    java.lang.Object ref = supply_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      supply_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
   * </pre>
   *
   * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
   * @return The bytes for supply.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSupplyBytes() {
    java.lang.Object ref = supply_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      supply_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKER_TYPE_FIELD_NUMBER = 7;
  private int markerType_;
  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The enum numeric value on the wire for markerType.
   */
  @java.lang.Override public int getMarkerTypeValue() {
    return markerType_;
  }
  /**
   * <pre>
   * Marker type information
   * </pre>
   *
   * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
   * @return The markerType.
   */
  @java.lang.Override public io.provenance.marker.v1.MarkerType getMarkerType() {
    @SuppressWarnings("deprecation")
    io.provenance.marker.v1.MarkerType result = io.provenance.marker.v1.MarkerType.valueOf(markerType_);
    return result == null ? io.provenance.marker.v1.MarkerType.UNRECOGNIZED : result;
  }

  public static final int SUPPLY_FIXED_FIELD_NUMBER = 8;
  private boolean supplyFixed_;
  /**
   * <pre>
   * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
   * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
   * </pre>
   *
   * <code>bool supply_fixed = 8;</code>
   * @return The supplyFixed.
   */
  @java.lang.Override
  public boolean getSupplyFixed() {
    return supplyFixed_;
  }

  public static final int ALLOW_GOVERNANCE_CONTROL_FIELD_NUMBER = 9;
  private boolean allowGovernanceControl_;
  /**
   * <pre>
   * indicates that governance based control is allowed for this marker
   * </pre>
   *
   * <code>bool allow_governance_control = 9;</code>
   * @return The allowGovernanceControl.
   */
  @java.lang.Override
  public boolean getAllowGovernanceControl() {
    return allowGovernanceControl_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (baseAccount_ != null) {
      output.writeMessage(1, getBaseAccount());
    }
    if (!getManagerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, manager_);
    }
    for (int i = 0; i < accessControl_.size(); i++) {
      output.writeMessage(3, accessControl_.get(i));
    }
    if (status_ != io.provenance.marker.v1.MarkerStatus.MARKER_STATUS_UNSPECIFIED.getNumber()) {
      output.writeEnum(4, status_);
    }
    if (!getDenomBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, denom_);
    }
    if (!getSupplyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, supply_);
    }
    if (markerType_ != io.provenance.marker.v1.MarkerType.MARKER_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(7, markerType_);
    }
    if (supplyFixed_ != false) {
      output.writeBool(8, supplyFixed_);
    }
    if (allowGovernanceControl_ != false) {
      output.writeBool(9, allowGovernanceControl_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (baseAccount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBaseAccount());
    }
    if (!getManagerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, manager_);
    }
    for (int i = 0; i < accessControl_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, accessControl_.get(i));
    }
    if (status_ != io.provenance.marker.v1.MarkerStatus.MARKER_STATUS_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, status_);
    }
    if (!getDenomBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, denom_);
    }
    if (!getSupplyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, supply_);
    }
    if (markerType_ != io.provenance.marker.v1.MarkerType.MARKER_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, markerType_);
    }
    if (supplyFixed_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, supplyFixed_);
    }
    if (allowGovernanceControl_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, allowGovernanceControl_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.provenance.marker.v1.MarkerAccount)) {
      return super.equals(obj);
    }
    io.provenance.marker.v1.MarkerAccount other = (io.provenance.marker.v1.MarkerAccount) obj;

    if (hasBaseAccount() != other.hasBaseAccount()) return false;
    if (hasBaseAccount()) {
      if (!getBaseAccount()
          .equals(other.getBaseAccount())) return false;
    }
    if (!getManager()
        .equals(other.getManager())) return false;
    if (!getAccessControlList()
        .equals(other.getAccessControlList())) return false;
    if (status_ != other.status_) return false;
    if (!getDenom()
        .equals(other.getDenom())) return false;
    if (!getSupply()
        .equals(other.getSupply())) return false;
    if (markerType_ != other.markerType_) return false;
    if (getSupplyFixed()
        != other.getSupplyFixed()) return false;
    if (getAllowGovernanceControl()
        != other.getAllowGovernanceControl()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBaseAccount()) {
      hash = (37 * hash) + BASE_ACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getBaseAccount().hashCode();
    }
    hash = (37 * hash) + MANAGER_FIELD_NUMBER;
    hash = (53 * hash) + getManager().hashCode();
    if (getAccessControlCount() > 0) {
      hash = (37 * hash) + ACCESS_CONTROL_FIELD_NUMBER;
      hash = (53 * hash) + getAccessControlList().hashCode();
    }
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getDenom().hashCode();
    hash = (37 * hash) + SUPPLY_FIELD_NUMBER;
    hash = (53 * hash) + getSupply().hashCode();
    hash = (37 * hash) + MARKER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + markerType_;
    hash = (37 * hash) + SUPPLY_FIXED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSupplyFixed());
    hash = (37 * hash) + ALLOW_GOVERNANCE_CONTROL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowGovernanceControl());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provenance.marker.v1.MarkerAccount parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.provenance.marker.v1.MarkerAccount parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provenance.marker.v1.MarkerAccount parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.provenance.marker.v1.MarkerAccount prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * MarkerAccount holds the marker configuration information in addition to a base account structure.
   * </pre>
   *
   * Protobuf type {@code provenance.marker.v1.MarkerAccount}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:provenance.marker.v1.MarkerAccount)
      io.provenance.marker.v1.MarkerAccountOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.provenance.marker.v1.Marker.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.provenance.marker.v1.Marker.internal_static_provenance_marker_v1_MarkerAccount_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.provenance.marker.v1.MarkerAccount.class, io.provenance.marker.v1.MarkerAccount.Builder.class);
    }

    // Construct using io.provenance.marker.v1.MarkerAccount.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAccessControlFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (baseAccountBuilder_ == null) {
        baseAccount_ = null;
      } else {
        baseAccount_ = null;
        baseAccountBuilder_ = null;
      }
      manager_ = "";

      if (accessControlBuilder_ == null) {
        accessControl_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        accessControlBuilder_.clear();
      }
      status_ = 0;

      denom_ = "";

      supply_ = "";

      markerType_ = 0;

      supplyFixed_ = false;

      allowGovernanceControl_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.provenance.marker.v1.Marker.internal_static_provenance_marker_v1_MarkerAccount_descriptor;
    }

    @java.lang.Override
    public io.provenance.marker.v1.MarkerAccount getDefaultInstanceForType() {
      return io.provenance.marker.v1.MarkerAccount.getDefaultInstance();
    }

    @java.lang.Override
    public io.provenance.marker.v1.MarkerAccount build() {
      io.provenance.marker.v1.MarkerAccount result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.provenance.marker.v1.MarkerAccount buildPartial() {
      io.provenance.marker.v1.MarkerAccount result = new io.provenance.marker.v1.MarkerAccount(this);
      int from_bitField0_ = bitField0_;
      if (baseAccountBuilder_ == null) {
        result.baseAccount_ = baseAccount_;
      } else {
        result.baseAccount_ = baseAccountBuilder_.build();
      }
      result.manager_ = manager_;
      if (accessControlBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          accessControl_ = java.util.Collections.unmodifiableList(accessControl_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.accessControl_ = accessControl_;
      } else {
        result.accessControl_ = accessControlBuilder_.build();
      }
      result.status_ = status_;
      result.denom_ = denom_;
      result.supply_ = supply_;
      result.markerType_ = markerType_;
      result.supplyFixed_ = supplyFixed_;
      result.allowGovernanceControl_ = allowGovernanceControl_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.provenance.marker.v1.MarkerAccount) {
        return mergeFrom((io.provenance.marker.v1.MarkerAccount)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.provenance.marker.v1.MarkerAccount other) {
      if (other == io.provenance.marker.v1.MarkerAccount.getDefaultInstance()) return this;
      if (other.hasBaseAccount()) {
        mergeBaseAccount(other.getBaseAccount());
      }
      if (!other.getManager().isEmpty()) {
        manager_ = other.manager_;
        onChanged();
      }
      if (accessControlBuilder_ == null) {
        if (!other.accessControl_.isEmpty()) {
          if (accessControl_.isEmpty()) {
            accessControl_ = other.accessControl_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAccessControlIsMutable();
            accessControl_.addAll(other.accessControl_);
          }
          onChanged();
        }
      } else {
        if (!other.accessControl_.isEmpty()) {
          if (accessControlBuilder_.isEmpty()) {
            accessControlBuilder_.dispose();
            accessControlBuilder_ = null;
            accessControl_ = other.accessControl_;
            bitField0_ = (bitField0_ & ~0x00000001);
            accessControlBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAccessControlFieldBuilder() : null;
          } else {
            accessControlBuilder_.addAllMessages(other.accessControl_);
          }
        }
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getDenom().isEmpty()) {
        denom_ = other.denom_;
        onChanged();
      }
      if (!other.getSupply().isEmpty()) {
        supply_ = other.supply_;
        onChanged();
      }
      if (other.markerType_ != 0) {
        setMarkerTypeValue(other.getMarkerTypeValue());
      }
      if (other.getSupplyFixed() != false) {
        setSupplyFixed(other.getSupplyFixed());
      }
      if (other.getAllowGovernanceControl() != false) {
        setAllowGovernanceControl(other.getAllowGovernanceControl());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.provenance.marker.v1.MarkerAccount parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.provenance.marker.v1.MarkerAccount) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private cosmos.auth.v1beta1.Auth.BaseAccount baseAccount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.auth.v1beta1.Auth.BaseAccount, cosmos.auth.v1beta1.Auth.BaseAccount.Builder, cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder> baseAccountBuilder_;
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     * @return Whether the baseAccount field is set.
     */
    public boolean hasBaseAccount() {
      return baseAccountBuilder_ != null || baseAccount_ != null;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     * @return The baseAccount.
     */
    public cosmos.auth.v1beta1.Auth.BaseAccount getBaseAccount() {
      if (baseAccountBuilder_ == null) {
        return baseAccount_ == null ? cosmos.auth.v1beta1.Auth.BaseAccount.getDefaultInstance() : baseAccount_;
      } else {
        return baseAccountBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder setBaseAccount(cosmos.auth.v1beta1.Auth.BaseAccount value) {
      if (baseAccountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baseAccount_ = value;
        onChanged();
      } else {
        baseAccountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder setBaseAccount(
        cosmos.auth.v1beta1.Auth.BaseAccount.Builder builderForValue) {
      if (baseAccountBuilder_ == null) {
        baseAccount_ = builderForValue.build();
        onChanged();
      } else {
        baseAccountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder mergeBaseAccount(cosmos.auth.v1beta1.Auth.BaseAccount value) {
      if (baseAccountBuilder_ == null) {
        if (baseAccount_ != null) {
          baseAccount_ =
            cosmos.auth.v1beta1.Auth.BaseAccount.newBuilder(baseAccount_).mergeFrom(value).buildPartial();
        } else {
          baseAccount_ = value;
        }
        onChanged();
      } else {
        baseAccountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public Builder clearBaseAccount() {
      if (baseAccountBuilder_ == null) {
        baseAccount_ = null;
        onChanged();
      } else {
        baseAccount_ = null;
        baseAccountBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public cosmos.auth.v1beta1.Auth.BaseAccount.Builder getBaseAccountBuilder() {
      
      onChanged();
      return getBaseAccountFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    public cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder getBaseAccountOrBuilder() {
      if (baseAccountBuilder_ != null) {
        return baseAccountBuilder_.getMessageOrBuilder();
      } else {
        return baseAccount_ == null ?
            cosmos.auth.v1beta1.Auth.BaseAccount.getDefaultInstance() : baseAccount_;
      }
    }
    /**
     * <pre>
     * base cosmos account information including address and coin holdings.
     * </pre>
     *
     * <code>.cosmos.auth.v1beta1.BaseAccount base_account = 1 [(.gogoproto.embed) = true, (.gogoproto.moretags) = "yaml:&#92;"base_account&#92;""];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        cosmos.auth.v1beta1.Auth.BaseAccount, cosmos.auth.v1beta1.Auth.BaseAccount.Builder, cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder> 
        getBaseAccountFieldBuilder() {
      if (baseAccountBuilder_ == null) {
        baseAccountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            cosmos.auth.v1beta1.Auth.BaseAccount, cosmos.auth.v1beta1.Auth.BaseAccount.Builder, cosmos.auth.v1beta1.Auth.BaseAccountOrBuilder>(
                getBaseAccount(),
                getParentForChildren(),
                isClean());
        baseAccount_ = null;
      }
      return baseAccountBuilder_;
    }

    private java.lang.Object manager_ = "";
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return The manager.
     */
    public java.lang.String getManager() {
      java.lang.Object ref = manager_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        manager_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return The bytes for manager.
     */
    public com.google.protobuf.ByteString
        getManagerBytes() {
      java.lang.Object ref = manager_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manager_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @param value The manager to set.
     * @return This builder for chaining.
     */
    public Builder setManager(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      manager_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearManager() {
      
      manager_ = getDefaultInstance().getManager();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Address that owns the marker configuration.  This account must sign any requests
     * to change marker config (only valid for statuses prior to finalization)
     * </pre>
     *
     * <code>string manager = 2 [(.gogoproto.moretags) = "json:&#92;"manager,omitempty&#92;""];</code>
     * @param value The bytes for manager to set.
     * @return This builder for chaining.
     */
    public Builder setManagerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      manager_ = value;
      onChanged();
      return this;
    }

    private java.util.List<io.provenance.marker.v1.AccessGrant> accessControl_ =
      java.util.Collections.emptyList();
    private void ensureAccessControlIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        accessControl_ = new java.util.ArrayList<io.provenance.marker.v1.AccessGrant>(accessControl_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.provenance.marker.v1.AccessGrant, io.provenance.marker.v1.AccessGrant.Builder, io.provenance.marker.v1.AccessGrantOrBuilder> accessControlBuilder_;

    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public java.util.List<io.provenance.marker.v1.AccessGrant> getAccessControlList() {
      if (accessControlBuilder_ == null) {
        return java.util.Collections.unmodifiableList(accessControl_);
      } else {
        return accessControlBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public int getAccessControlCount() {
      if (accessControlBuilder_ == null) {
        return accessControl_.size();
      } else {
        return accessControlBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public io.provenance.marker.v1.AccessGrant getAccessControl(int index) {
      if (accessControlBuilder_ == null) {
        return accessControl_.get(index);
      } else {
        return accessControlBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder setAccessControl(
        int index, io.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.set(index, value);
        onChanged();
      } else {
        accessControlBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder setAccessControl(
        int index, io.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.set(index, builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(io.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.add(value);
        onChanged();
      } else {
        accessControlBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        int index, io.provenance.marker.v1.AccessGrant value) {
      if (accessControlBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessControlIsMutable();
        accessControl_.add(index, value);
        onChanged();
      } else {
        accessControlBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        io.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.add(builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder addAccessControl(
        int index, io.provenance.marker.v1.AccessGrant.Builder builderForValue) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.add(index, builderForValue.build());
        onChanged();
      } else {
        accessControlBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder addAllAccessControl(
        java.lang.Iterable<? extends io.provenance.marker.v1.AccessGrant> values) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accessControl_);
        onChanged();
      } else {
        accessControlBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder clearAccessControl() {
      if (accessControlBuilder_ == null) {
        accessControl_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        accessControlBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public Builder removeAccessControl(int index) {
      if (accessControlBuilder_ == null) {
        ensureAccessControlIsMutable();
        accessControl_.remove(index);
        onChanged();
      } else {
        accessControlBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public io.provenance.marker.v1.AccessGrant.Builder getAccessControlBuilder(
        int index) {
      return getAccessControlFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public io.provenance.marker.v1.AccessGrantOrBuilder getAccessControlOrBuilder(
        int index) {
      if (accessControlBuilder_ == null) {
        return accessControl_.get(index);  } else {
        return accessControlBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public java.util.List<? extends io.provenance.marker.v1.AccessGrantOrBuilder> 
         getAccessControlOrBuilderList() {
      if (accessControlBuilder_ != null) {
        return accessControlBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(accessControl_);
      }
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public io.provenance.marker.v1.AccessGrant.Builder addAccessControlBuilder() {
      return getAccessControlFieldBuilder().addBuilder(
          io.provenance.marker.v1.AccessGrant.getDefaultInstance());
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public io.provenance.marker.v1.AccessGrant.Builder addAccessControlBuilder(
        int index) {
      return getAccessControlFieldBuilder().addBuilder(
          index, io.provenance.marker.v1.AccessGrant.getDefaultInstance());
    }
    /**
     * <pre>
     * Access control lists
     * </pre>
     *
     * <code>repeated .provenance.marker.v1.AccessGrant access_control = 3 [(.gogoproto.nullable) = false];</code>
     */
    public java.util.List<io.provenance.marker.v1.AccessGrant.Builder> 
         getAccessControlBuilderList() {
      return getAccessControlFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.provenance.marker.v1.AccessGrant, io.provenance.marker.v1.AccessGrant.Builder, io.provenance.marker.v1.AccessGrantOrBuilder> 
        getAccessControlFieldBuilder() {
      if (accessControlBuilder_ == null) {
        accessControlBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.provenance.marker.v1.AccessGrant, io.provenance.marker.v1.AccessGrant.Builder, io.provenance.marker.v1.AccessGrantOrBuilder>(
                accessControl_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        accessControl_ = null;
      }
      return accessControlBuilder_;
    }

    private int status_ = 0;
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
     * @return The status.
     */
    @java.lang.Override
    public io.provenance.marker.v1.MarkerStatus getStatus() {
      @SuppressWarnings("deprecation")
      io.provenance.marker.v1.MarkerStatus result = io.provenance.marker.v1.MarkerStatus.valueOf(status_);
      return result == null ? io.provenance.marker.v1.MarkerStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(io.provenance.marker.v1.MarkerStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the current status of this marker record.
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerStatus status = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object denom_ = "";
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5;</code>
     * @return The denom.
     */
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5;</code>
     * @return The bytes for denom.
     */
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5;</code>
     * @param value The denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenom(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      denom_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDenom() {
      
      denom_ = getDefaultInstance().getDenom();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * value denomination and total supply for the token.
     * </pre>
     *
     * <code>string denom = 5;</code>
     * @param value The bytes for denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      denom_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object supply_ = "";
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return The supply.
     */
    public java.lang.String getSupply() {
      java.lang.Object ref = supply_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        supply_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return The bytes for supply.
     */
    public com.google.protobuf.ByteString
        getSupplyBytes() {
      java.lang.Object ref = supply_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        supply_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @param value The supply to set.
     * @return This builder for chaining.
     */
    public Builder setSupply(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      supply_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearSupply() {
      
      supply_ = getDefaultInstance().getSupply();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the total supply expected for a marker.  This is the amount that is minted when a marker is created.
     * </pre>
     *
     * <code>string supply = 6 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (.gogoproto.moretags) = "json:&#92;"total_supply&#92;" yaml:&#92;"total_supply&#92;""];</code>
     * @param value The bytes for supply to set.
     * @return This builder for chaining.
     */
    public Builder setSupplyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      supply_ = value;
      onChanged();
      return this;
    }

    private int markerType_ = 0;
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return The enum numeric value on the wire for markerType.
     */
    @java.lang.Override public int getMarkerTypeValue() {
      return markerType_;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @param value The enum numeric value on the wire for markerType to set.
     * @return This builder for chaining.
     */
    public Builder setMarkerTypeValue(int value) {
      
      markerType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return The markerType.
     */
    @java.lang.Override
    public io.provenance.marker.v1.MarkerType getMarkerType() {
      @SuppressWarnings("deprecation")
      io.provenance.marker.v1.MarkerType result = io.provenance.marker.v1.MarkerType.valueOf(markerType_);
      return result == null ? io.provenance.marker.v1.MarkerType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @param value The markerType to set.
     * @return This builder for chaining.
     */
    public Builder setMarkerType(io.provenance.marker.v1.MarkerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      markerType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Marker type information
     * </pre>
     *
     * <code>.provenance.marker.v1.MarkerType marker_type = 7 [(.gogoproto.moretags) = "json:&#92;"marker_type,omitempty&#92;""];</code>
     * @return This builder for chaining.
     */
    public Builder clearMarkerType() {
      
      markerType_ = 0;
      onChanged();
      return this;
    }

    private boolean supplyFixed_ ;
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8;</code>
     * @return The supplyFixed.
     */
    @java.lang.Override
    public boolean getSupplyFixed() {
      return supplyFixed_;
    }
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8;</code>
     * @param value The supplyFixed to set.
     * @return This builder for chaining.
     */
    public Builder setSupplyFixed(boolean value) {
      
      supplyFixed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A fixed supply will mint additional coin automatically if the total supply decreases below a set value.  This
     * may occur if the coin is burned or an account holding the coin is slashed. (default: true)
     * </pre>
     *
     * <code>bool supply_fixed = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSupplyFixed() {
      
      supplyFixed_ = false;
      onChanged();
      return this;
    }

    private boolean allowGovernanceControl_ ;
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9;</code>
     * @return The allowGovernanceControl.
     */
    @java.lang.Override
    public boolean getAllowGovernanceControl() {
      return allowGovernanceControl_;
    }
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9;</code>
     * @param value The allowGovernanceControl to set.
     * @return This builder for chaining.
     */
    public Builder setAllowGovernanceControl(boolean value) {
      
      allowGovernanceControl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicates that governance based control is allowed for this marker
     * </pre>
     *
     * <code>bool allow_governance_control = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowGovernanceControl() {
      
      allowGovernanceControl_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:provenance.marker.v1.MarkerAccount)
  }

  // @@protoc_insertion_point(class_scope:provenance.marker.v1.MarkerAccount)
  private static final io.provenance.marker.v1.MarkerAccount DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.provenance.marker.v1.MarkerAccount();
  }

  public static io.provenance.marker.v1.MarkerAccount getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarkerAccount>
      PARSER = new com.google.protobuf.AbstractParser<MarkerAccount>() {
    @java.lang.Override
    public MarkerAccount parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MarkerAccount(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MarkerAccount> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarkerAccount> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.provenance.marker.v1.MarkerAccount getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

