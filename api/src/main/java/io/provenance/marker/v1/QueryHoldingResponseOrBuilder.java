// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provenance/marker/v1/query.proto

package io.provenance.marker.v1;

public interface QueryHoldingResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:provenance.marker.v1.QueryHoldingResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .provenance.marker.v1.Balance balances = 1 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<io.provenance.marker.v1.Balance> 
      getBalancesList();
  /**
   * <code>repeated .provenance.marker.v1.Balance balances = 1 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.marker.v1.Balance getBalances(int index);
  /**
   * <code>repeated .provenance.marker.v1.Balance balances = 1 [(.gogoproto.nullable) = false];</code>
   */
  int getBalancesCount();
  /**
   * <code>repeated .provenance.marker.v1.Balance balances = 1 [(.gogoproto.nullable) = false];</code>
   */
  java.util.List<? extends io.provenance.marker.v1.BalanceOrBuilder> 
      getBalancesOrBuilderList();
  /**
   * <code>repeated .provenance.marker.v1.Balance balances = 1 [(.gogoproto.nullable) = false];</code>
   */
  io.provenance.marker.v1.BalanceOrBuilder getBalancesOrBuilder(
      int index);

  /**
   * <pre>
   * pagination defines an optional pagination for the request.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   * @return Whether the pagination field is set.
   */
  boolean hasPagination();
  /**
   * <pre>
   * pagination defines an optional pagination for the request.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   * @return The pagination.
   */
  cosmos.base.query.v1beta1.Pagination.PageResponse getPagination();
  /**
   * <pre>
   * pagination defines an optional pagination for the request.
   * </pre>
   *
   * <code>.cosmos.base.query.v1beta1.PageResponse pagination = 2;</code>
   */
  cosmos.base.query.v1beta1.Pagination.PageResponseOrBuilder getPaginationOrBuilder();
}
