// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: regen/data/v1alpha2/types.proto

package regen.data.v1alpha2;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * MediaType defines MIME media types to be used with a ContentHash.Raw hash.
   * </pre>
   *
   * Protobuf enum {@code regen.data.v1alpha2.MediaType}
   */
  public enum MediaType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * MEDIA_TYPE_UNSPECIFIED can be used for raw binary data
     * </pre>
     *
     * <code>MEDIA_TYPE_UNSPECIFIED = 0;</code>
     */
    MEDIA_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * plain text
     * </pre>
     *
     * <code>MEDIA_TYPE_TEXT_PLAIN = 1;</code>
     */
    MEDIA_TYPE_TEXT_PLAIN(1),
    /**
     * <pre>
     * JSON
     * </pre>
     *
     * <code>MEDIA_TYPE_JSON = 2;</code>
     */
    MEDIA_TYPE_JSON(2),
    /**
     * <pre>
     * CSV
     * </pre>
     *
     * <code>MEDIA_TYPE_CSV = 3;</code>
     */
    MEDIA_TYPE_CSV(3),
    /**
     * <pre>
     * XML
     * </pre>
     *
     * <code>MEDIA_TYPE_XML = 4;</code>
     */
    MEDIA_TYPE_XML(4),
    /**
     * <pre>
     * PDF
     * </pre>
     *
     * <code>MEDIA_TYPE_PDF = 5;</code>
     */
    MEDIA_TYPE_PDF(5),
    /**
     * <pre>
     * TIIF
     * </pre>
     *
     * <code>MEDIA_TYPE_TIFF = 16;</code>
     */
    MEDIA_TYPE_TIFF(16),
    /**
     * <pre>
     * JPG
     * </pre>
     *
     * <code>MEDIA_TYPE_JPG = 17;</code>
     */
    MEDIA_TYPE_JPG(17),
    /**
     * <pre>
     * PNG
     * </pre>
     *
     * <code>MEDIA_TYPE_PNG = 18;</code>
     */
    MEDIA_TYPE_PNG(18),
    /**
     * <pre>
     * SVG
     * </pre>
     *
     * <code>MEDIA_TYPE_SVG = 19;</code>
     */
    MEDIA_TYPE_SVG(19),
    /**
     * <pre>
     * WEBP
     * </pre>
     *
     * <code>MEDIA_TYPE_WEBP = 20;</code>
     */
    MEDIA_TYPE_WEBP(20),
    /**
     * <pre>
     * AVIF
     * </pre>
     *
     * <code>MEDIA_TYPE_AVIF = 21;</code>
     */
    MEDIA_TYPE_AVIF(21),
    /**
     * <pre>
     * GIF
     * </pre>
     *
     * <code>MEDIA_TYPE_GIF = 22;</code>
     */
    MEDIA_TYPE_GIF(22),
    /**
     * <pre>
     * APNG
     * </pre>
     *
     * <code>MEDIA_TYPE_APNG = 23;</code>
     */
    MEDIA_TYPE_APNG(23),
    /**
     * <pre>
     * MPEG
     * </pre>
     *
     * <code>MEDIA_TYPE_MPEG = 32;</code>
     */
    MEDIA_TYPE_MPEG(32),
    /**
     * <pre>
     * MP4
     * </pre>
     *
     * <code>MEDIA_TYPE_MP4 = 33;</code>
     */
    MEDIA_TYPE_MP4(33),
    /**
     * <pre>
     * WEBM
     * </pre>
     *
     * <code>MEDIA_TYPE_WEBM = 34;</code>
     */
    MEDIA_TYPE_WEBM(34),
    /**
     * <pre>
     * OGG
     * </pre>
     *
     * <code>MEDIA_TYPE_OGG = 35;</code>
     */
    MEDIA_TYPE_OGG(35),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * MEDIA_TYPE_UNSPECIFIED can be used for raw binary data
     * </pre>
     *
     * <code>MEDIA_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int MEDIA_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * plain text
     * </pre>
     *
     * <code>MEDIA_TYPE_TEXT_PLAIN = 1;</code>
     */
    public static final int MEDIA_TYPE_TEXT_PLAIN_VALUE = 1;
    /**
     * <pre>
     * JSON
     * </pre>
     *
     * <code>MEDIA_TYPE_JSON = 2;</code>
     */
    public static final int MEDIA_TYPE_JSON_VALUE = 2;
    /**
     * <pre>
     * CSV
     * </pre>
     *
     * <code>MEDIA_TYPE_CSV = 3;</code>
     */
    public static final int MEDIA_TYPE_CSV_VALUE = 3;
    /**
     * <pre>
     * XML
     * </pre>
     *
     * <code>MEDIA_TYPE_XML = 4;</code>
     */
    public static final int MEDIA_TYPE_XML_VALUE = 4;
    /**
     * <pre>
     * PDF
     * </pre>
     *
     * <code>MEDIA_TYPE_PDF = 5;</code>
     */
    public static final int MEDIA_TYPE_PDF_VALUE = 5;
    /**
     * <pre>
     * TIIF
     * </pre>
     *
     * <code>MEDIA_TYPE_TIFF = 16;</code>
     */
    public static final int MEDIA_TYPE_TIFF_VALUE = 16;
    /**
     * <pre>
     * JPG
     * </pre>
     *
     * <code>MEDIA_TYPE_JPG = 17;</code>
     */
    public static final int MEDIA_TYPE_JPG_VALUE = 17;
    /**
     * <pre>
     * PNG
     * </pre>
     *
     * <code>MEDIA_TYPE_PNG = 18;</code>
     */
    public static final int MEDIA_TYPE_PNG_VALUE = 18;
    /**
     * <pre>
     * SVG
     * </pre>
     *
     * <code>MEDIA_TYPE_SVG = 19;</code>
     */
    public static final int MEDIA_TYPE_SVG_VALUE = 19;
    /**
     * <pre>
     * WEBP
     * </pre>
     *
     * <code>MEDIA_TYPE_WEBP = 20;</code>
     */
    public static final int MEDIA_TYPE_WEBP_VALUE = 20;
    /**
     * <pre>
     * AVIF
     * </pre>
     *
     * <code>MEDIA_TYPE_AVIF = 21;</code>
     */
    public static final int MEDIA_TYPE_AVIF_VALUE = 21;
    /**
     * <pre>
     * GIF
     * </pre>
     *
     * <code>MEDIA_TYPE_GIF = 22;</code>
     */
    public static final int MEDIA_TYPE_GIF_VALUE = 22;
    /**
     * <pre>
     * APNG
     * </pre>
     *
     * <code>MEDIA_TYPE_APNG = 23;</code>
     */
    public static final int MEDIA_TYPE_APNG_VALUE = 23;
    /**
     * <pre>
     * MPEG
     * </pre>
     *
     * <code>MEDIA_TYPE_MPEG = 32;</code>
     */
    public static final int MEDIA_TYPE_MPEG_VALUE = 32;
    /**
     * <pre>
     * MP4
     * </pre>
     *
     * <code>MEDIA_TYPE_MP4 = 33;</code>
     */
    public static final int MEDIA_TYPE_MP4_VALUE = 33;
    /**
     * <pre>
     * WEBM
     * </pre>
     *
     * <code>MEDIA_TYPE_WEBM = 34;</code>
     */
    public static final int MEDIA_TYPE_WEBM_VALUE = 34;
    /**
     * <pre>
     * OGG
     * </pre>
     *
     * <code>MEDIA_TYPE_OGG = 35;</code>
     */
    public static final int MEDIA_TYPE_OGG_VALUE = 35;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MediaType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MediaType forNumber(int value) {
      switch (value) {
        case 0: return MEDIA_TYPE_UNSPECIFIED;
        case 1: return MEDIA_TYPE_TEXT_PLAIN;
        case 2: return MEDIA_TYPE_JSON;
        case 3: return MEDIA_TYPE_CSV;
        case 4: return MEDIA_TYPE_XML;
        case 5: return MEDIA_TYPE_PDF;
        case 16: return MEDIA_TYPE_TIFF;
        case 17: return MEDIA_TYPE_JPG;
        case 18: return MEDIA_TYPE_PNG;
        case 19: return MEDIA_TYPE_SVG;
        case 20: return MEDIA_TYPE_WEBP;
        case 21: return MEDIA_TYPE_AVIF;
        case 22: return MEDIA_TYPE_GIF;
        case 23: return MEDIA_TYPE_APNG;
        case 32: return MEDIA_TYPE_MPEG;
        case 33: return MEDIA_TYPE_MP4;
        case 34: return MEDIA_TYPE_WEBM;
        case 35: return MEDIA_TYPE_OGG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MediaType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MediaType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MediaType>() {
            public MediaType findValueByNumber(int number) {
              return MediaType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.getDescriptor().getEnumTypes().get(0);
    }

    private static final MediaType[] VALUES = values();

    public static MediaType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MediaType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:regen.data.v1alpha2.MediaType)
  }

  /**
   * <pre>
   * GraphCanonicalizationAlgorithm is the graph canonicalization algorithm
   * </pre>
   *
   * Protobuf enum {@code regen.data.v1alpha2.GraphCanonicalizationAlgorithm}
   */
  public enum GraphCanonicalizationAlgorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * unspecified and invalid
     * </pre>
     *
     * <code>GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED = 0;</code>
     */
    GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED(0),
    /**
     * <pre>
     * URDNA2015 graph hashing
     * </pre>
     *
     * <code>GRAPH_CANONICALIZATION_ALGORITHM_URDNA2015 = 1;</code>
     */
    GRAPH_CANONICALIZATION_ALGORITHM_URDNA2015(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * unspecified and invalid
     * </pre>
     *
     * <code>GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED = 0;</code>
     */
    public static final int GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * URDNA2015 graph hashing
     * </pre>
     *
     * <code>GRAPH_CANONICALIZATION_ALGORITHM_URDNA2015 = 1;</code>
     */
    public static final int GRAPH_CANONICALIZATION_ALGORITHM_URDNA2015_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GraphCanonicalizationAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GraphCanonicalizationAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED;
        case 1: return GRAPH_CANONICALIZATION_ALGORITHM_URDNA2015;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GraphCanonicalizationAlgorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GraphCanonicalizationAlgorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GraphCanonicalizationAlgorithm>() {
            public GraphCanonicalizationAlgorithm findValueByNumber(int number) {
              return GraphCanonicalizationAlgorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.getDescriptor().getEnumTypes().get(1);
    }

    private static final GraphCanonicalizationAlgorithm[] VALUES = values();

    public static GraphCanonicalizationAlgorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GraphCanonicalizationAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:regen.data.v1alpha2.GraphCanonicalizationAlgorithm)
  }

  /**
   * <pre>
   * GraphMerkleTree is the graph merkle tree type used for hashing, if any
   * </pre>
   *
   * Protobuf enum {@code regen.data.v1alpha2.GraphMerkleTree}
   */
  public enum GraphMerkleTree
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * no merkle tree
     * </pre>
     *
     * <code>GRAPH_MERKLE_TREE_NONE_UNSPECIFIED = 0;</code>
     */
    GRAPH_MERKLE_TREE_NONE_UNSPECIFIED(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * no merkle tree
     * </pre>
     *
     * <code>GRAPH_MERKLE_TREE_NONE_UNSPECIFIED = 0;</code>
     */
    public static final int GRAPH_MERKLE_TREE_NONE_UNSPECIFIED_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GraphMerkleTree valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GraphMerkleTree forNumber(int value) {
      switch (value) {
        case 0: return GRAPH_MERKLE_TREE_NONE_UNSPECIFIED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GraphMerkleTree>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GraphMerkleTree> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GraphMerkleTree>() {
            public GraphMerkleTree findValueByNumber(int number) {
              return GraphMerkleTree.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.getDescriptor().getEnumTypes().get(2);
    }

    private static final GraphMerkleTree[] VALUES = values();

    public static GraphMerkleTree valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GraphMerkleTree(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:regen.data.v1alpha2.GraphMerkleTree)
  }

  /**
   * <pre>
   * DigestAlgorithm is the hash digest algorithm
   * </pre>
   *
   * Protobuf enum {@code regen.data.v1alpha2.DigestAlgorithm}
   */
  public enum DigestAlgorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * unspecified and invalid
     * </pre>
     *
     * <code>DIGEST_ALGORITHM_UNSPECIFIED = 0;</code>
     */
    DIGEST_ALGORITHM_UNSPECIFIED(0),
    /**
     * <pre>
     * BLAKE2b-256
     * </pre>
     *
     * <code>DIGEST_ALGORITHM_BLAKE2B_256 = 1;</code>
     */
    DIGEST_ALGORITHM_BLAKE2B_256(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * unspecified and invalid
     * </pre>
     *
     * <code>DIGEST_ALGORITHM_UNSPECIFIED = 0;</code>
     */
    public static final int DIGEST_ALGORITHM_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * BLAKE2b-256
     * </pre>
     *
     * <code>DIGEST_ALGORITHM_BLAKE2B_256 = 1;</code>
     */
    public static final int DIGEST_ALGORITHM_BLAKE2B_256_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DigestAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DigestAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return DIGEST_ALGORITHM_UNSPECIFIED;
        case 1: return DIGEST_ALGORITHM_BLAKE2B_256;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DigestAlgorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DigestAlgorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DigestAlgorithm>() {
            public DigestAlgorithm findValueByNumber(int number) {
              return DigestAlgorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.getDescriptor().getEnumTypes().get(3);
    }

    private static final DigestAlgorithm[] VALUES = values();

    public static DigestAlgorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DigestAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:regen.data.v1alpha2.DigestAlgorithm)
  }

  public interface ContentHashOrBuilder extends
      // @@protoc_insertion_point(interface_extends:regen.data.v1alpha2.ContentHash)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     * @return Whether the raw field is set.
     */
    boolean hasRaw();
    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     * @return The raw.
     */
    regen.data.v1alpha2.Types.ContentHash.Raw getRaw();
    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     */
    regen.data.v1alpha2.Types.ContentHash.RawOrBuilder getRawOrBuilder();

    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     * @return Whether the graph field is set.
     */
    boolean hasGraph();
    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     * @return The graph.
     */
    regen.data.v1alpha2.Types.ContentHash.Graph getGraph();
    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     */
    regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder getGraphOrBuilder();

    public regen.data.v1alpha2.Types.ContentHash.SumCase getSumCase();
  }
  /**
   * <pre>
   * ContentHash specifies a hash based content identifier for a piece of data
   * </pre>
   *
   * Protobuf type {@code regen.data.v1alpha2.ContentHash}
   */
  public static final class ContentHash extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:regen.data.v1alpha2.ContentHash)
      ContentHashOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContentHash.newBuilder() to construct.
    private ContentHash(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContentHash() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContentHash();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContentHash(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              regen.data.v1alpha2.Types.ContentHash.Raw.Builder subBuilder = null;
              if (sumCase_ == 1) {
                subBuilder = ((regen.data.v1alpha2.Types.ContentHash.Raw) sum_).toBuilder();
              }
              sum_ =
                  input.readMessage(regen.data.v1alpha2.Types.ContentHash.Raw.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((regen.data.v1alpha2.Types.ContentHash.Raw) sum_);
                sum_ = subBuilder.buildPartial();
              }
              sumCase_ = 1;
              break;
            }
            case 18: {
              regen.data.v1alpha2.Types.ContentHash.Graph.Builder subBuilder = null;
              if (sumCase_ == 2) {
                subBuilder = ((regen.data.v1alpha2.Types.ContentHash.Graph) sum_).toBuilder();
              }
              sum_ =
                  input.readMessage(regen.data.v1alpha2.Types.ContentHash.Graph.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((regen.data.v1alpha2.Types.ContentHash.Graph) sum_);
                sum_ = subBuilder.buildPartial();
              }
              sumCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              regen.data.v1alpha2.Types.ContentHash.class, regen.data.v1alpha2.Types.ContentHash.Builder.class);
    }

    public interface RawOrBuilder extends
        // @@protoc_insertion_point(interface_extends:regen.data.v1alpha2.ContentHash.Raw)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * hash represents the hash of the data based on the specified digest_algorithm
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       * @return The hash.
       */
      com.google.protobuf.ByteString getHash();

      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The enum numeric value on the wire for digestAlgorithm.
       */
      int getDigestAlgorithmValue();
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The digestAlgorithm.
       */
      regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm();

      /**
       * <pre>
       * media_type represents the MediaType for raw data.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
       * @return The enum numeric value on the wire for mediaType.
       */
      int getMediaTypeValue();
      /**
       * <pre>
       * media_type represents the MediaType for raw data.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
       * @return The mediaType.
       */
      regen.data.v1alpha2.Types.MediaType getMediaType();
    }
    /**
     * <pre>
     * Raw is the content hash type used for raw data
     * </pre>
     *
     * Protobuf type {@code regen.data.v1alpha2.ContentHash.Raw}
     */
    public static final class Raw extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:regen.data.v1alpha2.ContentHash.Raw)
        RawOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Raw.newBuilder() to construct.
      private Raw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Raw() {
        hash_ = com.google.protobuf.ByteString.EMPTY;
        digestAlgorithm_ = 0;
        mediaType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Raw();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Raw(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                hash_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                digestAlgorithm_ = rawValue;
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                mediaType_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Raw_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                regen.data.v1alpha2.Types.ContentHash.Raw.class, regen.data.v1alpha2.Types.ContentHash.Raw.Builder.class);
      }

      public static final int HASH_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString hash_;
      /**
       * <pre>
       * hash represents the hash of the data based on the specified digest_algorithm
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       * @return The hash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }

      public static final int DIGEST_ALGORITHM_FIELD_NUMBER = 2;
      private int digestAlgorithm_;
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The enum numeric value on the wire for digestAlgorithm.
       */
      @java.lang.Override public int getDigestAlgorithmValue() {
        return digestAlgorithm_;
      }
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The digestAlgorithm.
       */
      @java.lang.Override public regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm() {
        @SuppressWarnings("deprecation")
        regen.data.v1alpha2.Types.DigestAlgorithm result = regen.data.v1alpha2.Types.DigestAlgorithm.valueOf(digestAlgorithm_);
        return result == null ? regen.data.v1alpha2.Types.DigestAlgorithm.UNRECOGNIZED : result;
      }

      public static final int MEDIA_TYPE_FIELD_NUMBER = 3;
      private int mediaType_;
      /**
       * <pre>
       * media_type represents the MediaType for raw data.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
       * @return The enum numeric value on the wire for mediaType.
       */
      @java.lang.Override public int getMediaTypeValue() {
        return mediaType_;
      }
      /**
       * <pre>
       * media_type represents the MediaType for raw data.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
       * @return The mediaType.
       */
      @java.lang.Override public regen.data.v1alpha2.Types.MediaType getMediaType() {
        @SuppressWarnings("deprecation")
        regen.data.v1alpha2.Types.MediaType result = regen.data.v1alpha2.Types.MediaType.valueOf(mediaType_);
        return result == null ? regen.data.v1alpha2.Types.MediaType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!hash_.isEmpty()) {
          output.writeBytes(1, hash_);
        }
        if (digestAlgorithm_ != regen.data.v1alpha2.Types.DigestAlgorithm.DIGEST_ALGORITHM_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, digestAlgorithm_);
        }
        if (mediaType_ != regen.data.v1alpha2.Types.MediaType.MEDIA_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(3, mediaType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!hash_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, hash_);
        }
        if (digestAlgorithm_ != regen.data.v1alpha2.Types.DigestAlgorithm.DIGEST_ALGORITHM_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, digestAlgorithm_);
        }
        if (mediaType_ != regen.data.v1alpha2.Types.MediaType.MEDIA_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, mediaType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof regen.data.v1alpha2.Types.ContentHash.Raw)) {
          return super.equals(obj);
        }
        regen.data.v1alpha2.Types.ContentHash.Raw other = (regen.data.v1alpha2.Types.ContentHash.Raw) obj;

        if (!getHash()
            .equals(other.getHash())) return false;
        if (digestAlgorithm_ != other.digestAlgorithm_) return false;
        if (mediaType_ != other.mediaType_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HASH_FIELD_NUMBER;
        hash = (53 * hash) + getHash().hashCode();
        hash = (37 * hash) + DIGEST_ALGORITHM_FIELD_NUMBER;
        hash = (53 * hash) + digestAlgorithm_;
        hash = (37 * hash) + MEDIA_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + mediaType_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Raw parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(regen.data.v1alpha2.Types.ContentHash.Raw prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Raw is the content hash type used for raw data
       * </pre>
       *
       * Protobuf type {@code regen.data.v1alpha2.ContentHash.Raw}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:regen.data.v1alpha2.ContentHash.Raw)
          regen.data.v1alpha2.Types.ContentHash.RawOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Raw_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  regen.data.v1alpha2.Types.ContentHash.Raw.class, regen.data.v1alpha2.Types.ContentHash.Raw.Builder.class);
        }

        // Construct using regen.data.v1alpha2.Types.ContentHash.Raw.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          hash_ = com.google.protobuf.ByteString.EMPTY;

          digestAlgorithm_ = 0;

          mediaType_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor;
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Raw getDefaultInstanceForType() {
          return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Raw build() {
          regen.data.v1alpha2.Types.ContentHash.Raw result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Raw buildPartial() {
          regen.data.v1alpha2.Types.ContentHash.Raw result = new regen.data.v1alpha2.Types.ContentHash.Raw(this);
          result.hash_ = hash_;
          result.digestAlgorithm_ = digestAlgorithm_;
          result.mediaType_ = mediaType_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof regen.data.v1alpha2.Types.ContentHash.Raw) {
            return mergeFrom((regen.data.v1alpha2.Types.ContentHash.Raw)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(regen.data.v1alpha2.Types.ContentHash.Raw other) {
          if (other == regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance()) return this;
          if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
            setHash(other.getHash());
          }
          if (other.digestAlgorithm_ != 0) {
            setDigestAlgorithmValue(other.getDigestAlgorithmValue());
          }
          if (other.mediaType_ != 0) {
            setMediaTypeValue(other.getMediaTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          regen.data.v1alpha2.Types.ContentHash.Raw parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (regen.data.v1alpha2.Types.ContentHash.Raw) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @return The hash.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getHash() {
          return hash_;
        }
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @param value The hash to set.
         * @return This builder for chaining.
         */
        public Builder setHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          hash_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHash() {
          
          hash_ = getDefaultInstance().getHash();
          onChanged();
          return this;
        }

        private int digestAlgorithm_ = 0;
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return The enum numeric value on the wire for digestAlgorithm.
         */
        @java.lang.Override public int getDigestAlgorithmValue() {
          return digestAlgorithm_;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @param value The enum numeric value on the wire for digestAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setDigestAlgorithmValue(int value) {
          
          digestAlgorithm_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return The digestAlgorithm.
         */
        @java.lang.Override
        public regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm() {
          @SuppressWarnings("deprecation")
          regen.data.v1alpha2.Types.DigestAlgorithm result = regen.data.v1alpha2.Types.DigestAlgorithm.valueOf(digestAlgorithm_);
          return result == null ? regen.data.v1alpha2.Types.DigestAlgorithm.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @param value The digestAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setDigestAlgorithm(regen.data.v1alpha2.Types.DigestAlgorithm value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          digestAlgorithm_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDigestAlgorithm() {
          
          digestAlgorithm_ = 0;
          onChanged();
          return this;
        }

        private int mediaType_ = 0;
        /**
         * <pre>
         * media_type represents the MediaType for raw data.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
         * @return The enum numeric value on the wire for mediaType.
         */
        @java.lang.Override public int getMediaTypeValue() {
          return mediaType_;
        }
        /**
         * <pre>
         * media_type represents the MediaType for raw data.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
         * @param value The enum numeric value on the wire for mediaType to set.
         * @return This builder for chaining.
         */
        public Builder setMediaTypeValue(int value) {
          
          mediaType_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * media_type represents the MediaType for raw data.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
         * @return The mediaType.
         */
        @java.lang.Override
        public regen.data.v1alpha2.Types.MediaType getMediaType() {
          @SuppressWarnings("deprecation")
          regen.data.v1alpha2.Types.MediaType result = regen.data.v1alpha2.Types.MediaType.valueOf(mediaType_);
          return result == null ? regen.data.v1alpha2.Types.MediaType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * media_type represents the MediaType for raw data.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
         * @param value The mediaType to set.
         * @return This builder for chaining.
         */
        public Builder setMediaType(regen.data.v1alpha2.Types.MediaType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          mediaType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * media_type represents the MediaType for raw data.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.MediaType media_type = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMediaType() {
          
          mediaType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:regen.data.v1alpha2.ContentHash.Raw)
      }

      // @@protoc_insertion_point(class_scope:regen.data.v1alpha2.ContentHash.Raw)
      private static final regen.data.v1alpha2.Types.ContentHash.Raw DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new regen.data.v1alpha2.Types.ContentHash.Raw();
      }

      public static regen.data.v1alpha2.Types.ContentHash.Raw getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Raw>
          PARSER = new com.google.protobuf.AbstractParser<Raw>() {
        @java.lang.Override
        public Raw parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Raw(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Raw> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Raw> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.Raw getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GraphOrBuilder extends
        // @@protoc_insertion_point(interface_extends:regen.data.v1alpha2.ContentHash.Graph)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * hash represents the hash of the data based on the specified digest_algorithm
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       * @return The hash.
       */
      com.google.protobuf.ByteString getHash();

      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The enum numeric value on the wire for digestAlgorithm.
       */
      int getDigestAlgorithmValue();
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The digestAlgorithm.
       */
      regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm();

      /**
       * <pre>
       * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
       * @return The enum numeric value on the wire for canonicalizationAlgorithm.
       */
      int getCanonicalizationAlgorithmValue();
      /**
       * <pre>
       * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
       * @return The canonicalizationAlgorithm.
       */
      regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm getCanonicalizationAlgorithm();

      /**
       * <pre>
       * merkle_tree is the merkle tree type used for the graph hash, if any
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
       * @return The enum numeric value on the wire for merkleTree.
       */
      int getMerkleTreeValue();
      /**
       * <pre>
       * merkle_tree is the merkle tree type used for the graph hash, if any
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
       * @return The merkleTree.
       */
      regen.data.v1alpha2.Types.GraphMerkleTree getMerkleTree();
    }
    /**
     * <pre>
     * Graph is the content hash type used for RDF graph data
     * </pre>
     *
     * Protobuf type {@code regen.data.v1alpha2.ContentHash.Graph}
     */
    public static final class Graph extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:regen.data.v1alpha2.ContentHash.Graph)
        GraphOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Graph.newBuilder() to construct.
      private Graph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Graph() {
        hash_ = com.google.protobuf.ByteString.EMPTY;
        digestAlgorithm_ = 0;
        canonicalizationAlgorithm_ = 0;
        merkleTree_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Graph();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Graph(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                hash_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                digestAlgorithm_ = rawValue;
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                canonicalizationAlgorithm_ = rawValue;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                merkleTree_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Graph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                regen.data.v1alpha2.Types.ContentHash.Graph.class, regen.data.v1alpha2.Types.ContentHash.Graph.Builder.class);
      }

      public static final int HASH_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString hash_;
      /**
       * <pre>
       * hash represents the hash of the data based on the specified digest_algorithm
       * </pre>
       *
       * <code>bytes hash = 1;</code>
       * @return The hash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getHash() {
        return hash_;
      }

      public static final int DIGEST_ALGORITHM_FIELD_NUMBER = 2;
      private int digestAlgorithm_;
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The enum numeric value on the wire for digestAlgorithm.
       */
      @java.lang.Override public int getDigestAlgorithmValue() {
        return digestAlgorithm_;
      }
      /**
       * <pre>
       * digest_algorithm represents the hash digest algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
       * @return The digestAlgorithm.
       */
      @java.lang.Override public regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm() {
        @SuppressWarnings("deprecation")
        regen.data.v1alpha2.Types.DigestAlgorithm result = regen.data.v1alpha2.Types.DigestAlgorithm.valueOf(digestAlgorithm_);
        return result == null ? regen.data.v1alpha2.Types.DigestAlgorithm.UNRECOGNIZED : result;
      }

      public static final int CANONICALIZATION_ALGORITHM_FIELD_NUMBER = 3;
      private int canonicalizationAlgorithm_;
      /**
       * <pre>
       * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
       * @return The enum numeric value on the wire for canonicalizationAlgorithm.
       */
      @java.lang.Override public int getCanonicalizationAlgorithmValue() {
        return canonicalizationAlgorithm_;
      }
      /**
       * <pre>
       * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
       * @return The canonicalizationAlgorithm.
       */
      @java.lang.Override public regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm getCanonicalizationAlgorithm() {
        @SuppressWarnings("deprecation")
        regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm result = regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.valueOf(canonicalizationAlgorithm_);
        return result == null ? regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.UNRECOGNIZED : result;
      }

      public static final int MERKLE_TREE_FIELD_NUMBER = 4;
      private int merkleTree_;
      /**
       * <pre>
       * merkle_tree is the merkle tree type used for the graph hash, if any
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
       * @return The enum numeric value on the wire for merkleTree.
       */
      @java.lang.Override public int getMerkleTreeValue() {
        return merkleTree_;
      }
      /**
       * <pre>
       * merkle_tree is the merkle tree type used for the graph hash, if any
       * </pre>
       *
       * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
       * @return The merkleTree.
       */
      @java.lang.Override public regen.data.v1alpha2.Types.GraphMerkleTree getMerkleTree() {
        @SuppressWarnings("deprecation")
        regen.data.v1alpha2.Types.GraphMerkleTree result = regen.data.v1alpha2.Types.GraphMerkleTree.valueOf(merkleTree_);
        return result == null ? regen.data.v1alpha2.Types.GraphMerkleTree.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!hash_.isEmpty()) {
          output.writeBytes(1, hash_);
        }
        if (digestAlgorithm_ != regen.data.v1alpha2.Types.DigestAlgorithm.DIGEST_ALGORITHM_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, digestAlgorithm_);
        }
        if (canonicalizationAlgorithm_ != regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED.getNumber()) {
          output.writeEnum(3, canonicalizationAlgorithm_);
        }
        if (merkleTree_ != regen.data.v1alpha2.Types.GraphMerkleTree.GRAPH_MERKLE_TREE_NONE_UNSPECIFIED.getNumber()) {
          output.writeEnum(4, merkleTree_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!hash_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, hash_);
        }
        if (digestAlgorithm_ != regen.data.v1alpha2.Types.DigestAlgorithm.DIGEST_ALGORITHM_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, digestAlgorithm_);
        }
        if (canonicalizationAlgorithm_ != regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.GRAPH_CANONICALIZATION_ALGORITHM_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, canonicalizationAlgorithm_);
        }
        if (merkleTree_ != regen.data.v1alpha2.Types.GraphMerkleTree.GRAPH_MERKLE_TREE_NONE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, merkleTree_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof regen.data.v1alpha2.Types.ContentHash.Graph)) {
          return super.equals(obj);
        }
        regen.data.v1alpha2.Types.ContentHash.Graph other = (regen.data.v1alpha2.Types.ContentHash.Graph) obj;

        if (!getHash()
            .equals(other.getHash())) return false;
        if (digestAlgorithm_ != other.digestAlgorithm_) return false;
        if (canonicalizationAlgorithm_ != other.canonicalizationAlgorithm_) return false;
        if (merkleTree_ != other.merkleTree_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HASH_FIELD_NUMBER;
        hash = (53 * hash) + getHash().hashCode();
        hash = (37 * hash) + DIGEST_ALGORITHM_FIELD_NUMBER;
        hash = (53 * hash) + digestAlgorithm_;
        hash = (37 * hash) + CANONICALIZATION_ALGORITHM_FIELD_NUMBER;
        hash = (53 * hash) + canonicalizationAlgorithm_;
        hash = (37 * hash) + MERKLE_TREE_FIELD_NUMBER;
        hash = (53 * hash) + merkleTree_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static regen.data.v1alpha2.Types.ContentHash.Graph parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(regen.data.v1alpha2.Types.ContentHash.Graph prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Graph is the content hash type used for RDF graph data
       * </pre>
       *
       * Protobuf type {@code regen.data.v1alpha2.ContentHash.Graph}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:regen.data.v1alpha2.ContentHash.Graph)
          regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Graph_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  regen.data.v1alpha2.Types.ContentHash.Graph.class, regen.data.v1alpha2.Types.ContentHash.Graph.Builder.class);
        }

        // Construct using regen.data.v1alpha2.Types.ContentHash.Graph.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          hash_ = com.google.protobuf.ByteString.EMPTY;

          digestAlgorithm_ = 0;

          canonicalizationAlgorithm_ = 0;

          merkleTree_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor;
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Graph getDefaultInstanceForType() {
          return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Graph build() {
          regen.data.v1alpha2.Types.ContentHash.Graph result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public regen.data.v1alpha2.Types.ContentHash.Graph buildPartial() {
          regen.data.v1alpha2.Types.ContentHash.Graph result = new regen.data.v1alpha2.Types.ContentHash.Graph(this);
          result.hash_ = hash_;
          result.digestAlgorithm_ = digestAlgorithm_;
          result.canonicalizationAlgorithm_ = canonicalizationAlgorithm_;
          result.merkleTree_ = merkleTree_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof regen.data.v1alpha2.Types.ContentHash.Graph) {
            return mergeFrom((regen.data.v1alpha2.Types.ContentHash.Graph)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(regen.data.v1alpha2.Types.ContentHash.Graph other) {
          if (other == regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance()) return this;
          if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
            setHash(other.getHash());
          }
          if (other.digestAlgorithm_ != 0) {
            setDigestAlgorithmValue(other.getDigestAlgorithmValue());
          }
          if (other.canonicalizationAlgorithm_ != 0) {
            setCanonicalizationAlgorithmValue(other.getCanonicalizationAlgorithmValue());
          }
          if (other.merkleTree_ != 0) {
            setMerkleTreeValue(other.getMerkleTreeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          regen.data.v1alpha2.Types.ContentHash.Graph parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (regen.data.v1alpha2.Types.ContentHash.Graph) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @return The hash.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getHash() {
          return hash_;
        }
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @param value The hash to set.
         * @return This builder for chaining.
         */
        public Builder setHash(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          hash_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * hash represents the hash of the data based on the specified digest_algorithm
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHash() {
          
          hash_ = getDefaultInstance().getHash();
          onChanged();
          return this;
        }

        private int digestAlgorithm_ = 0;
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return The enum numeric value on the wire for digestAlgorithm.
         */
        @java.lang.Override public int getDigestAlgorithmValue() {
          return digestAlgorithm_;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @param value The enum numeric value on the wire for digestAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setDigestAlgorithmValue(int value) {
          
          digestAlgorithm_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return The digestAlgorithm.
         */
        @java.lang.Override
        public regen.data.v1alpha2.Types.DigestAlgorithm getDigestAlgorithm() {
          @SuppressWarnings("deprecation")
          regen.data.v1alpha2.Types.DigestAlgorithm result = regen.data.v1alpha2.Types.DigestAlgorithm.valueOf(digestAlgorithm_);
          return result == null ? regen.data.v1alpha2.Types.DigestAlgorithm.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @param value The digestAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setDigestAlgorithm(regen.data.v1alpha2.Types.DigestAlgorithm value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          digestAlgorithm_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * digest_algorithm represents the hash digest algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.DigestAlgorithm digest_algorithm = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDigestAlgorithm() {
          
          digestAlgorithm_ = 0;
          onChanged();
          return this;
        }

        private int canonicalizationAlgorithm_ = 0;
        /**
         * <pre>
         * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
         * @return The enum numeric value on the wire for canonicalizationAlgorithm.
         */
        @java.lang.Override public int getCanonicalizationAlgorithmValue() {
          return canonicalizationAlgorithm_;
        }
        /**
         * <pre>
         * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
         * @param value The enum numeric value on the wire for canonicalizationAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setCanonicalizationAlgorithmValue(int value) {
          
          canonicalizationAlgorithm_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
         * @return The canonicalizationAlgorithm.
         */
        @java.lang.Override
        public regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm getCanonicalizationAlgorithm() {
          @SuppressWarnings("deprecation")
          regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm result = regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.valueOf(canonicalizationAlgorithm_);
          return result == null ? regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
         * @param value The canonicalizationAlgorithm to set.
         * @return This builder for chaining.
         */
        public Builder setCanonicalizationAlgorithm(regen.data.v1alpha2.Types.GraphCanonicalizationAlgorithm value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          canonicalizationAlgorithm_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * graph_canonicalization_algorithm represents the RDF graph canonicalization algorithm.
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphCanonicalizationAlgorithm canonicalization_algorithm = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCanonicalizationAlgorithm() {
          
          canonicalizationAlgorithm_ = 0;
          onChanged();
          return this;
        }

        private int merkleTree_ = 0;
        /**
         * <pre>
         * merkle_tree is the merkle tree type used for the graph hash, if any
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
         * @return The enum numeric value on the wire for merkleTree.
         */
        @java.lang.Override public int getMerkleTreeValue() {
          return merkleTree_;
        }
        /**
         * <pre>
         * merkle_tree is the merkle tree type used for the graph hash, if any
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
         * @param value The enum numeric value on the wire for merkleTree to set.
         * @return This builder for chaining.
         */
        public Builder setMerkleTreeValue(int value) {
          
          merkleTree_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * merkle_tree is the merkle tree type used for the graph hash, if any
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
         * @return The merkleTree.
         */
        @java.lang.Override
        public regen.data.v1alpha2.Types.GraphMerkleTree getMerkleTree() {
          @SuppressWarnings("deprecation")
          regen.data.v1alpha2.Types.GraphMerkleTree result = regen.data.v1alpha2.Types.GraphMerkleTree.valueOf(merkleTree_);
          return result == null ? regen.data.v1alpha2.Types.GraphMerkleTree.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * merkle_tree is the merkle tree type used for the graph hash, if any
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
         * @param value The merkleTree to set.
         * @return This builder for chaining.
         */
        public Builder setMerkleTree(regen.data.v1alpha2.Types.GraphMerkleTree value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          merkleTree_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * merkle_tree is the merkle tree type used for the graph hash, if any
         * </pre>
         *
         * <code>.regen.data.v1alpha2.GraphMerkleTree merkle_tree = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMerkleTree() {
          
          merkleTree_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:regen.data.v1alpha2.ContentHash.Graph)
      }

      // @@protoc_insertion_point(class_scope:regen.data.v1alpha2.ContentHash.Graph)
      private static final regen.data.v1alpha2.Types.ContentHash.Graph DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new regen.data.v1alpha2.Types.ContentHash.Graph();
      }

      public static regen.data.v1alpha2.Types.ContentHash.Graph getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Graph>
          PARSER = new com.google.protobuf.AbstractParser<Graph>() {
        @java.lang.Override
        public Graph parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Graph(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Graph> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Graph> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.Graph getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int sumCase_ = 0;
    private java.lang.Object sum_;
    public enum SumCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RAW(1),
      GRAPH(2),
      SUM_NOT_SET(0);
      private final int value;
      private SumCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SumCase valueOf(int value) {
        return forNumber(value);
      }

      public static SumCase forNumber(int value) {
        switch (value) {
          case 1: return RAW;
          case 2: return GRAPH;
          case 0: return SUM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SumCase
    getSumCase() {
      return SumCase.forNumber(
          sumCase_);
    }

    public static final int RAW_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     * @return Whether the raw field is set.
     */
    @java.lang.Override
    public boolean hasRaw() {
      return sumCase_ == 1;
    }
    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     * @return The raw.
     */
    @java.lang.Override
    public regen.data.v1alpha2.Types.ContentHash.Raw getRaw() {
      if (sumCase_ == 1) {
         return (regen.data.v1alpha2.Types.ContentHash.Raw) sum_;
      }
      return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
    }
    /**
     * <pre>
     * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
     * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
     * All other content encodings specify a deterministic, canonical encoding allowing implementations to
     * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
     * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
     */
    @java.lang.Override
    public regen.data.v1alpha2.Types.ContentHash.RawOrBuilder getRawOrBuilder() {
      if (sumCase_ == 1) {
         return (regen.data.v1alpha2.Types.ContentHash.Raw) sum_;
      }
      return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
    }

    public static final int GRAPH_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     * @return Whether the graph field is set.
     */
    @java.lang.Override
    public boolean hasGraph() {
      return sumCase_ == 2;
    }
    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     * @return The graph.
     */
    @java.lang.Override
    public regen.data.v1alpha2.Types.ContentHash.Graph getGraph() {
      if (sumCase_ == 2) {
         return (regen.data.v1alpha2.Types.ContentHash.Graph) sum_;
      }
      return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
    }
    /**
     * <pre>
     * Graph specifies graph data that conforms to the RDF data model.
     * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
     * </pre>
     *
     * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
     */
    @java.lang.Override
    public regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder getGraphOrBuilder() {
      if (sumCase_ == 2) {
         return (regen.data.v1alpha2.Types.ContentHash.Graph) sum_;
      }
      return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sumCase_ == 1) {
        output.writeMessage(1, (regen.data.v1alpha2.Types.ContentHash.Raw) sum_);
      }
      if (sumCase_ == 2) {
        output.writeMessage(2, (regen.data.v1alpha2.Types.ContentHash.Graph) sum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sumCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (regen.data.v1alpha2.Types.ContentHash.Raw) sum_);
      }
      if (sumCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (regen.data.v1alpha2.Types.ContentHash.Graph) sum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof regen.data.v1alpha2.Types.ContentHash)) {
        return super.equals(obj);
      }
      regen.data.v1alpha2.Types.ContentHash other = (regen.data.v1alpha2.Types.ContentHash) obj;

      if (!getSumCase().equals(other.getSumCase())) return false;
      switch (sumCase_) {
        case 1:
          if (!getRaw()
              .equals(other.getRaw())) return false;
          break;
        case 2:
          if (!getGraph()
              .equals(other.getGraph())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (sumCase_) {
        case 1:
          hash = (37 * hash) + RAW_FIELD_NUMBER;
          hash = (53 * hash) + getRaw().hashCode();
          break;
        case 2:
          hash = (37 * hash) + GRAPH_FIELD_NUMBER;
          hash = (53 * hash) + getGraph().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.ContentHash parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(regen.data.v1alpha2.Types.ContentHash prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ContentHash specifies a hash based content identifier for a piece of data
     * </pre>
     *
     * Protobuf type {@code regen.data.v1alpha2.ContentHash}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:regen.data.v1alpha2.ContentHash)
        regen.data.v1alpha2.Types.ContentHashOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                regen.data.v1alpha2.Types.ContentHash.class, regen.data.v1alpha2.Types.ContentHash.Builder.class);
      }

      // Construct using regen.data.v1alpha2.Types.ContentHash.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sumCase_ = 0;
        sum_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_ContentHash_descriptor;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash getDefaultInstanceForType() {
        return regen.data.v1alpha2.Types.ContentHash.getDefaultInstance();
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash build() {
        regen.data.v1alpha2.Types.ContentHash result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash buildPartial() {
        regen.data.v1alpha2.Types.ContentHash result = new regen.data.v1alpha2.Types.ContentHash(this);
        if (sumCase_ == 1) {
          if (rawBuilder_ == null) {
            result.sum_ = sum_;
          } else {
            result.sum_ = rawBuilder_.build();
          }
        }
        if (sumCase_ == 2) {
          if (graphBuilder_ == null) {
            result.sum_ = sum_;
          } else {
            result.sum_ = graphBuilder_.build();
          }
        }
        result.sumCase_ = sumCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof regen.data.v1alpha2.Types.ContentHash) {
          return mergeFrom((regen.data.v1alpha2.Types.ContentHash)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(regen.data.v1alpha2.Types.ContentHash other) {
        if (other == regen.data.v1alpha2.Types.ContentHash.getDefaultInstance()) return this;
        switch (other.getSumCase()) {
          case RAW: {
            mergeRaw(other.getRaw());
            break;
          }
          case GRAPH: {
            mergeGraph(other.getGraph());
            break;
          }
          case SUM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        regen.data.v1alpha2.Types.ContentHash parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (regen.data.v1alpha2.Types.ContentHash) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sumCase_ = 0;
      private java.lang.Object sum_;
      public SumCase
          getSumCase() {
        return SumCase.forNumber(
            sumCase_);
      }

      public Builder clearSum() {
        sumCase_ = 0;
        sum_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          regen.data.v1alpha2.Types.ContentHash.Raw, regen.data.v1alpha2.Types.ContentHash.Raw.Builder, regen.data.v1alpha2.Types.ContentHash.RawOrBuilder> rawBuilder_;
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       * @return Whether the raw field is set.
       */
      @java.lang.Override
      public boolean hasRaw() {
        return sumCase_ == 1;
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       * @return The raw.
       */
      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.Raw getRaw() {
        if (rawBuilder_ == null) {
          if (sumCase_ == 1) {
            return (regen.data.v1alpha2.Types.ContentHash.Raw) sum_;
          }
          return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
        } else {
          if (sumCase_ == 1) {
            return rawBuilder_.getMessage();
          }
          return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      public Builder setRaw(regen.data.v1alpha2.Types.ContentHash.Raw value) {
        if (rawBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sum_ = value;
          onChanged();
        } else {
          rawBuilder_.setMessage(value);
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      public Builder setRaw(
          regen.data.v1alpha2.Types.ContentHash.Raw.Builder builderForValue) {
        if (rawBuilder_ == null) {
          sum_ = builderForValue.build();
          onChanged();
        } else {
          rawBuilder_.setMessage(builderForValue.build());
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      public Builder mergeRaw(regen.data.v1alpha2.Types.ContentHash.Raw value) {
        if (rawBuilder_ == null) {
          if (sumCase_ == 1 &&
              sum_ != regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance()) {
            sum_ = regen.data.v1alpha2.Types.ContentHash.Raw.newBuilder((regen.data.v1alpha2.Types.ContentHash.Raw) sum_)
                .mergeFrom(value).buildPartial();
          } else {
            sum_ = value;
          }
          onChanged();
        } else {
          if (sumCase_ == 1) {
            rawBuilder_.mergeFrom(value);
          }
          rawBuilder_.setMessage(value);
        }
        sumCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      public Builder clearRaw() {
        if (rawBuilder_ == null) {
          if (sumCase_ == 1) {
            sumCase_ = 0;
            sum_ = null;
            onChanged();
          }
        } else {
          if (sumCase_ == 1) {
            sumCase_ = 0;
            sum_ = null;
          }
          rawBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      public regen.data.v1alpha2.Types.ContentHash.Raw.Builder getRawBuilder() {
        return getRawFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.RawOrBuilder getRawOrBuilder() {
        if ((sumCase_ == 1) && (rawBuilder_ != null)) {
          return rawBuilder_.getMessageOrBuilder();
        } else {
          if (sumCase_ == 1) {
            return (regen.data.v1alpha2.Types.ContentHash.Raw) sum_;
          }
          return regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Raw specifies "raw" data which does not specify a deterministic, canonical encoding.
       * Users of these hashes MUST maintain a copy of the hashed data which is preserved bit by bit.
       * All other content encodings specify a deterministic, canonical encoding allowing implementations to
       * choose from a variety of alternative formats for transport and encoding while maintaining the guarantee
       * that the canonical hash will not change. The media type for "raw" data is defined by the MediaType enum.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Raw raw = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          regen.data.v1alpha2.Types.ContentHash.Raw, regen.data.v1alpha2.Types.ContentHash.Raw.Builder, regen.data.v1alpha2.Types.ContentHash.RawOrBuilder> 
          getRawFieldBuilder() {
        if (rawBuilder_ == null) {
          if (!(sumCase_ == 1)) {
            sum_ = regen.data.v1alpha2.Types.ContentHash.Raw.getDefaultInstance();
          }
          rawBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              regen.data.v1alpha2.Types.ContentHash.Raw, regen.data.v1alpha2.Types.ContentHash.Raw.Builder, regen.data.v1alpha2.Types.ContentHash.RawOrBuilder>(
                  (regen.data.v1alpha2.Types.ContentHash.Raw) sum_,
                  getParentForChildren(),
                  isClean());
          sum_ = null;
        }
        sumCase_ = 1;
        onChanged();;
        return rawBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          regen.data.v1alpha2.Types.ContentHash.Graph, regen.data.v1alpha2.Types.ContentHash.Graph.Builder, regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder> graphBuilder_;
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       * @return Whether the graph field is set.
       */
      @java.lang.Override
      public boolean hasGraph() {
        return sumCase_ == 2;
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       * @return The graph.
       */
      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.Graph getGraph() {
        if (graphBuilder_ == null) {
          if (sumCase_ == 2) {
            return (regen.data.v1alpha2.Types.ContentHash.Graph) sum_;
          }
          return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
        } else {
          if (sumCase_ == 2) {
            return graphBuilder_.getMessage();
          }
          return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      public Builder setGraph(regen.data.v1alpha2.Types.ContentHash.Graph value) {
        if (graphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sum_ = value;
          onChanged();
        } else {
          graphBuilder_.setMessage(value);
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      public Builder setGraph(
          regen.data.v1alpha2.Types.ContentHash.Graph.Builder builderForValue) {
        if (graphBuilder_ == null) {
          sum_ = builderForValue.build();
          onChanged();
        } else {
          graphBuilder_.setMessage(builderForValue.build());
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      public Builder mergeGraph(regen.data.v1alpha2.Types.ContentHash.Graph value) {
        if (graphBuilder_ == null) {
          if (sumCase_ == 2 &&
              sum_ != regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance()) {
            sum_ = regen.data.v1alpha2.Types.ContentHash.Graph.newBuilder((regen.data.v1alpha2.Types.ContentHash.Graph) sum_)
                .mergeFrom(value).buildPartial();
          } else {
            sum_ = value;
          }
          onChanged();
        } else {
          if (sumCase_ == 2) {
            graphBuilder_.mergeFrom(value);
          }
          graphBuilder_.setMessage(value);
        }
        sumCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      public Builder clearGraph() {
        if (graphBuilder_ == null) {
          if (sumCase_ == 2) {
            sumCase_ = 0;
            sum_ = null;
            onChanged();
          }
        } else {
          if (sumCase_ == 2) {
            sumCase_ = 0;
            sum_ = null;
          }
          graphBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      public regen.data.v1alpha2.Types.ContentHash.Graph.Builder getGraphBuilder() {
        return getGraphFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      @java.lang.Override
      public regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder getGraphOrBuilder() {
        if ((sumCase_ == 2) && (graphBuilder_ != null)) {
          return graphBuilder_.getMessageOrBuilder();
        } else {
          if (sumCase_ == 2) {
            return (regen.data.v1alpha2.Types.ContentHash.Graph) sum_;
          }
          return regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Graph specifies graph data that conforms to the RDF data model.
       * The canonicalization algorithm used for an RDF graph is specified by GraphCanonicalizationAlgorithm.
       * </pre>
       *
       * <code>.regen.data.v1alpha2.ContentHash.Graph graph = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          regen.data.v1alpha2.Types.ContentHash.Graph, regen.data.v1alpha2.Types.ContentHash.Graph.Builder, regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder> 
          getGraphFieldBuilder() {
        if (graphBuilder_ == null) {
          if (!(sumCase_ == 2)) {
            sum_ = regen.data.v1alpha2.Types.ContentHash.Graph.getDefaultInstance();
          }
          graphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              regen.data.v1alpha2.Types.ContentHash.Graph, regen.data.v1alpha2.Types.ContentHash.Graph.Builder, regen.data.v1alpha2.Types.ContentHash.GraphOrBuilder>(
                  (regen.data.v1alpha2.Types.ContentHash.Graph) sum_,
                  getParentForChildren(),
                  isClean());
          sum_ = null;
        }
        sumCase_ = 2;
        onChanged();;
        return graphBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:regen.data.v1alpha2.ContentHash)
    }

    // @@protoc_insertion_point(class_scope:regen.data.v1alpha2.ContentHash)
    private static final regen.data.v1alpha2.Types.ContentHash DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new regen.data.v1alpha2.Types.ContentHash();
    }

    public static regen.data.v1alpha2.Types.ContentHash getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContentHash>
        PARSER = new com.google.protobuf.AbstractParser<ContentHash>() {
      @java.lang.Override
      public ContentHash parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContentHash(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContentHash> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContentHash> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public regen.data.v1alpha2.Types.ContentHash getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignerEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:regen.data.v1alpha2.SignerEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * signer is the address of the signer
     * </pre>
     *
     * <code>string signer = 1;</code>
     * @return The signer.
     */
    java.lang.String getSigner();
    /**
     * <pre>
     * signer is the address of the signer
     * </pre>
     *
     * <code>string signer = 1;</code>
     * @return The bytes for signer.
     */
    com.google.protobuf.ByteString
        getSignerBytes();

    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return The timestamp.
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();
  }
  /**
   * <pre>
   * SignerEntry is a signer entry wrapping a signer address and timestamp
   * </pre>
   *
   * Protobuf type {@code regen.data.v1alpha2.SignerEntry}
   */
  public static final class SignerEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:regen.data.v1alpha2.SignerEntry)
      SignerEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignerEntry.newBuilder() to construct.
    private SignerEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignerEntry() {
      signer_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignerEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignerEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              signer_ = s;
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (timestamp_ != null) {
                subBuilder = timestamp_.toBuilder();
              }
              timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestamp_);
                timestamp_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_SignerEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_SignerEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              regen.data.v1alpha2.Types.SignerEntry.class, regen.data.v1alpha2.Types.SignerEntry.Builder.class);
    }

    public static final int SIGNER_FIELD_NUMBER = 1;
    private volatile java.lang.Object signer_;
    /**
     * <pre>
     * signer is the address of the signer
     * </pre>
     *
     * <code>string signer = 1;</code>
     * @return The signer.
     */
    @java.lang.Override
    public java.lang.String getSigner() {
      java.lang.Object ref = signer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        signer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * signer is the address of the signer
     * </pre>
     *
     * <code>string signer = 1;</code>
     * @return The bytes for signer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignerBytes() {
      java.lang.Object ref = signer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }
    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * timestamp is the time at which the data was signed
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return getTimestamp();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSignerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, signer_);
      }
      if (timestamp_ != null) {
        output.writeMessage(2, getTimestamp());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSignerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, signer_);
      }
      if (timestamp_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTimestamp());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof regen.data.v1alpha2.Types.SignerEntry)) {
        return super.equals(obj);
      }
      regen.data.v1alpha2.Types.SignerEntry other = (regen.data.v1alpha2.Types.SignerEntry) obj;

      if (!getSigner()
          .equals(other.getSigner())) return false;
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIGNER_FIELD_NUMBER;
      hash = (53 * hash) + getSigner().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static regen.data.v1alpha2.Types.SignerEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(regen.data.v1alpha2.Types.SignerEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignerEntry is a signer entry wrapping a signer address and timestamp
     * </pre>
     *
     * Protobuf type {@code regen.data.v1alpha2.SignerEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:regen.data.v1alpha2.SignerEntry)
        regen.data.v1alpha2.Types.SignerEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_SignerEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_SignerEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                regen.data.v1alpha2.Types.SignerEntry.class, regen.data.v1alpha2.Types.SignerEntry.Builder.class);
      }

      // Construct using regen.data.v1alpha2.Types.SignerEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        signer_ = "";

        if (timestampBuilder_ == null) {
          timestamp_ = null;
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return regen.data.v1alpha2.Types.internal_static_regen_data_v1alpha2_SignerEntry_descriptor;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.SignerEntry getDefaultInstanceForType() {
        return regen.data.v1alpha2.Types.SignerEntry.getDefaultInstance();
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.SignerEntry build() {
        regen.data.v1alpha2.Types.SignerEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public regen.data.v1alpha2.Types.SignerEntry buildPartial() {
        regen.data.v1alpha2.Types.SignerEntry result = new regen.data.v1alpha2.Types.SignerEntry(this);
        result.signer_ = signer_;
        if (timestampBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof regen.data.v1alpha2.Types.SignerEntry) {
          return mergeFrom((regen.data.v1alpha2.Types.SignerEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(regen.data.v1alpha2.Types.SignerEntry other) {
        if (other == regen.data.v1alpha2.Types.SignerEntry.getDefaultInstance()) return this;
        if (!other.getSigner().isEmpty()) {
          signer_ = other.signer_;
          onChanged();
        }
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        regen.data.v1alpha2.Types.SignerEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (regen.data.v1alpha2.Types.SignerEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object signer_ = "";
      /**
       * <pre>
       * signer is the address of the signer
       * </pre>
       *
       * <code>string signer = 1;</code>
       * @return The signer.
       */
      public java.lang.String getSigner() {
        java.lang.Object ref = signer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          signer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * signer is the address of the signer
       * </pre>
       *
       * <code>string signer = 1;</code>
       * @return The bytes for signer.
       */
      public com.google.protobuf.ByteString
          getSignerBytes() {
        java.lang.Object ref = signer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * signer is the address of the signer
       * </pre>
       *
       * <code>string signer = 1;</code>
       * @param value The signer to set.
       * @return This builder for chaining.
       */
      public Builder setSigner(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signer is the address of the signer
       * </pre>
       *
       * <code>string signer = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSigner() {
        
        signer_ = getDefaultInstance().getSigner();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signer is the address of the signer
       * </pre>
       *
       * <code>string signer = 1;</code>
       * @param value The bytes for signer to set.
       * @return This builder for chaining.
       */
      public Builder setSignerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        signer_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp timestamp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       * @return Whether the timestamp field is set.
       */
      public boolean hasTimestamp() {
        return timestampBuilder_ != null || timestamp_ != null;
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       * @return The timestamp.
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
          onChanged();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (timestamp_ != null) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
            timestamp_ = value;
          }
          onChanged();
        } else {
          timestampBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestamp_ = null;
          timestampBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * timestamp is the time at which the data was signed
       * </pre>
       *
       * <code>.google.protobuf.Timestamp timestamp = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:regen.data.v1alpha2.SignerEntry)
    }

    // @@protoc_insertion_point(class_scope:regen.data.v1alpha2.SignerEntry)
    private static final regen.data.v1alpha2.Types.SignerEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new regen.data.v1alpha2.Types.SignerEntry();
    }

    public static regen.data.v1alpha2.Types.SignerEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignerEntry>
        PARSER = new com.google.protobuf.AbstractParser<SignerEntry>() {
      @java.lang.Override
      public SignerEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignerEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignerEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignerEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public regen.data.v1alpha2.Types.SignerEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_regen_data_v1alpha2_ContentHash_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_regen_data_v1alpha2_ContentHash_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_regen_data_v1alpha2_ContentHash_Raw_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_regen_data_v1alpha2_ContentHash_Graph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_regen_data_v1alpha2_SignerEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_regen_data_v1alpha2_SignerEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037regen/data/v1alpha2/types.proto\022\023regen" +
      ".data.v1alpha2\032\037google/protobuf/timestam" +
      "p.proto\"\370\003\n\013ContentHash\0223\n\003raw\030\001 \001(\0132$.r" +
      "egen.data.v1alpha2.ContentHash.RawH\000\0227\n\005" +
      "graph\030\002 \001(\0132&.regen.data.v1alpha2.Conten" +
      "tHash.GraphH\000\032\207\001\n\003Raw\022\014\n\004hash\030\001 \001(\014\022>\n\020d" +
      "igest_algorithm\030\002 \001(\0162$.regen.data.v1alp" +
      "ha2.DigestAlgorithm\0222\n\nmedia_type\030\003 \001(\0162" +
      "\036.regen.data.v1alpha2.MediaType\032\351\001\n\005Grap" +
      "h\022\014\n\004hash\030\001 \001(\014\022>\n\020digest_algorithm\030\002 \001(" +
      "\0162$.regen.data.v1alpha2.DigestAlgorithm\022" +
      "W\n\032canonicalization_algorithm\030\003 \001(\01623.re" +
      "gen.data.v1alpha2.GraphCanonicalizationA" +
      "lgorithm\0229\n\013merkle_tree\030\004 \001(\0162$.regen.da" +
      "ta.v1alpha2.GraphMerkleTreeB\005\n\003sum\"L\n\013Si" +
      "gnerEntry\022\016\n\006signer\030\001 \001(\t\022-\n\ttimestamp\030\002" +
      " \001(\0132\032.google.protobuf.Timestamp*\211\003\n\tMed" +
      "iaType\022\032\n\026MEDIA_TYPE_UNSPECIFIED\020\000\022\031\n\025ME" +
      "DIA_TYPE_TEXT_PLAIN\020\001\022\023\n\017MEDIA_TYPE_JSON" +
      "\020\002\022\022\n\016MEDIA_TYPE_CSV\020\003\022\022\n\016MEDIA_TYPE_XML" +
      "\020\004\022\022\n\016MEDIA_TYPE_PDF\020\005\022\023\n\017MEDIA_TYPE_TIF" +
      "F\020\020\022\022\n\016MEDIA_TYPE_JPG\020\021\022\022\n\016MEDIA_TYPE_PN" +
      "G\020\022\022\022\n\016MEDIA_TYPE_SVG\020\023\022\023\n\017MEDIA_TYPE_WE" +
      "BP\020\024\022\023\n\017MEDIA_TYPE_AVIF\020\025\022\022\n\016MEDIA_TYPE_" +
      "GIF\020\026\022\023\n\017MEDIA_TYPE_APNG\020\027\022\023\n\017MEDIA_TYPE" +
      "_MPEG\020 \022\022\n\016MEDIA_TYPE_MP4\020!\022\023\n\017MEDIA_TYP" +
      "E_WEBM\020\"\022\022\n\016MEDIA_TYPE_OGG\020#*\202\001\n\036GraphCa" +
      "nonicalizationAlgorithm\0220\n,GRAPH_CANONIC" +
      "ALIZATION_ALGORITHM_UNSPECIFIED\020\000\022.\n*GRA" +
      "PH_CANONICALIZATION_ALGORITHM_URDNA2015\020" +
      "\001*9\n\017GraphMerkleTree\022&\n\"GRAPH_MERKLE_TRE" +
      "E_NONE_UNSPECIFIED\020\000*U\n\017DigestAlgorithm\022" +
      " \n\034DIGEST_ALGORITHM_UNSPECIFIED\020\000\022 \n\034DIG" +
      "EST_ALGORITHM_BLAKE2B_256\020\001B.Z,github.co" +
      "m/regen-network/regen-ledger/x/datab\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_regen_data_v1alpha2_ContentHash_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_regen_data_v1alpha2_ContentHash_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_regen_data_v1alpha2_ContentHash_descriptor,
        new java.lang.String[] { "Raw", "Graph", "Sum", });
    internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor =
      internal_static_regen_data_v1alpha2_ContentHash_descriptor.getNestedTypes().get(0);
    internal_static_regen_data_v1alpha2_ContentHash_Raw_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_regen_data_v1alpha2_ContentHash_Raw_descriptor,
        new java.lang.String[] { "Hash", "DigestAlgorithm", "MediaType", });
    internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor =
      internal_static_regen_data_v1alpha2_ContentHash_descriptor.getNestedTypes().get(1);
    internal_static_regen_data_v1alpha2_ContentHash_Graph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_regen_data_v1alpha2_ContentHash_Graph_descriptor,
        new java.lang.String[] { "Hash", "DigestAlgorithm", "CanonicalizationAlgorithm", "MerkleTree", });
    internal_static_regen_data_v1alpha2_SignerEntry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_regen_data_v1alpha2_SignerEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_regen_data_v1alpha2_SignerEntry_descriptor,
        new java.lang.String[] { "Signer", "Timestamp", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
