// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/v1beta1/params.proto

package axelar.tss.v1beta1;

public final class ParamsOuterClass {
  private ParamsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.v1beta1.Params)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement> 
        getKeyRequirementsList();
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    axelar.tss.exported.v1beta1.Types.KeyRequirement getKeyRequirements(int index);
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    int getKeyRequirementsCount();
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    java.util.List<? extends axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder> 
        getKeyRequirementsOrBuilderList();
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
        int index);

    /**
     * <pre>
     * SuspendDurationInBlocks defines the number of blocks a
     * validator is disallowed to participate in any TSS ceremony after
     * committing a malicious behaviour during signing
     * </pre>
     *
     * <code>int64 suspend_duration_in_blocks = 2;</code>
     * @return The suspendDurationInBlocks.
     */
    long getSuspendDurationInBlocks();

    /**
     * <pre>
     * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
     * emit the event asking validators to send their heartbeats
     * </pre>
     *
     * <code>int64 heartbeat_period_in_blocks = 3;</code>
     * @return The heartbeatPeriodInBlocks.
     */
    long getHeartbeatPeriodInBlocks();

    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     * @return Whether the maxMissedBlocksPerWindow field is set.
     */
    boolean hasMaxMissedBlocksPerWindow();
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     * @return The maxMissedBlocksPerWindow.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMaxMissedBlocksPerWindow();
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder();

    /**
     * <code>int64 unbonding_locking_key_rotation_count = 5;</code>
     * @return The unbondingLockingKeyRotationCount.
     */
    long getUnbondingLockingKeyRotationCount();

    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     * @return Whether the externalMultisigThreshold field is set.
     */
    boolean hasExternalMultisigThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     * @return The externalMultisigThreshold.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getExternalMultisigThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder();

    /**
     * <code>int64 max_sign_queue_size = 7;</code>
     * @return The maxSignQueueSize.
     */
    long getMaxSignQueueSize();

    /**
     * <code>int64 max_simultaneous_sign_shares = 8;</code>
     * @return The maxSimultaneousSignShares.
     */
    long getMaxSimultaneousSignShares();

    /**
     * <code>int64 tss_signed_blocks_window = 9;</code>
     * @return The tssSignedBlocksWindow.
     */
    long getTssSignedBlocksWindow();
  }
  /**
   * <pre>
   * Params is the parameter set for this module
   * </pre>
   *
   * Protobuf type {@code axelar.tss.v1beta1.Params}
   */
  public static final class Params extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.v1beta1.Params)
      ParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Params.newBuilder() to construct.
    private Params(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Params() {
      keyRequirements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Params();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Params(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keyRequirements_ = new java.util.ArrayList<axelar.tss.exported.v1beta1.Types.KeyRequirement>();
                mutable_bitField0_ |= 0x00000001;
              }
              keyRequirements_.add(
                  input.readMessage(axelar.tss.exported.v1beta1.Types.KeyRequirement.parser(), extensionRegistry));
              break;
            }
            case 16: {

              suspendDurationInBlocks_ = input.readInt64();
              break;
            }
            case 24: {

              heartbeatPeriodInBlocks_ = input.readInt64();
              break;
            }
            case 34: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (maxMissedBlocksPerWindow_ != null) {
                subBuilder = maxMissedBlocksPerWindow_.toBuilder();
              }
              maxMissedBlocksPerWindow_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxMissedBlocksPerWindow_);
                maxMissedBlocksPerWindow_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              unbondingLockingKeyRotationCount_ = input.readInt64();
              break;
            }
            case 50: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (externalMultisigThreshold_ != null) {
                subBuilder = externalMultisigThreshold_.toBuilder();
              }
              externalMultisigThreshold_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(externalMultisigThreshold_);
                externalMultisigThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              maxSignQueueSize_ = input.readInt64();
              break;
            }
            case 64: {

              maxSimultaneousSignShares_ = input.readInt64();
              break;
            }
            case 72: {

              tssSignedBlocksWindow_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keyRequirements_ = java.util.Collections.unmodifiableList(keyRequirements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.v1beta1.ParamsOuterClass.internal_static_axelar_tss_v1beta1_Params_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.v1beta1.ParamsOuterClass.internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.v1beta1.ParamsOuterClass.Params.class, axelar.tss.v1beta1.ParamsOuterClass.Params.Builder.class);
    }

    public static final int KEY_REQUIREMENTS_FIELD_NUMBER = 1;
    private java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement> keyRequirements_;
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement> getKeyRequirementsList() {
      return keyRequirements_;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public java.util.List<? extends axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder> 
        getKeyRequirementsOrBuilderList() {
      return keyRequirements_;
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public int getKeyRequirementsCount() {
      return keyRequirements_.size();
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.KeyRequirement getKeyRequirements(int index) {
      return keyRequirements_.get(index);
    }
    /**
     * <pre>
     * KeyRequirements defines the requirement for each key role
     * </pre>
     *
     * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
        int index) {
      return keyRequirements_.get(index);
    }

    public static final int SUSPEND_DURATION_IN_BLOCKS_FIELD_NUMBER = 2;
    private long suspendDurationInBlocks_;
    /**
     * <pre>
     * SuspendDurationInBlocks defines the number of blocks a
     * validator is disallowed to participate in any TSS ceremony after
     * committing a malicious behaviour during signing
     * </pre>
     *
     * <code>int64 suspend_duration_in_blocks = 2;</code>
     * @return The suspendDurationInBlocks.
     */
    @java.lang.Override
    public long getSuspendDurationInBlocks() {
      return suspendDurationInBlocks_;
    }

    public static final int HEARTBEAT_PERIOD_IN_BLOCKS_FIELD_NUMBER = 3;
    private long heartbeatPeriodInBlocks_;
    /**
     * <pre>
     * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
     * emit the event asking validators to send their heartbeats
     * </pre>
     *
     * <code>int64 heartbeat_period_in_blocks = 3;</code>
     * @return The heartbeatPeriodInBlocks.
     */
    @java.lang.Override
    public long getHeartbeatPeriodInBlocks() {
      return heartbeatPeriodInBlocks_;
    }

    public static final int MAX_MISSED_BLOCKS_PER_WINDOW_FIELD_NUMBER = 4;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold maxMissedBlocksPerWindow_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     * @return Whether the maxMissedBlocksPerWindow field is set.
     */
    @java.lang.Override
    public boolean hasMaxMissedBlocksPerWindow() {
      return maxMissedBlocksPerWindow_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     * @return The maxMissedBlocksPerWindow.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMaxMissedBlocksPerWindow() {
      return maxMissedBlocksPerWindow_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder() {
      return getMaxMissedBlocksPerWindow();
    }

    public static final int UNBONDING_LOCKING_KEY_ROTATION_COUNT_FIELD_NUMBER = 5;
    private long unbondingLockingKeyRotationCount_;
    /**
     * <code>int64 unbonding_locking_key_rotation_count = 5;</code>
     * @return The unbondingLockingKeyRotationCount.
     */
    @java.lang.Override
    public long getUnbondingLockingKeyRotationCount() {
      return unbondingLockingKeyRotationCount_;
    }

    public static final int EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER = 6;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold externalMultisigThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     * @return Whether the externalMultisigThreshold field is set.
     */
    @java.lang.Override
    public boolean hasExternalMultisigThreshold() {
      return externalMultisigThreshold_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     * @return The externalMultisigThreshold.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getExternalMultisigThreshold() {
      return externalMultisigThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : externalMultisigThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder() {
      return getExternalMultisigThreshold();
    }

    public static final int MAX_SIGN_QUEUE_SIZE_FIELD_NUMBER = 7;
    private long maxSignQueueSize_;
    /**
     * <code>int64 max_sign_queue_size = 7;</code>
     * @return The maxSignQueueSize.
     */
    @java.lang.Override
    public long getMaxSignQueueSize() {
      return maxSignQueueSize_;
    }

    public static final int MAX_SIMULTANEOUS_SIGN_SHARES_FIELD_NUMBER = 8;
    private long maxSimultaneousSignShares_;
    /**
     * <code>int64 max_simultaneous_sign_shares = 8;</code>
     * @return The maxSimultaneousSignShares.
     */
    @java.lang.Override
    public long getMaxSimultaneousSignShares() {
      return maxSimultaneousSignShares_;
    }

    public static final int TSS_SIGNED_BLOCKS_WINDOW_FIELD_NUMBER = 9;
    private long tssSignedBlocksWindow_;
    /**
     * <code>int64 tss_signed_blocks_window = 9;</code>
     * @return The tssSignedBlocksWindow.
     */
    @java.lang.Override
    public long getTssSignedBlocksWindow() {
      return tssSignedBlocksWindow_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keyRequirements_.size(); i++) {
        output.writeMessage(1, keyRequirements_.get(i));
      }
      if (suspendDurationInBlocks_ != 0L) {
        output.writeInt64(2, suspendDurationInBlocks_);
      }
      if (heartbeatPeriodInBlocks_ != 0L) {
        output.writeInt64(3, heartbeatPeriodInBlocks_);
      }
      if (maxMissedBlocksPerWindow_ != null) {
        output.writeMessage(4, getMaxMissedBlocksPerWindow());
      }
      if (unbondingLockingKeyRotationCount_ != 0L) {
        output.writeInt64(5, unbondingLockingKeyRotationCount_);
      }
      if (externalMultisigThreshold_ != null) {
        output.writeMessage(6, getExternalMultisigThreshold());
      }
      if (maxSignQueueSize_ != 0L) {
        output.writeInt64(7, maxSignQueueSize_);
      }
      if (maxSimultaneousSignShares_ != 0L) {
        output.writeInt64(8, maxSimultaneousSignShares_);
      }
      if (tssSignedBlocksWindow_ != 0L) {
        output.writeInt64(9, tssSignedBlocksWindow_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < keyRequirements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, keyRequirements_.get(i));
      }
      if (suspendDurationInBlocks_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, suspendDurationInBlocks_);
      }
      if (heartbeatPeriodInBlocks_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, heartbeatPeriodInBlocks_);
      }
      if (maxMissedBlocksPerWindow_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMaxMissedBlocksPerWindow());
      }
      if (unbondingLockingKeyRotationCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, unbondingLockingKeyRotationCount_);
      }
      if (externalMultisigThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getExternalMultisigThreshold());
      }
      if (maxSignQueueSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, maxSignQueueSize_);
      }
      if (maxSimultaneousSignShares_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, maxSimultaneousSignShares_);
      }
      if (tssSignedBlocksWindow_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, tssSignedBlocksWindow_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.v1beta1.ParamsOuterClass.Params)) {
        return super.equals(obj);
      }
      axelar.tss.v1beta1.ParamsOuterClass.Params other = (axelar.tss.v1beta1.ParamsOuterClass.Params) obj;

      if (!getKeyRequirementsList()
          .equals(other.getKeyRequirementsList())) return false;
      if (getSuspendDurationInBlocks()
          != other.getSuspendDurationInBlocks()) return false;
      if (getHeartbeatPeriodInBlocks()
          != other.getHeartbeatPeriodInBlocks()) return false;
      if (hasMaxMissedBlocksPerWindow() != other.hasMaxMissedBlocksPerWindow()) return false;
      if (hasMaxMissedBlocksPerWindow()) {
        if (!getMaxMissedBlocksPerWindow()
            .equals(other.getMaxMissedBlocksPerWindow())) return false;
      }
      if (getUnbondingLockingKeyRotationCount()
          != other.getUnbondingLockingKeyRotationCount()) return false;
      if (hasExternalMultisigThreshold() != other.hasExternalMultisigThreshold()) return false;
      if (hasExternalMultisigThreshold()) {
        if (!getExternalMultisigThreshold()
            .equals(other.getExternalMultisigThreshold())) return false;
      }
      if (getMaxSignQueueSize()
          != other.getMaxSignQueueSize()) return false;
      if (getMaxSimultaneousSignShares()
          != other.getMaxSimultaneousSignShares()) return false;
      if (getTssSignedBlocksWindow()
          != other.getTssSignedBlocksWindow()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeyRequirementsCount() > 0) {
        hash = (37 * hash) + KEY_REQUIREMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getKeyRequirementsList().hashCode();
      }
      hash = (37 * hash) + SUSPEND_DURATION_IN_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSuspendDurationInBlocks());
      hash = (37 * hash) + HEARTBEAT_PERIOD_IN_BLOCKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeartbeatPeriodInBlocks());
      if (hasMaxMissedBlocksPerWindow()) {
        hash = (37 * hash) + MAX_MISSED_BLOCKS_PER_WINDOW_FIELD_NUMBER;
        hash = (53 * hash) + getMaxMissedBlocksPerWindow().hashCode();
      }
      hash = (37 * hash) + UNBONDING_LOCKING_KEY_ROTATION_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnbondingLockingKeyRotationCount());
      if (hasExternalMultisigThreshold()) {
        hash = (37 * hash) + EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getExternalMultisigThreshold().hashCode();
      }
      hash = (37 * hash) + MAX_SIGN_QUEUE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxSignQueueSize());
      hash = (37 * hash) + MAX_SIMULTANEOUS_SIGN_SHARES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxSimultaneousSignShares());
      hash = (37 * hash) + TSS_SIGNED_BLOCKS_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTssSignedBlocksWindow());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.v1beta1.ParamsOuterClass.Params parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.v1beta1.ParamsOuterClass.Params prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Params is the parameter set for this module
     * </pre>
     *
     * Protobuf type {@code axelar.tss.v1beta1.Params}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.v1beta1.Params)
        axelar.tss.v1beta1.ParamsOuterClass.ParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.v1beta1.ParamsOuterClass.internal_static_axelar_tss_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.v1beta1.ParamsOuterClass.internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.v1beta1.ParamsOuterClass.Params.class, axelar.tss.v1beta1.ParamsOuterClass.Params.Builder.class);
      }

      // Construct using axelar.tss.v1beta1.ParamsOuterClass.Params.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getKeyRequirementsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyRequirementsBuilder_ == null) {
          keyRequirements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          keyRequirementsBuilder_.clear();
        }
        suspendDurationInBlocks_ = 0L;

        heartbeatPeriodInBlocks_ = 0L;

        if (maxMissedBlocksPerWindowBuilder_ == null) {
          maxMissedBlocksPerWindow_ = null;
        } else {
          maxMissedBlocksPerWindow_ = null;
          maxMissedBlocksPerWindowBuilder_ = null;
        }
        unbondingLockingKeyRotationCount_ = 0L;

        if (externalMultisigThresholdBuilder_ == null) {
          externalMultisigThreshold_ = null;
        } else {
          externalMultisigThreshold_ = null;
          externalMultisigThresholdBuilder_ = null;
        }
        maxSignQueueSize_ = 0L;

        maxSimultaneousSignShares_ = 0L;

        tssSignedBlocksWindow_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.v1beta1.ParamsOuterClass.internal_static_axelar_tss_v1beta1_Params_descriptor;
      }

      @java.lang.Override
      public axelar.tss.v1beta1.ParamsOuterClass.Params getDefaultInstanceForType() {
        return axelar.tss.v1beta1.ParamsOuterClass.Params.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.v1beta1.ParamsOuterClass.Params build() {
        axelar.tss.v1beta1.ParamsOuterClass.Params result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.v1beta1.ParamsOuterClass.Params buildPartial() {
        axelar.tss.v1beta1.ParamsOuterClass.Params result = new axelar.tss.v1beta1.ParamsOuterClass.Params(this);
        int from_bitField0_ = bitField0_;
        if (keyRequirementsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            keyRequirements_ = java.util.Collections.unmodifiableList(keyRequirements_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.keyRequirements_ = keyRequirements_;
        } else {
          result.keyRequirements_ = keyRequirementsBuilder_.build();
        }
        result.suspendDurationInBlocks_ = suspendDurationInBlocks_;
        result.heartbeatPeriodInBlocks_ = heartbeatPeriodInBlocks_;
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          result.maxMissedBlocksPerWindow_ = maxMissedBlocksPerWindow_;
        } else {
          result.maxMissedBlocksPerWindow_ = maxMissedBlocksPerWindowBuilder_.build();
        }
        result.unbondingLockingKeyRotationCount_ = unbondingLockingKeyRotationCount_;
        if (externalMultisigThresholdBuilder_ == null) {
          result.externalMultisigThreshold_ = externalMultisigThreshold_;
        } else {
          result.externalMultisigThreshold_ = externalMultisigThresholdBuilder_.build();
        }
        result.maxSignQueueSize_ = maxSignQueueSize_;
        result.maxSimultaneousSignShares_ = maxSimultaneousSignShares_;
        result.tssSignedBlocksWindow_ = tssSignedBlocksWindow_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.v1beta1.ParamsOuterClass.Params) {
          return mergeFrom((axelar.tss.v1beta1.ParamsOuterClass.Params)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.v1beta1.ParamsOuterClass.Params other) {
        if (other == axelar.tss.v1beta1.ParamsOuterClass.Params.getDefaultInstance()) return this;
        if (keyRequirementsBuilder_ == null) {
          if (!other.keyRequirements_.isEmpty()) {
            if (keyRequirements_.isEmpty()) {
              keyRequirements_ = other.keyRequirements_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureKeyRequirementsIsMutable();
              keyRequirements_.addAll(other.keyRequirements_);
            }
            onChanged();
          }
        } else {
          if (!other.keyRequirements_.isEmpty()) {
            if (keyRequirementsBuilder_.isEmpty()) {
              keyRequirementsBuilder_.dispose();
              keyRequirementsBuilder_ = null;
              keyRequirements_ = other.keyRequirements_;
              bitField0_ = (bitField0_ & ~0x00000001);
              keyRequirementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeyRequirementsFieldBuilder() : null;
            } else {
              keyRequirementsBuilder_.addAllMessages(other.keyRequirements_);
            }
          }
        }
        if (other.getSuspendDurationInBlocks() != 0L) {
          setSuspendDurationInBlocks(other.getSuspendDurationInBlocks());
        }
        if (other.getHeartbeatPeriodInBlocks() != 0L) {
          setHeartbeatPeriodInBlocks(other.getHeartbeatPeriodInBlocks());
        }
        if (other.hasMaxMissedBlocksPerWindow()) {
          mergeMaxMissedBlocksPerWindow(other.getMaxMissedBlocksPerWindow());
        }
        if (other.getUnbondingLockingKeyRotationCount() != 0L) {
          setUnbondingLockingKeyRotationCount(other.getUnbondingLockingKeyRotationCount());
        }
        if (other.hasExternalMultisigThreshold()) {
          mergeExternalMultisigThreshold(other.getExternalMultisigThreshold());
        }
        if (other.getMaxSignQueueSize() != 0L) {
          setMaxSignQueueSize(other.getMaxSignQueueSize());
        }
        if (other.getMaxSimultaneousSignShares() != 0L) {
          setMaxSimultaneousSignShares(other.getMaxSimultaneousSignShares());
        }
        if (other.getTssSignedBlocksWindow() != 0L) {
          setTssSignedBlocksWindow(other.getTssSignedBlocksWindow());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.v1beta1.ParamsOuterClass.Params parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.v1beta1.ParamsOuterClass.Params) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement> keyRequirements_ =
        java.util.Collections.emptyList();
      private void ensureKeyRequirementsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keyRequirements_ = new java.util.ArrayList<axelar.tss.exported.v1beta1.Types.KeyRequirement>(keyRequirements_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.KeyRequirement, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder, axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder> keyRequirementsBuilder_;

      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement> getKeyRequirementsList() {
        if (keyRequirementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keyRequirements_);
        } else {
          return keyRequirementsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public int getKeyRequirementsCount() {
        if (keyRequirementsBuilder_ == null) {
          return keyRequirements_.size();
        } else {
          return keyRequirementsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.tss.exported.v1beta1.Types.KeyRequirement getKeyRequirements(int index) {
        if (keyRequirementsBuilder_ == null) {
          return keyRequirements_.get(index);
        } else {
          return keyRequirementsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setKeyRequirements(
          int index, axelar.tss.exported.v1beta1.Types.KeyRequirement value) {
        if (keyRequirementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyRequirementsIsMutable();
          keyRequirements_.set(index, value);
          onChanged();
        } else {
          keyRequirementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setKeyRequirements(
          int index, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder builderForValue) {
        if (keyRequirementsBuilder_ == null) {
          ensureKeyRequirementsIsMutable();
          keyRequirements_.set(index, builderForValue.build());
          onChanged();
        } else {
          keyRequirementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder addKeyRequirements(axelar.tss.exported.v1beta1.Types.KeyRequirement value) {
        if (keyRequirementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyRequirementsIsMutable();
          keyRequirements_.add(value);
          onChanged();
        } else {
          keyRequirementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder addKeyRequirements(
          int index, axelar.tss.exported.v1beta1.Types.KeyRequirement value) {
        if (keyRequirementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeyRequirementsIsMutable();
          keyRequirements_.add(index, value);
          onChanged();
        } else {
          keyRequirementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder addKeyRequirements(
          axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder builderForValue) {
        if (keyRequirementsBuilder_ == null) {
          ensureKeyRequirementsIsMutable();
          keyRequirements_.add(builderForValue.build());
          onChanged();
        } else {
          keyRequirementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder addKeyRequirements(
          int index, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder builderForValue) {
        if (keyRequirementsBuilder_ == null) {
          ensureKeyRequirementsIsMutable();
          keyRequirements_.add(index, builderForValue.build());
          onChanged();
        } else {
          keyRequirementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder addAllKeyRequirements(
          java.lang.Iterable<? extends axelar.tss.exported.v1beta1.Types.KeyRequirement> values) {
        if (keyRequirementsBuilder_ == null) {
          ensureKeyRequirementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keyRequirements_);
          onChanged();
        } else {
          keyRequirementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearKeyRequirements() {
        if (keyRequirementsBuilder_ == null) {
          keyRequirements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          keyRequirementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public Builder removeKeyRequirements(int index) {
        if (keyRequirementsBuilder_ == null) {
          ensureKeyRequirementsIsMutable();
          keyRequirements_.remove(index);
          onChanged();
        } else {
          keyRequirementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder getKeyRequirementsBuilder(
          int index) {
        return getKeyRequirementsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder getKeyRequirementsOrBuilder(
          int index) {
        if (keyRequirementsBuilder_ == null) {
          return keyRequirements_.get(index);  } else {
          return keyRequirementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public java.util.List<? extends axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder> 
           getKeyRequirementsOrBuilderList() {
        if (keyRequirementsBuilder_ != null) {
          return keyRequirementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keyRequirements_);
        }
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder addKeyRequirementsBuilder() {
        return getKeyRequirementsFieldBuilder().addBuilder(
            axelar.tss.exported.v1beta1.Types.KeyRequirement.getDefaultInstance());
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder addKeyRequirementsBuilder(
          int index) {
        return getKeyRequirementsFieldBuilder().addBuilder(
            index, axelar.tss.exported.v1beta1.Types.KeyRequirement.getDefaultInstance());
      }
      /**
       * <pre>
       * KeyRequirements defines the requirement for each key role
       * </pre>
       *
       * <code>repeated .axelar.tss.exported.v1beta1.KeyRequirement key_requirements = 1 [(.gogoproto.nullable) = false];</code>
       */
      public java.util.List<axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder> 
           getKeyRequirementsBuilderList() {
        return getKeyRequirementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.KeyRequirement, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder, axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder> 
          getKeyRequirementsFieldBuilder() {
        if (keyRequirementsBuilder_ == null) {
          keyRequirementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              axelar.tss.exported.v1beta1.Types.KeyRequirement, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder, axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder>(
                  keyRequirements_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          keyRequirements_ = null;
        }
        return keyRequirementsBuilder_;
      }

      private long suspendDurationInBlocks_ ;
      /**
       * <pre>
       * SuspendDurationInBlocks defines the number of blocks a
       * validator is disallowed to participate in any TSS ceremony after
       * committing a malicious behaviour during signing
       * </pre>
       *
       * <code>int64 suspend_duration_in_blocks = 2;</code>
       * @return The suspendDurationInBlocks.
       */
      @java.lang.Override
      public long getSuspendDurationInBlocks() {
        return suspendDurationInBlocks_;
      }
      /**
       * <pre>
       * SuspendDurationInBlocks defines the number of blocks a
       * validator is disallowed to participate in any TSS ceremony after
       * committing a malicious behaviour during signing
       * </pre>
       *
       * <code>int64 suspend_duration_in_blocks = 2;</code>
       * @param value The suspendDurationInBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setSuspendDurationInBlocks(long value) {
        
        suspendDurationInBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SuspendDurationInBlocks defines the number of blocks a
       * validator is disallowed to participate in any TSS ceremony after
       * committing a malicious behaviour during signing
       * </pre>
       *
       * <code>int64 suspend_duration_in_blocks = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuspendDurationInBlocks() {
        
        suspendDurationInBlocks_ = 0L;
        onChanged();
        return this;
      }

      private long heartbeatPeriodInBlocks_ ;
      /**
       * <pre>
       * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
       * emit the event asking validators to send their heartbeats
       * </pre>
       *
       * <code>int64 heartbeat_period_in_blocks = 3;</code>
       * @return The heartbeatPeriodInBlocks.
       */
      @java.lang.Override
      public long getHeartbeatPeriodInBlocks() {
        return heartbeatPeriodInBlocks_;
      }
      /**
       * <pre>
       * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
       * emit the event asking validators to send their heartbeats
       * </pre>
       *
       * <code>int64 heartbeat_period_in_blocks = 3;</code>
       * @param value The heartbeatPeriodInBlocks to set.
       * @return This builder for chaining.
       */
      public Builder setHeartbeatPeriodInBlocks(long value) {
        
        heartbeatPeriodInBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HeartBeatPeriodInBlocks defines the time period in blocks for tss to
       * emit the event asking validators to send their heartbeats
       * </pre>
       *
       * <code>int64 heartbeat_period_in_blocks = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeartbeatPeriodInBlocks() {
        
        heartbeatPeriodInBlocks_ = 0L;
        onChanged();
        return this;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold maxMissedBlocksPerWindow_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> maxMissedBlocksPerWindowBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       * @return Whether the maxMissedBlocksPerWindow field is set.
       */
      public boolean hasMaxMissedBlocksPerWindow() {
        return maxMissedBlocksPerWindowBuilder_ != null || maxMissedBlocksPerWindow_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       * @return The maxMissedBlocksPerWindow.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMaxMissedBlocksPerWindow() {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          return maxMissedBlocksPerWindow_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
        } else {
          return maxMissedBlocksPerWindowBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setMaxMissedBlocksPerWindow(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxMissedBlocksPerWindow_ = value;
          onChanged();
        } else {
          maxMissedBlocksPerWindowBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setMaxMissedBlocksPerWindow(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          maxMissedBlocksPerWindow_ = builderForValue.build();
          onChanged();
        } else {
          maxMissedBlocksPerWindowBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeMaxMissedBlocksPerWindow(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          if (maxMissedBlocksPerWindow_ != null) {
            maxMissedBlocksPerWindow_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(maxMissedBlocksPerWindow_).mergeFrom(value).buildPartial();
          } else {
            maxMissedBlocksPerWindow_ = value;
          }
          onChanged();
        } else {
          maxMissedBlocksPerWindowBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearMaxMissedBlocksPerWindow() {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          maxMissedBlocksPerWindow_ = null;
          onChanged();
        } else {
          maxMissedBlocksPerWindow_ = null;
          maxMissedBlocksPerWindowBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getMaxMissedBlocksPerWindowBuilder() {
        
        onChanged();
        return getMaxMissedBlocksPerWindowFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMaxMissedBlocksPerWindowOrBuilder() {
        if (maxMissedBlocksPerWindowBuilder_ != null) {
          return maxMissedBlocksPerWindowBuilder_.getMessageOrBuilder();
        } else {
          return maxMissedBlocksPerWindow_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : maxMissedBlocksPerWindow_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold max_missed_blocks_per_window = 4 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getMaxMissedBlocksPerWindowFieldBuilder() {
        if (maxMissedBlocksPerWindowBuilder_ == null) {
          maxMissedBlocksPerWindowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getMaxMissedBlocksPerWindow(),
                  getParentForChildren(),
                  isClean());
          maxMissedBlocksPerWindow_ = null;
        }
        return maxMissedBlocksPerWindowBuilder_;
      }

      private long unbondingLockingKeyRotationCount_ ;
      /**
       * <code>int64 unbonding_locking_key_rotation_count = 5;</code>
       * @return The unbondingLockingKeyRotationCount.
       */
      @java.lang.Override
      public long getUnbondingLockingKeyRotationCount() {
        return unbondingLockingKeyRotationCount_;
      }
      /**
       * <code>int64 unbonding_locking_key_rotation_count = 5;</code>
       * @param value The unbondingLockingKeyRotationCount to set.
       * @return This builder for chaining.
       */
      public Builder setUnbondingLockingKeyRotationCount(long value) {
        
        unbondingLockingKeyRotationCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 unbonding_locking_key_rotation_count = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnbondingLockingKeyRotationCount() {
        
        unbondingLockingKeyRotationCount_ = 0L;
        onChanged();
        return this;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold externalMultisigThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> externalMultisigThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       * @return Whether the externalMultisigThreshold field is set.
       */
      public boolean hasExternalMultisigThreshold() {
        return externalMultisigThresholdBuilder_ != null || externalMultisigThreshold_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       * @return The externalMultisigThreshold.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getExternalMultisigThreshold() {
        if (externalMultisigThresholdBuilder_ == null) {
          return externalMultisigThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : externalMultisigThreshold_;
        } else {
          return externalMultisigThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setExternalMultisigThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (externalMultisigThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          externalMultisigThreshold_ = value;
          onChanged();
        } else {
          externalMultisigThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setExternalMultisigThreshold(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (externalMultisigThresholdBuilder_ == null) {
          externalMultisigThreshold_ = builderForValue.build();
          onChanged();
        } else {
          externalMultisigThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeExternalMultisigThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (externalMultisigThresholdBuilder_ == null) {
          if (externalMultisigThreshold_ != null) {
            externalMultisigThreshold_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(externalMultisigThreshold_).mergeFrom(value).buildPartial();
          } else {
            externalMultisigThreshold_ = value;
          }
          onChanged();
        } else {
          externalMultisigThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearExternalMultisigThreshold() {
        if (externalMultisigThresholdBuilder_ == null) {
          externalMultisigThreshold_ = null;
          onChanged();
        } else {
          externalMultisigThreshold_ = null;
          externalMultisigThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getExternalMultisigThresholdBuilder() {
        
        onChanged();
        return getExternalMultisigThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getExternalMultisigThresholdOrBuilder() {
        if (externalMultisigThresholdBuilder_ != null) {
          return externalMultisigThresholdBuilder_.getMessageOrBuilder();
        } else {
          return externalMultisigThreshold_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : externalMultisigThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold external_multisig_threshold = 6 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getExternalMultisigThresholdFieldBuilder() {
        if (externalMultisigThresholdBuilder_ == null) {
          externalMultisigThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getExternalMultisigThreshold(),
                  getParentForChildren(),
                  isClean());
          externalMultisigThreshold_ = null;
        }
        return externalMultisigThresholdBuilder_;
      }

      private long maxSignQueueSize_ ;
      /**
       * <code>int64 max_sign_queue_size = 7;</code>
       * @return The maxSignQueueSize.
       */
      @java.lang.Override
      public long getMaxSignQueueSize() {
        return maxSignQueueSize_;
      }
      /**
       * <code>int64 max_sign_queue_size = 7;</code>
       * @param value The maxSignQueueSize to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSignQueueSize(long value) {
        
        maxSignQueueSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 max_sign_queue_size = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSignQueueSize() {
        
        maxSignQueueSize_ = 0L;
        onChanged();
        return this;
      }

      private long maxSimultaneousSignShares_ ;
      /**
       * <code>int64 max_simultaneous_sign_shares = 8;</code>
       * @return The maxSimultaneousSignShares.
       */
      @java.lang.Override
      public long getMaxSimultaneousSignShares() {
        return maxSimultaneousSignShares_;
      }
      /**
       * <code>int64 max_simultaneous_sign_shares = 8;</code>
       * @param value The maxSimultaneousSignShares to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSimultaneousSignShares(long value) {
        
        maxSimultaneousSignShares_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 max_simultaneous_sign_shares = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSimultaneousSignShares() {
        
        maxSimultaneousSignShares_ = 0L;
        onChanged();
        return this;
      }

      private long tssSignedBlocksWindow_ ;
      /**
       * <code>int64 tss_signed_blocks_window = 9;</code>
       * @return The tssSignedBlocksWindow.
       */
      @java.lang.Override
      public long getTssSignedBlocksWindow() {
        return tssSignedBlocksWindow_;
      }
      /**
       * <code>int64 tss_signed_blocks_window = 9;</code>
       * @param value The tssSignedBlocksWindow to set.
       * @return This builder for chaining.
       */
      public Builder setTssSignedBlocksWindow(long value) {
        
        tssSignedBlocksWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 tss_signed_blocks_window = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTssSignedBlocksWindow() {
        
        tssSignedBlocksWindow_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.v1beta1.Params)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.v1beta1.Params)
    private static final axelar.tss.v1beta1.ParamsOuterClass.Params DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.v1beta1.ParamsOuterClass.Params();
    }

    public static axelar.tss.v1beta1.ParamsOuterClass.Params getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Params>
        PARSER = new com.google.protobuf.AbstractParser<Params>() {
      @java.lang.Override
      public Params parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Params(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Params> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Params> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.v1beta1.ParamsOuterClass.Params getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_v1beta1_Params_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037axelar/tss/v1beta1/params.proto\022\022axela" +
      "r.tss.v1beta1\032\024gogoproto/gogo.proto\032$axe" +
      "lar/utils/v1beta1/threshold.proto\032\'axela" +
      "r/tss/exported/v1beta1/types.proto\"\311\003\n\006P" +
      "arams\022K\n\020key_requirements\030\001 \003(\0132+.axelar" +
      ".tss.exported.v1beta1.KeyRequirementB\004\310\336" +
      "\037\000\022\"\n\032suspend_duration_in_blocks\030\002 \001(\003\022\"" +
      "\n\032heartbeat_period_in_blocks\030\003 \001(\003\022K\n\034ma" +
      "x_missed_blocks_per_window\030\004 \001(\0132\037.axela" +
      "r.utils.v1beta1.ThresholdB\004\310\336\037\000\022,\n$unbon" +
      "ding_locking_key_rotation_count\030\005 \001(\003\022J\n" +
      "\033external_multisig_threshold\030\006 \001(\0132\037.axe" +
      "lar.utils.v1beta1.ThresholdB\004\310\336\037\000\022\033\n\023max" +
      "_sign_queue_size\030\007 \001(\003\022$\n\034max_simultaneo" +
      "us_sign_shares\030\010 \001(\003\022 \n\030tss_signed_block" +
      "s_window\030\t \001(\003B6Z0github.com/axelarnetwo" +
      "rk/axelar-core/x/tss/types\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          axelar.utils.v1beta1.ThresholdOuterClass.getDescriptor(),
          axelar.tss.exported.v1beta1.Types.getDescriptor(),
        });
    internal_static_axelar_tss_v1beta1_Params_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_tss_v1beta1_Params_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_v1beta1_Params_descriptor,
        new java.lang.String[] { "KeyRequirements", "SuspendDurationInBlocks", "HeartbeatPeriodInBlocks", "MaxMissedBlocksPerWindow", "UnbondingLockingKeyRotationCount", "ExternalMultisigThreshold", "MaxSignQueueSize", "MaxSimultaneousSignShares", "TssSignedBlocksWindow", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGettersAll);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    axelar.utils.v1beta1.ThresholdOuterClass.getDescriptor();
    axelar.tss.exported.v1beta1.Types.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
