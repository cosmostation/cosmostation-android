// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/tss/exported/v1beta1/types.proto

package axelar.tss.exported.v1beta1;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code axelar.tss.exported.v1beta1.KeyRole}
   */
  public enum KeyRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>KEY_ROLE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unknown"];</code>
     */
    KEY_ROLE_UNSPECIFIED(0),
    /**
     * <code>KEY_ROLE_MASTER_KEY = 1 [(.gogoproto.enumvalue_customname) = "MasterKey"];</code>
     */
    KEY_ROLE_MASTER_KEY(1),
    /**
     * <code>KEY_ROLE_SECONDARY_KEY = 2 [(.gogoproto.enumvalue_customname) = "SecondaryKey"];</code>
     */
    KEY_ROLE_SECONDARY_KEY(2),
    /**
     * <code>KEY_ROLE_EXTERNAL_KEY = 3 [(.gogoproto.enumvalue_customname) = "ExternalKey"];</code>
     */
    KEY_ROLE_EXTERNAL_KEY(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>KEY_ROLE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unknown"];</code>
     */
    public static final int KEY_ROLE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>KEY_ROLE_MASTER_KEY = 1 [(.gogoproto.enumvalue_customname) = "MasterKey"];</code>
     */
    public static final int KEY_ROLE_MASTER_KEY_VALUE = 1;
    /**
     * <code>KEY_ROLE_SECONDARY_KEY = 2 [(.gogoproto.enumvalue_customname) = "SecondaryKey"];</code>
     */
    public static final int KEY_ROLE_SECONDARY_KEY_VALUE = 2;
    /**
     * <code>KEY_ROLE_EXTERNAL_KEY = 3 [(.gogoproto.enumvalue_customname) = "ExternalKey"];</code>
     */
    public static final int KEY_ROLE_EXTERNAL_KEY_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static KeyRole forNumber(int value) {
      switch (value) {
        case 0: return KEY_ROLE_UNSPECIFIED;
        case 1: return KEY_ROLE_MASTER_KEY;
        case 2: return KEY_ROLE_SECONDARY_KEY;
        case 3: return KEY_ROLE_EXTERNAL_KEY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyRole>() {
            public KeyRole findValueByNumber(int number) {
              return KeyRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.getDescriptor().getEnumTypes().get(0);
    }

    private static final KeyRole[] VALUES = values();

    public static KeyRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KeyRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.tss.exported.v1beta1.KeyRole)
  }

  /**
   * Protobuf enum {@code axelar.tss.exported.v1beta1.KeyShareDistributionPolicy}
   */
  public enum KeyShareDistributionPolicy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED(0),
    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE = 1 [(.gogoproto.enumvalue_customname) = "WeightedByStake"];</code>
     */
    KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE(1),
    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR = 2 [(.gogoproto.enumvalue_customname) = "OnePerValidator"];</code>
     */
    KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    public static final int KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED_VALUE = 0;
    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE = 1 [(.gogoproto.enumvalue_customname) = "WeightedByStake"];</code>
     */
    public static final int KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE_VALUE = 1;
    /**
     * <code>KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR = 2 [(.gogoproto.enumvalue_customname) = "OnePerValidator"];</code>
     */
    public static final int KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyShareDistributionPolicy valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static KeyShareDistributionPolicy forNumber(int value) {
      switch (value) {
        case 0: return KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED;
        case 1: return KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE;
        case 2: return KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyShareDistributionPolicy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyShareDistributionPolicy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyShareDistributionPolicy>() {
            public KeyShareDistributionPolicy findValueByNumber(int number) {
              return KeyShareDistributionPolicy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.getDescriptor().getEnumTypes().get(1);
    }

    private static final KeyShareDistributionPolicy[] VALUES = values();

    public static KeyShareDistributionPolicy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KeyShareDistributionPolicy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.tss.exported.v1beta1.KeyShareDistributionPolicy)
  }

  /**
   * Protobuf enum {@code axelar.tss.exported.v1beta1.AckType}
   */
  public enum AckType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACK_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    ACK_TYPE_UNSPECIFIED(0),
    /**
     * <code>ACK_TYPE_KEYGEN = 1 [(.gogoproto.enumvalue_customname) = "Keygen"];</code>
     */
    ACK_TYPE_KEYGEN(1),
    /**
     * <code>ACK_TYPE_SIGN = 2 [(.gogoproto.enumvalue_customname) = "Sign"];</code>
     */
    ACK_TYPE_SIGN(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACK_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    public static final int ACK_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>ACK_TYPE_KEYGEN = 1 [(.gogoproto.enumvalue_customname) = "Keygen"];</code>
     */
    public static final int ACK_TYPE_KEYGEN_VALUE = 1;
    /**
     * <code>ACK_TYPE_SIGN = 2 [(.gogoproto.enumvalue_customname) = "Sign"];</code>
     */
    public static final int ACK_TYPE_SIGN_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AckType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AckType forNumber(int value) {
      switch (value) {
        case 0: return ACK_TYPE_UNSPECIFIED;
        case 1: return ACK_TYPE_KEYGEN;
        case 2: return ACK_TYPE_SIGN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AckType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AckType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AckType>() {
            public AckType findValueByNumber(int number) {
              return AckType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.getDescriptor().getEnumTypes().get(2);
    }

    private static final AckType[] VALUES = values();

    public static AckType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AckType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.tss.exported.v1beta1.AckType)
  }

  /**
   * Protobuf enum {@code axelar.tss.exported.v1beta1.SigStatus}
   */
  public enum SigStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SIG_STATUS_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    SIG_STATUS_UNSPECIFIED(0),
    /**
     * <code>SIG_STATUS_QUEUED = 1 [(.gogoproto.enumvalue_customname) = "Queued"];</code>
     */
    SIG_STATUS_QUEUED(1),
    /**
     * <code>SIG_STATUS_SIGNING = 2 [(.gogoproto.enumvalue_customname) = "Signing"];</code>
     */
    SIG_STATUS_SIGNING(2),
    /**
     * <code>SIG_STATUS_SIGNED = 3 [(.gogoproto.enumvalue_customname) = "Signed"];</code>
     */
    SIG_STATUS_SIGNED(3),
    /**
     * <code>SIG_STATUS_ABORTED = 4 [(.gogoproto.enumvalue_customname) = "Aborted"];</code>
     */
    SIG_STATUS_ABORTED(4),
    /**
     * <code>SIG_STATUS_INVALID = 5 [(.gogoproto.enumvalue_customname) = "Invalid"];</code>
     */
    SIG_STATUS_INVALID(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SIG_STATUS_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "Unspecified"];</code>
     */
    public static final int SIG_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>SIG_STATUS_QUEUED = 1 [(.gogoproto.enumvalue_customname) = "Queued"];</code>
     */
    public static final int SIG_STATUS_QUEUED_VALUE = 1;
    /**
     * <code>SIG_STATUS_SIGNING = 2 [(.gogoproto.enumvalue_customname) = "Signing"];</code>
     */
    public static final int SIG_STATUS_SIGNING_VALUE = 2;
    /**
     * <code>SIG_STATUS_SIGNED = 3 [(.gogoproto.enumvalue_customname) = "Signed"];</code>
     */
    public static final int SIG_STATUS_SIGNED_VALUE = 3;
    /**
     * <code>SIG_STATUS_ABORTED = 4 [(.gogoproto.enumvalue_customname) = "Aborted"];</code>
     */
    public static final int SIG_STATUS_ABORTED_VALUE = 4;
    /**
     * <code>SIG_STATUS_INVALID = 5 [(.gogoproto.enumvalue_customname) = "Invalid"];</code>
     */
    public static final int SIG_STATUS_INVALID_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SigStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SigStatus forNumber(int value) {
      switch (value) {
        case 0: return SIG_STATUS_UNSPECIFIED;
        case 1: return SIG_STATUS_QUEUED;
        case 2: return SIG_STATUS_SIGNING;
        case 3: return SIG_STATUS_SIGNED;
        case 4: return SIG_STATUS_ABORTED;
        case 5: return SIG_STATUS_INVALID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SigStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SigStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SigStatus>() {
            public SigStatus findValueByNumber(int number) {
              return SigStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.getDescriptor().getEnumTypes().get(3);
    }

    private static final SigStatus[] VALUES = values();

    public static SigStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SigStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.tss.exported.v1beta1.SigStatus)
  }

  /**
   * Protobuf enum {@code axelar.tss.exported.v1beta1.KeyType}
   */
  public enum KeyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>KEY_TYPE_UNSPECIFIED = 0;</code>
     */
    KEY_TYPE_UNSPECIFIED(0),
    /**
     * <code>KEY_TYPE_NONE = 1 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    KEY_TYPE_NONE(1),
    /**
     * <code>KEY_TYPE_THRESHOLD = 2 [(.gogoproto.enumvalue_customname) = "Threshold"];</code>
     */
    KEY_TYPE_THRESHOLD(2),
    /**
     * <code>KEY_TYPE_MULTISIG = 3 [(.gogoproto.enumvalue_customname) = "Multisig"];</code>
     */
    KEY_TYPE_MULTISIG(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>KEY_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int KEY_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>KEY_TYPE_NONE = 1 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    public static final int KEY_TYPE_NONE_VALUE = 1;
    /**
     * <code>KEY_TYPE_THRESHOLD = 2 [(.gogoproto.enumvalue_customname) = "Threshold"];</code>
     */
    public static final int KEY_TYPE_THRESHOLD_VALUE = 2;
    /**
     * <code>KEY_TYPE_MULTISIG = 3 [(.gogoproto.enumvalue_customname) = "Multisig"];</code>
     */
    public static final int KEY_TYPE_MULTISIG_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static KeyType forNumber(int value) {
      switch (value) {
        case 0: return KEY_TYPE_UNSPECIFIED;
        case 1: return KEY_TYPE_NONE;
        case 2: return KEY_TYPE_THRESHOLD;
        case 3: return KEY_TYPE_MULTISIG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyType>() {
            public KeyType findValueByNumber(int number) {
              return KeyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.getDescriptor().getEnumTypes().get(4);
    }

    private static final KeyType[] VALUES = values();

    public static KeyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KeyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.tss.exported.v1beta1.KeyType)
  }

  public interface KeyRequirementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.KeyRequirement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
     * @return The enum numeric value on the wire for keyRole.
     */
    int getKeyRoleValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
     * @return The keyRole.
     */
    axelar.tss.exported.v1beta1.Types.KeyRole getKeyRole();

    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
     * @return The enum numeric value on the wire for keyType.
     */
    int getKeyTypeValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
     * @return The keyType.
     */
    axelar.tss.exported.v1beta1.Types.KeyType getKeyType();

    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the minKeygenThreshold field is set.
     */
    boolean hasMinKeygenThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     * @return The minKeygenThreshold.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMinKeygenThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMinKeygenThresholdOrBuilder();

    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     * @return Whether the safetyThreshold field is set.
     */
    boolean hasSafetyThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     * @return The safetyThreshold.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSafetyThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSafetyThresholdOrBuilder();

    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
     * @return The enum numeric value on the wire for keyShareDistributionPolicy.
     */
    int getKeyShareDistributionPolicyValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
     * @return The keyShareDistributionPolicy.
     */
    axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy getKeyShareDistributionPolicy();

    /**
     * <code>int64 max_total_share_count = 6;</code>
     * @return The maxTotalShareCount.
     */
    long getMaxTotalShareCount();

    /**
     * <code>int64 min_total_share_count = 7;</code>
     * @return The minTotalShareCount.
     */
    long getMinTotalShareCount();

    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     * @return Whether the keygenVotingThreshold field is set.
     */
    boolean hasKeygenVotingThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     * @return The keygenVotingThreshold.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getKeygenVotingThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getKeygenVotingThresholdOrBuilder();

    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     * @return Whether the signVotingThreshold field is set.
     */
    boolean hasSignVotingThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     * @return The signVotingThreshold.
     */
    axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSignVotingThreshold();
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     */
    axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSignVotingThresholdOrBuilder();

    /**
     * <code>int64 keygen_timeout = 10;</code>
     * @return The keygenTimeout.
     */
    long getKeygenTimeout();

    /**
     * <code>int64 sign_timeout = 11;</code>
     * @return The signTimeout.
     */
    long getSignTimeout();
  }
  /**
   * <pre>
   * KeyRequirement defines requirements for keys
   * </pre>
   *
   * Protobuf type {@code axelar.tss.exported.v1beta1.KeyRequirement}
   */
  public static final class KeyRequirement extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.KeyRequirement)
      KeyRequirementOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyRequirement.newBuilder() to construct.
    private KeyRequirement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyRequirement() {
      keyRole_ = 0;
      keyType_ = 0;
      keyShareDistributionPolicy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyRequirement();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyRequirement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              keyRole_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              keyType_ = rawValue;
              break;
            }
            case 26: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (minKeygenThreshold_ != null) {
                subBuilder = minKeygenThreshold_.toBuilder();
              }
              minKeygenThreshold_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minKeygenThreshold_);
                minKeygenThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (safetyThreshold_ != null) {
                subBuilder = safetyThreshold_.toBuilder();
              }
              safetyThreshold_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(safetyThreshold_);
                safetyThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              keyShareDistributionPolicy_ = rawValue;
              break;
            }
            case 48: {

              maxTotalShareCount_ = input.readInt64();
              break;
            }
            case 56: {

              minTotalShareCount_ = input.readInt64();
              break;
            }
            case 66: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (keygenVotingThreshold_ != null) {
                subBuilder = keygenVotingThreshold_.toBuilder();
              }
              keygenVotingThreshold_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keygenVotingThreshold_);
                keygenVotingThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder subBuilder = null;
              if (signVotingThreshold_ != null) {
                subBuilder = signVotingThreshold_.toBuilder();
              }
              signVotingThreshold_ = input.readMessage(axelar.utils.v1beta1.ThresholdOuterClass.Threshold.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signVotingThreshold_);
                signVotingThreshold_ = subBuilder.buildPartial();
              }

              break;
            }
            case 80: {

              keygenTimeout_ = input.readInt64();
              break;
            }
            case 88: {

              signTimeout_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.exported.v1beta1.Types.KeyRequirement.class, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder.class);
    }

    public static final int KEY_ROLE_FIELD_NUMBER = 1;
    private int keyRole_;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
     * @return The enum numeric value on the wire for keyRole.
     */
    @java.lang.Override public int getKeyRoleValue() {
      return keyRole_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
     * @return The keyRole.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.KeyRole getKeyRole() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.KeyRole result = axelar.tss.exported.v1beta1.Types.KeyRole.valueOf(keyRole_);
      return result == null ? axelar.tss.exported.v1beta1.Types.KeyRole.UNRECOGNIZED : result;
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 2;
    private int keyType_;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
     * @return The enum numeric value on the wire for keyType.
     */
    @java.lang.Override public int getKeyTypeValue() {
      return keyType_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
     * @return The keyType.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.KeyType getKeyType() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.KeyType result = axelar.tss.exported.v1beta1.Types.KeyType.valueOf(keyType_);
      return result == null ? axelar.tss.exported.v1beta1.Types.KeyType.UNRECOGNIZED : result;
    }

    public static final int MIN_KEYGEN_THRESHOLD_FIELD_NUMBER = 3;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold minKeygenThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the minKeygenThreshold field is set.
     */
    @java.lang.Override
    public boolean hasMinKeygenThreshold() {
      return minKeygenThreshold_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     * @return The minKeygenThreshold.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMinKeygenThreshold() {
      return minKeygenThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : minKeygenThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMinKeygenThresholdOrBuilder() {
      return getMinKeygenThreshold();
    }

    public static final int SAFETY_THRESHOLD_FIELD_NUMBER = 4;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold safetyThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     * @return Whether the safetyThreshold field is set.
     */
    @java.lang.Override
    public boolean hasSafetyThreshold() {
      return safetyThreshold_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     * @return The safetyThreshold.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSafetyThreshold() {
      return safetyThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : safetyThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSafetyThresholdOrBuilder() {
      return getSafetyThreshold();
    }

    public static final int KEY_SHARE_DISTRIBUTION_POLICY_FIELD_NUMBER = 5;
    private int keyShareDistributionPolicy_;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
     * @return The enum numeric value on the wire for keyShareDistributionPolicy.
     */
    @java.lang.Override public int getKeyShareDistributionPolicyValue() {
      return keyShareDistributionPolicy_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
     * @return The keyShareDistributionPolicy.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy getKeyShareDistributionPolicy() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy result = axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.valueOf(keyShareDistributionPolicy_);
      return result == null ? axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.UNRECOGNIZED : result;
    }

    public static final int MAX_TOTAL_SHARE_COUNT_FIELD_NUMBER = 6;
    private long maxTotalShareCount_;
    /**
     * <code>int64 max_total_share_count = 6;</code>
     * @return The maxTotalShareCount.
     */
    @java.lang.Override
    public long getMaxTotalShareCount() {
      return maxTotalShareCount_;
    }

    public static final int MIN_TOTAL_SHARE_COUNT_FIELD_NUMBER = 7;
    private long minTotalShareCount_;
    /**
     * <code>int64 min_total_share_count = 7;</code>
     * @return The minTotalShareCount.
     */
    @java.lang.Override
    public long getMinTotalShareCount() {
      return minTotalShareCount_;
    }

    public static final int KEYGEN_VOTING_THRESHOLD_FIELD_NUMBER = 8;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold keygenVotingThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     * @return Whether the keygenVotingThreshold field is set.
     */
    @java.lang.Override
    public boolean hasKeygenVotingThreshold() {
      return keygenVotingThreshold_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     * @return The keygenVotingThreshold.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getKeygenVotingThreshold() {
      return keygenVotingThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : keygenVotingThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getKeygenVotingThresholdOrBuilder() {
      return getKeygenVotingThreshold();
    }

    public static final int SIGN_VOTING_THRESHOLD_FIELD_NUMBER = 9;
    private axelar.utils.v1beta1.ThresholdOuterClass.Threshold signVotingThreshold_;
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     * @return Whether the signVotingThreshold field is set.
     */
    @java.lang.Override
    public boolean hasSignVotingThreshold() {
      return signVotingThreshold_ != null;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     * @return The signVotingThreshold.
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSignVotingThreshold() {
      return signVotingThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : signVotingThreshold_;
    }
    /**
     * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSignVotingThresholdOrBuilder() {
      return getSignVotingThreshold();
    }

    public static final int KEYGEN_TIMEOUT_FIELD_NUMBER = 10;
    private long keygenTimeout_;
    /**
     * <code>int64 keygen_timeout = 10;</code>
     * @return The keygenTimeout.
     */
    @java.lang.Override
    public long getKeygenTimeout() {
      return keygenTimeout_;
    }

    public static final int SIGN_TIMEOUT_FIELD_NUMBER = 11;
    private long signTimeout_;
    /**
     * <code>int64 sign_timeout = 11;</code>
     * @return The signTimeout.
     */
    @java.lang.Override
    public long getSignTimeout() {
      return signTimeout_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyRole_ != axelar.tss.exported.v1beta1.Types.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, keyRole_);
      }
      if (keyType_ != axelar.tss.exported.v1beta1.Types.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, keyType_);
      }
      if (minKeygenThreshold_ != null) {
        output.writeMessage(3, getMinKeygenThreshold());
      }
      if (safetyThreshold_ != null) {
        output.writeMessage(4, getSafetyThreshold());
      }
      if (keyShareDistributionPolicy_ != axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED.getNumber()) {
        output.writeEnum(5, keyShareDistributionPolicy_);
      }
      if (maxTotalShareCount_ != 0L) {
        output.writeInt64(6, maxTotalShareCount_);
      }
      if (minTotalShareCount_ != 0L) {
        output.writeInt64(7, minTotalShareCount_);
      }
      if (keygenVotingThreshold_ != null) {
        output.writeMessage(8, getKeygenVotingThreshold());
      }
      if (signVotingThreshold_ != null) {
        output.writeMessage(9, getSignVotingThreshold());
      }
      if (keygenTimeout_ != 0L) {
        output.writeInt64(10, keygenTimeout_);
      }
      if (signTimeout_ != 0L) {
        output.writeInt64(11, signTimeout_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyRole_ != axelar.tss.exported.v1beta1.Types.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, keyRole_);
      }
      if (keyType_ != axelar.tss.exported.v1beta1.Types.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, keyType_);
      }
      if (minKeygenThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMinKeygenThreshold());
      }
      if (safetyThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSafetyThreshold());
      }
      if (keyShareDistributionPolicy_ != axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, keyShareDistributionPolicy_);
      }
      if (maxTotalShareCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, maxTotalShareCount_);
      }
      if (minTotalShareCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, minTotalShareCount_);
      }
      if (keygenVotingThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getKeygenVotingThreshold());
      }
      if (signVotingThreshold_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getSignVotingThreshold());
      }
      if (keygenTimeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, keygenTimeout_);
      }
      if (signTimeout_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, signTimeout_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.exported.v1beta1.Types.KeyRequirement)) {
        return super.equals(obj);
      }
      axelar.tss.exported.v1beta1.Types.KeyRequirement other = (axelar.tss.exported.v1beta1.Types.KeyRequirement) obj;

      if (keyRole_ != other.keyRole_) return false;
      if (keyType_ != other.keyType_) return false;
      if (hasMinKeygenThreshold() != other.hasMinKeygenThreshold()) return false;
      if (hasMinKeygenThreshold()) {
        if (!getMinKeygenThreshold()
            .equals(other.getMinKeygenThreshold())) return false;
      }
      if (hasSafetyThreshold() != other.hasSafetyThreshold()) return false;
      if (hasSafetyThreshold()) {
        if (!getSafetyThreshold()
            .equals(other.getSafetyThreshold())) return false;
      }
      if (keyShareDistributionPolicy_ != other.keyShareDistributionPolicy_) return false;
      if (getMaxTotalShareCount()
          != other.getMaxTotalShareCount()) return false;
      if (getMinTotalShareCount()
          != other.getMinTotalShareCount()) return false;
      if (hasKeygenVotingThreshold() != other.hasKeygenVotingThreshold()) return false;
      if (hasKeygenVotingThreshold()) {
        if (!getKeygenVotingThreshold()
            .equals(other.getKeygenVotingThreshold())) return false;
      }
      if (hasSignVotingThreshold() != other.hasSignVotingThreshold()) return false;
      if (hasSignVotingThreshold()) {
        if (!getSignVotingThreshold()
            .equals(other.getSignVotingThreshold())) return false;
      }
      if (getKeygenTimeout()
          != other.getKeygenTimeout()) return false;
      if (getSignTimeout()
          != other.getSignTimeout()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_ROLE_FIELD_NUMBER;
      hash = (53 * hash) + keyRole_;
      hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + keyType_;
      if (hasMinKeygenThreshold()) {
        hash = (37 * hash) + MIN_KEYGEN_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getMinKeygenThreshold().hashCode();
      }
      if (hasSafetyThreshold()) {
        hash = (37 * hash) + SAFETY_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getSafetyThreshold().hashCode();
      }
      hash = (37 * hash) + KEY_SHARE_DISTRIBUTION_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + keyShareDistributionPolicy_;
      hash = (37 * hash) + MAX_TOTAL_SHARE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxTotalShareCount());
      hash = (37 * hash) + MIN_TOTAL_SHARE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMinTotalShareCount());
      if (hasKeygenVotingThreshold()) {
        hash = (37 * hash) + KEYGEN_VOTING_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getKeygenVotingThreshold().hashCode();
      }
      if (hasSignVotingThreshold()) {
        hash = (37 * hash) + SIGN_VOTING_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + getSignVotingThreshold().hashCode();
      }
      hash = (37 * hash) + KEYGEN_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKeygenTimeout());
      hash = (37 * hash) + SIGN_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSignTimeout());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.KeyRequirement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.KeyRequirement prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KeyRequirement defines requirements for keys
     * </pre>
     *
     * Protobuf type {@code axelar.tss.exported.v1beta1.KeyRequirement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.KeyRequirement)
        axelar.tss.exported.v1beta1.Types.KeyRequirementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.KeyRequirement.class, axelar.tss.exported.v1beta1.Types.KeyRequirement.Builder.class);
      }

      // Construct using axelar.tss.exported.v1beta1.Types.KeyRequirement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyRole_ = 0;

        keyType_ = 0;

        if (minKeygenThresholdBuilder_ == null) {
          minKeygenThreshold_ = null;
        } else {
          minKeygenThreshold_ = null;
          minKeygenThresholdBuilder_ = null;
        }
        if (safetyThresholdBuilder_ == null) {
          safetyThreshold_ = null;
        } else {
          safetyThreshold_ = null;
          safetyThresholdBuilder_ = null;
        }
        keyShareDistributionPolicy_ = 0;

        maxTotalShareCount_ = 0L;

        minTotalShareCount_ = 0L;

        if (keygenVotingThresholdBuilder_ == null) {
          keygenVotingThreshold_ = null;
        } else {
          keygenVotingThreshold_ = null;
          keygenVotingThresholdBuilder_ = null;
        }
        if (signVotingThresholdBuilder_ == null) {
          signVotingThreshold_ = null;
        } else {
          signVotingThreshold_ = null;
          signVotingThresholdBuilder_ = null;
        }
        keygenTimeout_ = 0L;

        signTimeout_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyRequirement getDefaultInstanceForType() {
        return axelar.tss.exported.v1beta1.Types.KeyRequirement.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyRequirement build() {
        axelar.tss.exported.v1beta1.Types.KeyRequirement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyRequirement buildPartial() {
        axelar.tss.exported.v1beta1.Types.KeyRequirement result = new axelar.tss.exported.v1beta1.Types.KeyRequirement(this);
        result.keyRole_ = keyRole_;
        result.keyType_ = keyType_;
        if (minKeygenThresholdBuilder_ == null) {
          result.minKeygenThreshold_ = minKeygenThreshold_;
        } else {
          result.minKeygenThreshold_ = minKeygenThresholdBuilder_.build();
        }
        if (safetyThresholdBuilder_ == null) {
          result.safetyThreshold_ = safetyThreshold_;
        } else {
          result.safetyThreshold_ = safetyThresholdBuilder_.build();
        }
        result.keyShareDistributionPolicy_ = keyShareDistributionPolicy_;
        result.maxTotalShareCount_ = maxTotalShareCount_;
        result.minTotalShareCount_ = minTotalShareCount_;
        if (keygenVotingThresholdBuilder_ == null) {
          result.keygenVotingThreshold_ = keygenVotingThreshold_;
        } else {
          result.keygenVotingThreshold_ = keygenVotingThresholdBuilder_.build();
        }
        if (signVotingThresholdBuilder_ == null) {
          result.signVotingThreshold_ = signVotingThreshold_;
        } else {
          result.signVotingThreshold_ = signVotingThresholdBuilder_.build();
        }
        result.keygenTimeout_ = keygenTimeout_;
        result.signTimeout_ = signTimeout_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.exported.v1beta1.Types.KeyRequirement) {
          return mergeFrom((axelar.tss.exported.v1beta1.Types.KeyRequirement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.KeyRequirement other) {
        if (other == axelar.tss.exported.v1beta1.Types.KeyRequirement.getDefaultInstance()) return this;
        if (other.keyRole_ != 0) {
          setKeyRoleValue(other.getKeyRoleValue());
        }
        if (other.keyType_ != 0) {
          setKeyTypeValue(other.getKeyTypeValue());
        }
        if (other.hasMinKeygenThreshold()) {
          mergeMinKeygenThreshold(other.getMinKeygenThreshold());
        }
        if (other.hasSafetyThreshold()) {
          mergeSafetyThreshold(other.getSafetyThreshold());
        }
        if (other.keyShareDistributionPolicy_ != 0) {
          setKeyShareDistributionPolicyValue(other.getKeyShareDistributionPolicyValue());
        }
        if (other.getMaxTotalShareCount() != 0L) {
          setMaxTotalShareCount(other.getMaxTotalShareCount());
        }
        if (other.getMinTotalShareCount() != 0L) {
          setMinTotalShareCount(other.getMinTotalShareCount());
        }
        if (other.hasKeygenVotingThreshold()) {
          mergeKeygenVotingThreshold(other.getKeygenVotingThreshold());
        }
        if (other.hasSignVotingThreshold()) {
          mergeSignVotingThreshold(other.getSignVotingThreshold());
        }
        if (other.getKeygenTimeout() != 0L) {
          setKeygenTimeout(other.getKeygenTimeout());
        }
        if (other.getSignTimeout() != 0L) {
          setSignTimeout(other.getSignTimeout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.exported.v1beta1.Types.KeyRequirement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.exported.v1beta1.Types.KeyRequirement) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int keyRole_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
       * @return The enum numeric value on the wire for keyRole.
       */
      @java.lang.Override public int getKeyRoleValue() {
        return keyRole_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
       * @param value The enum numeric value on the wire for keyRole to set.
       * @return This builder for chaining.
       */
      public Builder setKeyRoleValue(int value) {
        
        keyRole_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
       * @return The keyRole.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyRole getKeyRole() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.KeyRole result = axelar.tss.exported.v1beta1.Types.KeyRole.valueOf(keyRole_);
        return result == null ? axelar.tss.exported.v1beta1.Types.KeyRole.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
       * @param value The keyRole to set.
       * @return This builder for chaining.
       */
      public Builder setKeyRole(axelar.tss.exported.v1beta1.Types.KeyRole value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        keyRole_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole key_role = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyRole() {
        
        keyRole_ = 0;
        onChanged();
        return this;
      }

      private int keyType_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
       * @return The enum numeric value on the wire for keyType.
       */
      @java.lang.Override public int getKeyTypeValue() {
        return keyType_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
       * @param value The enum numeric value on the wire for keyType to set.
       * @return This builder for chaining.
       */
      public Builder setKeyTypeValue(int value) {
        
        keyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
       * @return The keyType.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyType getKeyType() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.KeyType result = axelar.tss.exported.v1beta1.Types.KeyType.valueOf(keyType_);
        return result == null ? axelar.tss.exported.v1beta1.Types.KeyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
       * @param value The keyType to set.
       * @return This builder for chaining.
       */
      public Builder setKeyType(axelar.tss.exported.v1beta1.Types.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        keyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType key_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyType() {
        
        keyType_ = 0;
        onChanged();
        return this;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold minKeygenThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> minKeygenThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       * @return Whether the minKeygenThreshold field is set.
       */
      public boolean hasMinKeygenThreshold() {
        return minKeygenThresholdBuilder_ != null || minKeygenThreshold_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       * @return The minKeygenThreshold.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getMinKeygenThreshold() {
        if (minKeygenThresholdBuilder_ == null) {
          return minKeygenThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : minKeygenThreshold_;
        } else {
          return minKeygenThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setMinKeygenThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (minKeygenThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minKeygenThreshold_ = value;
          onChanged();
        } else {
          minKeygenThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setMinKeygenThreshold(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (minKeygenThresholdBuilder_ == null) {
          minKeygenThreshold_ = builderForValue.build();
          onChanged();
        } else {
          minKeygenThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeMinKeygenThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (minKeygenThresholdBuilder_ == null) {
          if (minKeygenThreshold_ != null) {
            minKeygenThreshold_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(minKeygenThreshold_).mergeFrom(value).buildPartial();
          } else {
            minKeygenThreshold_ = value;
          }
          onChanged();
        } else {
          minKeygenThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearMinKeygenThreshold() {
        if (minKeygenThresholdBuilder_ == null) {
          minKeygenThreshold_ = null;
          onChanged();
        } else {
          minKeygenThreshold_ = null;
          minKeygenThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getMinKeygenThresholdBuilder() {
        
        onChanged();
        return getMinKeygenThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getMinKeygenThresholdOrBuilder() {
        if (minKeygenThresholdBuilder_ != null) {
          return minKeygenThresholdBuilder_.getMessageOrBuilder();
        } else {
          return minKeygenThreshold_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : minKeygenThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold min_keygen_threshold = 3 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getMinKeygenThresholdFieldBuilder() {
        if (minKeygenThresholdBuilder_ == null) {
          minKeygenThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getMinKeygenThreshold(),
                  getParentForChildren(),
                  isClean());
          minKeygenThreshold_ = null;
        }
        return minKeygenThresholdBuilder_;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold safetyThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> safetyThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       * @return Whether the safetyThreshold field is set.
       */
      public boolean hasSafetyThreshold() {
        return safetyThresholdBuilder_ != null || safetyThreshold_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       * @return The safetyThreshold.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSafetyThreshold() {
        if (safetyThresholdBuilder_ == null) {
          return safetyThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : safetyThreshold_;
        } else {
          return safetyThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setSafetyThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (safetyThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          safetyThreshold_ = value;
          onChanged();
        } else {
          safetyThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setSafetyThreshold(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (safetyThresholdBuilder_ == null) {
          safetyThreshold_ = builderForValue.build();
          onChanged();
        } else {
          safetyThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeSafetyThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (safetyThresholdBuilder_ == null) {
          if (safetyThreshold_ != null) {
            safetyThreshold_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(safetyThreshold_).mergeFrom(value).buildPartial();
          } else {
            safetyThreshold_ = value;
          }
          onChanged();
        } else {
          safetyThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearSafetyThreshold() {
        if (safetyThresholdBuilder_ == null) {
          safetyThreshold_ = null;
          onChanged();
        } else {
          safetyThreshold_ = null;
          safetyThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getSafetyThresholdBuilder() {
        
        onChanged();
        return getSafetyThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSafetyThresholdOrBuilder() {
        if (safetyThresholdBuilder_ != null) {
          return safetyThresholdBuilder_.getMessageOrBuilder();
        } else {
          return safetyThreshold_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : safetyThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold safety_threshold = 4 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getSafetyThresholdFieldBuilder() {
        if (safetyThresholdBuilder_ == null) {
          safetyThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getSafetyThreshold(),
                  getParentForChildren(),
                  isClean());
          safetyThreshold_ = null;
        }
        return safetyThresholdBuilder_;
      }

      private int keyShareDistributionPolicy_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
       * @return The enum numeric value on the wire for keyShareDistributionPolicy.
       */
      @java.lang.Override public int getKeyShareDistributionPolicyValue() {
        return keyShareDistributionPolicy_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
       * @param value The enum numeric value on the wire for keyShareDistributionPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setKeyShareDistributionPolicyValue(int value) {
        
        keyShareDistributionPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
       * @return The keyShareDistributionPolicy.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy getKeyShareDistributionPolicy() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy result = axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.valueOf(keyShareDistributionPolicy_);
        return result == null ? axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
       * @param value The keyShareDistributionPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setKeyShareDistributionPolicy(axelar.tss.exported.v1beta1.Types.KeyShareDistributionPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        keyShareDistributionPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyShareDistributionPolicy() {
        
        keyShareDistributionPolicy_ = 0;
        onChanged();
        return this;
      }

      private long maxTotalShareCount_ ;
      /**
       * <code>int64 max_total_share_count = 6;</code>
       * @return The maxTotalShareCount.
       */
      @java.lang.Override
      public long getMaxTotalShareCount() {
        return maxTotalShareCount_;
      }
      /**
       * <code>int64 max_total_share_count = 6;</code>
       * @param value The maxTotalShareCount to set.
       * @return This builder for chaining.
       */
      public Builder setMaxTotalShareCount(long value) {
        
        maxTotalShareCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 max_total_share_count = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxTotalShareCount() {
        
        maxTotalShareCount_ = 0L;
        onChanged();
        return this;
      }

      private long minTotalShareCount_ ;
      /**
       * <code>int64 min_total_share_count = 7;</code>
       * @return The minTotalShareCount.
       */
      @java.lang.Override
      public long getMinTotalShareCount() {
        return minTotalShareCount_;
      }
      /**
       * <code>int64 min_total_share_count = 7;</code>
       * @param value The minTotalShareCount to set.
       * @return This builder for chaining.
       */
      public Builder setMinTotalShareCount(long value) {
        
        minTotalShareCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 min_total_share_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinTotalShareCount() {
        
        minTotalShareCount_ = 0L;
        onChanged();
        return this;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold keygenVotingThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> keygenVotingThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       * @return Whether the keygenVotingThreshold field is set.
       */
      public boolean hasKeygenVotingThreshold() {
        return keygenVotingThresholdBuilder_ != null || keygenVotingThreshold_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       * @return The keygenVotingThreshold.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getKeygenVotingThreshold() {
        if (keygenVotingThresholdBuilder_ == null) {
          return keygenVotingThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : keygenVotingThreshold_;
        } else {
          return keygenVotingThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setKeygenVotingThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (keygenVotingThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keygenVotingThreshold_ = value;
          onChanged();
        } else {
          keygenVotingThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setKeygenVotingThreshold(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (keygenVotingThresholdBuilder_ == null) {
          keygenVotingThreshold_ = builderForValue.build();
          onChanged();
        } else {
          keygenVotingThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeKeygenVotingThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (keygenVotingThresholdBuilder_ == null) {
          if (keygenVotingThreshold_ != null) {
            keygenVotingThreshold_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(keygenVotingThreshold_).mergeFrom(value).buildPartial();
          } else {
            keygenVotingThreshold_ = value;
          }
          onChanged();
        } else {
          keygenVotingThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearKeygenVotingThreshold() {
        if (keygenVotingThresholdBuilder_ == null) {
          keygenVotingThreshold_ = null;
          onChanged();
        } else {
          keygenVotingThreshold_ = null;
          keygenVotingThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getKeygenVotingThresholdBuilder() {
        
        onChanged();
        return getKeygenVotingThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getKeygenVotingThresholdOrBuilder() {
        if (keygenVotingThresholdBuilder_ != null) {
          return keygenVotingThresholdBuilder_.getMessageOrBuilder();
        } else {
          return keygenVotingThreshold_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : keygenVotingThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getKeygenVotingThresholdFieldBuilder() {
        if (keygenVotingThresholdBuilder_ == null) {
          keygenVotingThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getKeygenVotingThreshold(),
                  getParentForChildren(),
                  isClean());
          keygenVotingThreshold_ = null;
        }
        return keygenVotingThresholdBuilder_;
      }

      private axelar.utils.v1beta1.ThresholdOuterClass.Threshold signVotingThreshold_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> signVotingThresholdBuilder_;
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       * @return Whether the signVotingThreshold field is set.
       */
      public boolean hasSignVotingThreshold() {
        return signVotingThresholdBuilder_ != null || signVotingThreshold_ != null;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       * @return The signVotingThreshold.
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold getSignVotingThreshold() {
        if (signVotingThresholdBuilder_ == null) {
          return signVotingThreshold_ == null ? axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : signVotingThreshold_;
        } else {
          return signVotingThresholdBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setSignVotingThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (signVotingThresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signVotingThreshold_ = value;
          onChanged();
        } else {
          signVotingThresholdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setSignVotingThreshold(
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder builderForValue) {
        if (signVotingThresholdBuilder_ == null) {
          signVotingThreshold_ = builderForValue.build();
          onChanged();
        } else {
          signVotingThresholdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeSignVotingThreshold(axelar.utils.v1beta1.ThresholdOuterClass.Threshold value) {
        if (signVotingThresholdBuilder_ == null) {
          if (signVotingThreshold_ != null) {
            signVotingThreshold_ =
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.newBuilder(signVotingThreshold_).mergeFrom(value).buildPartial();
          } else {
            signVotingThreshold_ = value;
          }
          onChanged();
        } else {
          signVotingThresholdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearSignVotingThreshold() {
        if (signVotingThresholdBuilder_ == null) {
          signVotingThreshold_ = null;
          onChanged();
        } else {
          signVotingThreshold_ = null;
          signVotingThresholdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder getSignVotingThresholdBuilder() {
        
        onChanged();
        return getSignVotingThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder getSignVotingThresholdOrBuilder() {
        if (signVotingThresholdBuilder_ != null) {
          return signVotingThresholdBuilder_.getMessageOrBuilder();
        } else {
          return signVotingThreshold_ == null ?
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold.getDefaultInstance() : signVotingThreshold_;
        }
      }
      /**
       * <code>.axelar.utils.v1beta1.Threshold sign_voting_threshold = 9 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder> 
          getSignVotingThresholdFieldBuilder() {
        if (signVotingThresholdBuilder_ == null) {
          signVotingThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.utils.v1beta1.ThresholdOuterClass.Threshold, axelar.utils.v1beta1.ThresholdOuterClass.Threshold.Builder, axelar.utils.v1beta1.ThresholdOuterClass.ThresholdOrBuilder>(
                  getSignVotingThreshold(),
                  getParentForChildren(),
                  isClean());
          signVotingThreshold_ = null;
        }
        return signVotingThresholdBuilder_;
      }

      private long keygenTimeout_ ;
      /**
       * <code>int64 keygen_timeout = 10;</code>
       * @return The keygenTimeout.
       */
      @java.lang.Override
      public long getKeygenTimeout() {
        return keygenTimeout_;
      }
      /**
       * <code>int64 keygen_timeout = 10;</code>
       * @param value The keygenTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setKeygenTimeout(long value) {
        
        keygenTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 keygen_timeout = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeygenTimeout() {
        
        keygenTimeout_ = 0L;
        onChanged();
        return this;
      }

      private long signTimeout_ ;
      /**
       * <code>int64 sign_timeout = 11;</code>
       * @return The signTimeout.
       */
      @java.lang.Override
      public long getSignTimeout() {
        return signTimeout_;
      }
      /**
       * <code>int64 sign_timeout = 11;</code>
       * @param value The signTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setSignTimeout(long value) {
        
        signTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 sign_timeout = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignTimeout() {
        
        signTimeout_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.KeyRequirement)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.KeyRequirement)
    private static final axelar.tss.exported.v1beta1.Types.KeyRequirement DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.KeyRequirement();
    }

    public static axelar.tss.exported.v1beta1.Types.KeyRequirement getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyRequirement>
        PARSER = new com.google.protobuf.AbstractParser<KeyRequirement>() {
      @java.lang.Override
      public KeyRequirement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyRequirement(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyRequirement> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyRequirement> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.KeyRequirement getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.SignInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The keyId.
     */
    java.lang.String getKeyId();
    /**
     * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The bytes for keyId.
     */
    com.google.protobuf.ByteString
        getKeyIdBytes();

    /**
     * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
     * @return The sigId.
     */
    java.lang.String getSigId();
    /**
     * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
     * @return The bytes for sigId.
     */
    com.google.protobuf.ByteString
        getSigIdBytes();

    /**
     * <code>bytes msg = 3;</code>
     * @return The msg.
     */
    com.google.protobuf.ByteString getMsg();

    /**
     * <code>int64 snapshot_counter = 4;</code>
     * @return The snapshotCounter.
     */
    long getSnapshotCounter();

    /**
     * <code>string request_module = 5;</code>
     * @return The requestModule.
     */
    java.lang.String getRequestModule();
    /**
     * <code>string request_module = 5;</code>
     * @return The bytes for requestModule.
     */
    com.google.protobuf.ByteString
        getRequestModuleBytes();

    /**
     * <code>string metadata = 6;</code>
     * @return The metadata.
     */
    java.lang.String getMetadata();
    /**
     * <code>string metadata = 6;</code>
     * @return The bytes for metadata.
     */
    com.google.protobuf.ByteString
        getMetadataBytes();
  }
  /**
   * <pre>
   * SignInfo holds information about a sign request
   * </pre>
   *
   * Protobuf type {@code axelar.tss.exported.v1beta1.SignInfo}
   */
  public static final class SignInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.SignInfo)
      SignInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignInfo.newBuilder() to construct.
    private SignInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignInfo() {
      keyId_ = "";
      sigId_ = "";
      msg_ = com.google.protobuf.ByteString.EMPTY;
      requestModule_ = "";
      metadata_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              keyId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              sigId_ = s;
              break;
            }
            case 26: {

              msg_ = input.readBytes();
              break;
            }
            case 32: {

              snapshotCounter_ = input.readInt64();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              requestModule_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              metadata_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SignInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.exported.v1beta1.Types.SignInfo.class, axelar.tss.exported.v1beta1.Types.SignInfo.Builder.class);
    }

    public static final int KEY_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object keyId_;
    /**
     * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The keyId.
     */
    @java.lang.Override
    public java.lang.String getKeyId() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyId_ = s;
        return s;
      }
    }
    /**
     * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The bytes for keyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyIdBytes() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIG_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object sigId_;
    /**
     * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
     * @return The sigId.
     */
    @java.lang.Override
    public java.lang.String getSigId() {
      java.lang.Object ref = sigId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sigId_ = s;
        return s;
      }
    }
    /**
     * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
     * @return The bytes for sigId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSigIdBytes() {
      java.lang.Object ref = sigId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sigId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSG_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString msg_;
    /**
     * <code>bytes msg = 3;</code>
     * @return The msg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMsg() {
      return msg_;
    }

    public static final int SNAPSHOT_COUNTER_FIELD_NUMBER = 4;
    private long snapshotCounter_;
    /**
     * <code>int64 snapshot_counter = 4;</code>
     * @return The snapshotCounter.
     */
    @java.lang.Override
    public long getSnapshotCounter() {
      return snapshotCounter_;
    }

    public static final int REQUEST_MODULE_FIELD_NUMBER = 5;
    private volatile java.lang.Object requestModule_;
    /**
     * <code>string request_module = 5;</code>
     * @return The requestModule.
     */
    @java.lang.Override
    public java.lang.String getRequestModule() {
      java.lang.Object ref = requestModule_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestModule_ = s;
        return s;
      }
    }
    /**
     * <code>string request_module = 5;</code>
     * @return The bytes for requestModule.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRequestModuleBytes() {
      java.lang.Object ref = requestModule_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestModule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_FIELD_NUMBER = 6;
    private volatile java.lang.Object metadata_;
    /**
     * <code>string metadata = 6;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public java.lang.String getMetadata() {
      java.lang.Object ref = metadata_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        metadata_ = s;
        return s;
      }
    }
    /**
     * <code>string metadata = 6;</code>
     * @return The bytes for metadata.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMetadataBytes() {
      java.lang.Object ref = metadata_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        metadata_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyId_);
      }
      if (!getSigIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sigId_);
      }
      if (!msg_.isEmpty()) {
        output.writeBytes(3, msg_);
      }
      if (snapshotCounter_ != 0L) {
        output.writeInt64(4, snapshotCounter_);
      }
      if (!getRequestModuleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, requestModule_);
      }
      if (!getMetadataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, metadata_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyId_);
      }
      if (!getSigIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sigId_);
      }
      if (!msg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, msg_);
      }
      if (snapshotCounter_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, snapshotCounter_);
      }
      if (!getRequestModuleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, requestModule_);
      }
      if (!getMetadataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, metadata_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.exported.v1beta1.Types.SignInfo)) {
        return super.equals(obj);
      }
      axelar.tss.exported.v1beta1.Types.SignInfo other = (axelar.tss.exported.v1beta1.Types.SignInfo) obj;

      if (!getKeyId()
          .equals(other.getKeyId())) return false;
      if (!getSigId()
          .equals(other.getSigId())) return false;
      if (!getMsg()
          .equals(other.getMsg())) return false;
      if (getSnapshotCounter()
          != other.getSnapshotCounter()) return false;
      if (!getRequestModule()
          .equals(other.getRequestModule())) return false;
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyId().hashCode();
      hash = (37 * hash) + SIG_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSigId().hashCode();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      hash = (37 * hash) + SNAPSHOT_COUNTER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSnapshotCounter());
      hash = (37 * hash) + REQUEST_MODULE_FIELD_NUMBER;
      hash = (53 * hash) + getRequestModule().hashCode();
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SignInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.SignInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignInfo holds information about a sign request
     * </pre>
     *
     * Protobuf type {@code axelar.tss.exported.v1beta1.SignInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.SignInfo)
        axelar.tss.exported.v1beta1.Types.SignInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SignInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.SignInfo.class, axelar.tss.exported.v1beta1.Types.SignInfo.Builder.class);
      }

      // Construct using axelar.tss.exported.v1beta1.Types.SignInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyId_ = "";

        sigId_ = "";

        msg_ = com.google.protobuf.ByteString.EMPTY;

        snapshotCounter_ = 0L;

        requestModule_ = "";

        metadata_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SignInfo getDefaultInstanceForType() {
        return axelar.tss.exported.v1beta1.Types.SignInfo.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SignInfo build() {
        axelar.tss.exported.v1beta1.Types.SignInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SignInfo buildPartial() {
        axelar.tss.exported.v1beta1.Types.SignInfo result = new axelar.tss.exported.v1beta1.Types.SignInfo(this);
        result.keyId_ = keyId_;
        result.sigId_ = sigId_;
        result.msg_ = msg_;
        result.snapshotCounter_ = snapshotCounter_;
        result.requestModule_ = requestModule_;
        result.metadata_ = metadata_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.exported.v1beta1.Types.SignInfo) {
          return mergeFrom((axelar.tss.exported.v1beta1.Types.SignInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.SignInfo other) {
        if (other == axelar.tss.exported.v1beta1.Types.SignInfo.getDefaultInstance()) return this;
        if (!other.getKeyId().isEmpty()) {
          keyId_ = other.keyId_;
          onChanged();
        }
        if (!other.getSigId().isEmpty()) {
          sigId_ = other.sigId_;
          onChanged();
        }
        if (other.getMsg() != com.google.protobuf.ByteString.EMPTY) {
          setMsg(other.getMsg());
        }
        if (other.getSnapshotCounter() != 0L) {
          setSnapshotCounter(other.getSnapshotCounter());
        }
        if (!other.getRequestModule().isEmpty()) {
          requestModule_ = other.requestModule_;
          onChanged();
        }
        if (!other.getMetadata().isEmpty()) {
          metadata_ = other.metadata_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.exported.v1beta1.Types.SignInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.exported.v1beta1.Types.SignInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object keyId_ = "";
      /**
       * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return The keyId.
       */
      public java.lang.String getKeyId() {
        java.lang.Object ref = keyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return The bytes for keyId.
       */
      public com.google.protobuf.ByteString
          getKeyIdBytes() {
        java.lang.Object ref = keyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
       * @param value The keyId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyId() {
        
        keyId_ = getDefaultInstance().getKeyId();
        onChanged();
        return this;
      }
      /**
       * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "KeyID"];</code>
       * @param value The bytes for keyId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sigId_ = "";
      /**
       * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
       * @return The sigId.
       */
      public java.lang.String getSigId() {
        java.lang.Object ref = sigId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sigId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
       * @return The bytes for sigId.
       */
      public com.google.protobuf.ByteString
          getSigIdBytes() {
        java.lang.Object ref = sigId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sigId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
       * @param value The sigId to set.
       * @return This builder for chaining.
       */
      public Builder setSigId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sigId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSigId() {
        
        sigId_ = getDefaultInstance().getSigId();
        onChanged();
        return this;
      }
      /**
       * <code>string sig_id = 2 [(.gogoproto.customname) = "SigID"];</code>
       * @param value The bytes for sigId to set.
       * @return This builder for chaining.
       */
      public Builder setSigIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sigId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString msg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes msg = 3;</code>
       * @return The msg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMsg() {
        return msg_;
      }
      /**
       * <code>bytes msg = 3;</code>
       * @param value The msg to set.
       * @return This builder for chaining.
       */
      public Builder setMsg(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes msg = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }

      private long snapshotCounter_ ;
      /**
       * <code>int64 snapshot_counter = 4;</code>
       * @return The snapshotCounter.
       */
      @java.lang.Override
      public long getSnapshotCounter() {
        return snapshotCounter_;
      }
      /**
       * <code>int64 snapshot_counter = 4;</code>
       * @param value The snapshotCounter to set.
       * @return This builder for chaining.
       */
      public Builder setSnapshotCounter(long value) {
        
        snapshotCounter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 snapshot_counter = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnapshotCounter() {
        
        snapshotCounter_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object requestModule_ = "";
      /**
       * <code>string request_module = 5;</code>
       * @return The requestModule.
       */
      public java.lang.String getRequestModule() {
        java.lang.Object ref = requestModule_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          requestModule_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string request_module = 5;</code>
       * @return The bytes for requestModule.
       */
      public com.google.protobuf.ByteString
          getRequestModuleBytes() {
        java.lang.Object ref = requestModule_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          requestModule_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string request_module = 5;</code>
       * @param value The requestModule to set.
       * @return This builder for chaining.
       */
      public Builder setRequestModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        requestModule_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string request_module = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestModule() {
        
        requestModule_ = getDefaultInstance().getRequestModule();
        onChanged();
        return this;
      }
      /**
       * <code>string request_module = 5;</code>
       * @param value The bytes for requestModule to set.
       * @return This builder for chaining.
       */
      public Builder setRequestModuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        requestModule_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object metadata_ = "";
      /**
       * <code>string metadata = 6;</code>
       * @return The metadata.
       */
      public java.lang.String getMetadata() {
        java.lang.Object ref = metadata_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          metadata_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string metadata = 6;</code>
       * @return The bytes for metadata.
       */
      public com.google.protobuf.ByteString
          getMetadataBytes() {
        java.lang.Object ref = metadata_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          metadata_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string metadata = 6;</code>
       * @param value The metadata to set.
       * @return This builder for chaining.
       */
      public Builder setMetadata(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        metadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string metadata = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetadata() {
        
        metadata_ = getDefaultInstance().getMetadata();
        onChanged();
        return this;
      }
      /**
       * <code>string metadata = 6;</code>
       * @param value The bytes for metadata to set.
       * @return This builder for chaining.
       */
      public Builder setMetadataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        metadata_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.SignInfo)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.SignInfo)
    private static final axelar.tss.exported.v1beta1.Types.SignInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.SignInfo();
    }

    public static axelar.tss.exported.v1beta1.Types.SignInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignInfo>
        PARSER = new com.google.protobuf.AbstractParser<SignInfo>() {
      @java.lang.Override
      public SignInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.SignInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SigKeyPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.SigKeyPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes pub_key = 1;</code>
     * @return The pubKey.
     */
    com.google.protobuf.ByteString getPubKey();

    /**
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * PubKeyInfo holds a pubkey and a signature
   * </pre>
   *
   * Protobuf type {@code axelar.tss.exported.v1beta1.SigKeyPair}
   */
  public static final class SigKeyPair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.SigKeyPair)
      SigKeyPairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SigKeyPair.newBuilder() to construct.
    private SigKeyPair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SigKeyPair() {
      pubKey_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SigKeyPair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SigKeyPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              pubKey_ = input.readBytes();
              break;
            }
            case 18: {

              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.exported.v1beta1.Types.SigKeyPair.class, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder.class);
    }

    public static final int PUB_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString pubKey_;
    /**
     * <code>bytes pub_key = 1;</code>
     * @return The pubKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPubKey() {
      return pubKey_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>bytes signature = 2;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pubKey_.isEmpty()) {
        output.writeBytes(1, pubKey_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(2, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!pubKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, pubKey_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.exported.v1beta1.Types.SigKeyPair)) {
        return super.equals(obj);
      }
      axelar.tss.exported.v1beta1.Types.SigKeyPair other = (axelar.tss.exported.v1beta1.Types.SigKeyPair) obj;

      if (!getPubKey()
          .equals(other.getPubKey())) return false;
      if (!getSignature()
          .equals(other.getSignature())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PUB_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPubKey().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.SigKeyPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.SigKeyPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PubKeyInfo holds a pubkey and a signature
     * </pre>
     *
     * Protobuf type {@code axelar.tss.exported.v1beta1.SigKeyPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.SigKeyPair)
        axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.SigKeyPair.class, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder.class);
      }

      // Construct using axelar.tss.exported.v1beta1.Types.SigKeyPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pubKey_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPair getDefaultInstanceForType() {
        return axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPair build() {
        axelar.tss.exported.v1beta1.Types.SigKeyPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPair buildPartial() {
        axelar.tss.exported.v1beta1.Types.SigKeyPair result = new axelar.tss.exported.v1beta1.Types.SigKeyPair(this);
        result.pubKey_ = pubKey_;
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.exported.v1beta1.Types.SigKeyPair) {
          return mergeFrom((axelar.tss.exported.v1beta1.Types.SigKeyPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.SigKeyPair other) {
        if (other == axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance()) return this;
        if (other.getPubKey() != com.google.protobuf.ByteString.EMPTY) {
          setPubKey(other.getPubKey());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.exported.v1beta1.Types.SigKeyPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.exported.v1beta1.Types.SigKeyPair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString pubKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes pub_key = 1;</code>
       * @return The pubKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPubKey() {
        return pubKey_;
      }
      /**
       * <code>bytes pub_key = 1;</code>
       * @param value The pubKey to set.
       * @return This builder for chaining.
       */
      public Builder setPubKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pubKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes pub_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPubKey() {
        
        pubKey_ = getDefaultInstance().getPubKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes signature = 2;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>bytes signature = 2;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes signature = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.SigKeyPair)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.SigKeyPair)
    private static final axelar.tss.exported.v1beta1.Types.SigKeyPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.SigKeyPair();
    }

    public static axelar.tss.exported.v1beta1.Types.SigKeyPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SigKeyPair>
        PARSER = new com.google.protobuf.AbstractParser<SigKeyPair>() {
      @java.lang.Override
      public SigKeyPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SigKeyPair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SigKeyPair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SigKeyPair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.SigKeyPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Signature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
     * @return The sigId.
     */
    java.lang.String getSigId();
    /**
     * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
     * @return The bytes for sigId.
     */
    com.google.protobuf.ByteString
        getSigIdBytes();

    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     * @return Whether the singleSig field is set.
     */
    boolean hasSingleSig();
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     * @return The singleSig.
     */
    axelar.tss.exported.v1beta1.Types.Signature.SingleSig getSingleSig();
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     */
    axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder getSingleSigOrBuilder();

    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     * @return Whether the multiSig field is set.
     */
    boolean hasMultiSig();
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     * @return The multiSig.
     */
    axelar.tss.exported.v1beta1.Types.Signature.MultiSig getMultiSig();
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     */
    axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder getMultiSigOrBuilder();

    /**
     * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
     * @return The enum numeric value on the wire for sigStatus.
     */
    int getSigStatusValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
     * @return The sigStatus.
     */
    axelar.tss.exported.v1beta1.Types.SigStatus getSigStatus();

    public axelar.tss.exported.v1beta1.Types.Signature.SigCase getSigCase();
  }
  /**
   * <pre>
   * Signature holds public key and ECDSA signature
   * </pre>
   *
   * Protobuf type {@code axelar.tss.exported.v1beta1.Signature}
   */
  public static final class Signature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Signature)
      SignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Signature.newBuilder() to construct.
    private Signature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Signature() {
      sigId_ = "";
      sigStatus_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Signature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Signature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              sigId_ = s;
              break;
            }
            case 18: {
              axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder subBuilder = null;
              if (sigCase_ == 2) {
                subBuilder = ((axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_).toBuilder();
              }
              sig_ =
                  input.readMessage(axelar.tss.exported.v1beta1.Types.Signature.SingleSig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_);
                sig_ = subBuilder.buildPartial();
              }
              sigCase_ = 2;
              break;
            }
            case 26: {
              axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder subBuilder = null;
              if (sigCase_ == 3) {
                subBuilder = ((axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_).toBuilder();
              }
              sig_ =
                  input.readMessage(axelar.tss.exported.v1beta1.Types.Signature.MultiSig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_);
                sig_ = subBuilder.buildPartial();
              }
              sigCase_ = 3;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              sigStatus_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.exported.v1beta1.Types.Signature.class, axelar.tss.exported.v1beta1.Types.Signature.Builder.class);
    }

    public interface SingleSigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Signature.SingleSig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       * @return Whether the sigKeyPair field is set.
       */
      boolean hasSigKeyPair();
      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       * @return The sigKeyPair.
       */
      axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPair();
      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       */
      axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairOrBuilder();
    }
    /**
     * Protobuf type {@code axelar.tss.exported.v1beta1.Signature.SingleSig}
     */
    public static final class SingleSig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Signature.SingleSig)
        SingleSigOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SingleSig.newBuilder() to construct.
      private SingleSig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SingleSig() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SingleSig();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SingleSig(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder subBuilder = null;
                if (sigKeyPair_ != null) {
                  subBuilder = sigKeyPair_.toBuilder();
                }
                sigKeyPair_ = input.readMessage(axelar.tss.exported.v1beta1.Types.SigKeyPair.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sigKeyPair_);
                  sigKeyPair_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Signature.SingleSig.class, axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder.class);
      }

      public static final int SIG_KEY_PAIR_FIELD_NUMBER = 1;
      private axelar.tss.exported.v1beta1.Types.SigKeyPair sigKeyPair_;
      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       * @return Whether the sigKeyPair field is set.
       */
      @java.lang.Override
      public boolean hasSigKeyPair() {
        return sigKeyPair_ != null;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       * @return The sigKeyPair.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPair() {
        return sigKeyPair_ == null ? axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance() : sigKeyPair_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairOrBuilder() {
        return getSigKeyPair();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sigKeyPair_ != null) {
          output.writeMessage(1, getSigKeyPair());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sigKeyPair_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSigKeyPair());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Signature.SingleSig)) {
          return super.equals(obj);
        }
        axelar.tss.exported.v1beta1.Types.Signature.SingleSig other = (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) obj;

        if (hasSigKeyPair() != other.hasSigKeyPair()) return false;
        if (hasSigKeyPair()) {
          if (!getSigKeyPair()
              .equals(other.getSigKeyPair())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSigKeyPair()) {
          hash = (37 * hash) + SIG_KEY_PAIR_FIELD_NUMBER;
          hash = (53 * hash) + getSigKeyPair().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Signature.SingleSig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.tss.exported.v1beta1.Signature.SingleSig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Signature.SingleSig)
          axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.tss.exported.v1beta1.Types.Signature.SingleSig.class, axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder.class);
        }

        // Construct using axelar.tss.exported.v1beta1.Types.Signature.SingleSig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sigKeyPairBuilder_ == null) {
            sigKeyPair_ = null;
          } else {
            sigKeyPair_ = null;
            sigKeyPairBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.SingleSig getDefaultInstanceForType() {
          return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.SingleSig build() {
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.SingleSig buildPartial() {
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig result = new axelar.tss.exported.v1beta1.Types.Signature.SingleSig(this);
          if (sigKeyPairBuilder_ == null) {
            result.sigKeyPair_ = sigKeyPair_;
          } else {
            result.sigKeyPair_ = sigKeyPairBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.tss.exported.v1beta1.Types.Signature.SingleSig) {
            return mergeFrom((axelar.tss.exported.v1beta1.Types.Signature.SingleSig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Signature.SingleSig other) {
          if (other == axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance()) return this;
          if (other.hasSigKeyPair()) {
            mergeSigKeyPair(other.getSigKeyPair());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private axelar.tss.exported.v1beta1.Types.SigKeyPair sigKeyPair_;
        private com.google.protobuf.SingleFieldBuilderV3<
            axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> sigKeyPairBuilder_;
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         * @return Whether the sigKeyPair field is set.
         */
        public boolean hasSigKeyPair() {
          return sigKeyPairBuilder_ != null || sigKeyPair_ != null;
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         * @return The sigKeyPair.
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPair() {
          if (sigKeyPairBuilder_ == null) {
            return sigKeyPair_ == null ? axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance() : sigKeyPair_;
          } else {
            return sigKeyPairBuilder_.getMessage();
          }
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setSigKeyPair(axelar.tss.exported.v1beta1.Types.SigKeyPair value) {
          if (sigKeyPairBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sigKeyPair_ = value;
            onChanged();
          } else {
            sigKeyPairBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setSigKeyPair(
            axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder builderForValue) {
          if (sigKeyPairBuilder_ == null) {
            sigKeyPair_ = builderForValue.build();
            onChanged();
          } else {
            sigKeyPairBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder mergeSigKeyPair(axelar.tss.exported.v1beta1.Types.SigKeyPair value) {
          if (sigKeyPairBuilder_ == null) {
            if (sigKeyPair_ != null) {
              sigKeyPair_ =
                axelar.tss.exported.v1beta1.Types.SigKeyPair.newBuilder(sigKeyPair_).mergeFrom(value).buildPartial();
            } else {
              sigKeyPair_ = value;
            }
            onChanged();
          } else {
            sigKeyPairBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder clearSigKeyPair() {
          if (sigKeyPairBuilder_ == null) {
            sigKeyPair_ = null;
            onChanged();
          } else {
            sigKeyPair_ = null;
            sigKeyPairBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder getSigKeyPairBuilder() {
          
          onChanged();
          return getSigKeyPairFieldBuilder().getBuilder();
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairOrBuilder() {
          if (sigKeyPairBuilder_ != null) {
            return sigKeyPairBuilder_.getMessageOrBuilder();
          } else {
            return sigKeyPair_ == null ?
                axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance() : sigKeyPair_;
          }
        }
        /**
         * <code>.axelar.tss.exported.v1beta1.SigKeyPair sig_key_pair = 1 [(.gogoproto.nullable) = false];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> 
            getSigKeyPairFieldBuilder() {
          if (sigKeyPairBuilder_ == null) {
            sigKeyPairBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder>(
                    getSigKeyPair(),
                    getParentForChildren(),
                    isClean());
            sigKeyPair_ = null;
          }
          return sigKeyPairBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Signature.SingleSig)
      }

      // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Signature.SingleSig)
      private static final axelar.tss.exported.v1beta1.Types.Signature.SingleSig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Signature.SingleSig();
      }

      public static axelar.tss.exported.v1beta1.Types.Signature.SingleSig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SingleSig>
          PARSER = new com.google.protobuf.AbstractParser<SingleSig>() {
        @java.lang.Override
        public SingleSig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SingleSig(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SingleSig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SingleSig> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.SingleSig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MultiSigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Signature.MultiSig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair> 
          getSigKeyPairsList();
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPairs(int index);
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      int getSigKeyPairsCount();
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      java.util.List<? extends axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> 
          getSigKeyPairsOrBuilderList();
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code axelar.tss.exported.v1beta1.Signature.MultiSig}
     */
    public static final class MultiSig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Signature.MultiSig)
        MultiSigOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MultiSig.newBuilder() to construct.
      private MultiSig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MultiSig() {
        sigKeyPairs_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MultiSig();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private MultiSig(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  sigKeyPairs_ = new java.util.ArrayList<axelar.tss.exported.v1beta1.Types.SigKeyPair>();
                  mutable_bitField0_ |= 0x00000001;
                }
                sigKeyPairs_.add(
                    input.readMessage(axelar.tss.exported.v1beta1.Types.SigKeyPair.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            sigKeyPairs_ = java.util.Collections.unmodifiableList(sigKeyPairs_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Signature.MultiSig.class, axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder.class);
      }

      public static final int SIG_KEY_PAIRS_FIELD_NUMBER = 1;
      private java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair> sigKeyPairs_;
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair> getSigKeyPairsList() {
        return sigKeyPairs_;
      }
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public java.util.List<? extends axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> 
          getSigKeyPairsOrBuilderList() {
        return sigKeyPairs_;
      }
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public int getSigKeyPairsCount() {
        return sigKeyPairs_.size();
      }
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPairs(int index) {
        return sigKeyPairs_.get(index);
      }
      /**
       * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairsOrBuilder(
          int index) {
        return sigKeyPairs_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < sigKeyPairs_.size(); i++) {
          output.writeMessage(1, sigKeyPairs_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < sigKeyPairs_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, sigKeyPairs_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Signature.MultiSig)) {
          return super.equals(obj);
        }
        axelar.tss.exported.v1beta1.Types.Signature.MultiSig other = (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) obj;

        if (!getSigKeyPairsList()
            .equals(other.getSigKeyPairsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getSigKeyPairsCount() > 0) {
          hash = (37 * hash) + SIG_KEY_PAIRS_FIELD_NUMBER;
          hash = (53 * hash) + getSigKeyPairsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Signature.MultiSig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.tss.exported.v1beta1.Signature.MultiSig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Signature.MultiSig)
          axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.tss.exported.v1beta1.Types.Signature.MultiSig.class, axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder.class);
        }

        // Construct using axelar.tss.exported.v1beta1.Types.Signature.MultiSig.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSigKeyPairsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (sigKeyPairsBuilder_ == null) {
            sigKeyPairs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            sigKeyPairsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.MultiSig getDefaultInstanceForType() {
          return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.MultiSig build() {
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Signature.MultiSig buildPartial() {
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig result = new axelar.tss.exported.v1beta1.Types.Signature.MultiSig(this);
          int from_bitField0_ = bitField0_;
          if (sigKeyPairsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              sigKeyPairs_ = java.util.Collections.unmodifiableList(sigKeyPairs_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.sigKeyPairs_ = sigKeyPairs_;
          } else {
            result.sigKeyPairs_ = sigKeyPairsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.tss.exported.v1beta1.Types.Signature.MultiSig) {
            return mergeFrom((axelar.tss.exported.v1beta1.Types.Signature.MultiSig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Signature.MultiSig other) {
          if (other == axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance()) return this;
          if (sigKeyPairsBuilder_ == null) {
            if (!other.sigKeyPairs_.isEmpty()) {
              if (sigKeyPairs_.isEmpty()) {
                sigKeyPairs_ = other.sigKeyPairs_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSigKeyPairsIsMutable();
                sigKeyPairs_.addAll(other.sigKeyPairs_);
              }
              onChanged();
            }
          } else {
            if (!other.sigKeyPairs_.isEmpty()) {
              if (sigKeyPairsBuilder_.isEmpty()) {
                sigKeyPairsBuilder_.dispose();
                sigKeyPairsBuilder_ = null;
                sigKeyPairs_ = other.sigKeyPairs_;
                bitField0_ = (bitField0_ & ~0x00000001);
                sigKeyPairsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSigKeyPairsFieldBuilder() : null;
              } else {
                sigKeyPairsBuilder_.addAllMessages(other.sigKeyPairs_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair> sigKeyPairs_ =
          java.util.Collections.emptyList();
        private void ensureSigKeyPairsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            sigKeyPairs_ = new java.util.ArrayList<axelar.tss.exported.v1beta1.Types.SigKeyPair>(sigKeyPairs_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> sigKeyPairsBuilder_;

        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair> getSigKeyPairsList() {
          if (sigKeyPairsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(sigKeyPairs_);
          } else {
            return sigKeyPairsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public int getSigKeyPairsCount() {
          if (sigKeyPairsBuilder_ == null) {
            return sigKeyPairs_.size();
          } else {
            return sigKeyPairsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair getSigKeyPairs(int index) {
          if (sigKeyPairsBuilder_ == null) {
            return sigKeyPairs_.get(index);
          } else {
            return sigKeyPairsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setSigKeyPairs(
            int index, axelar.tss.exported.v1beta1.Types.SigKeyPair value) {
          if (sigKeyPairsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.set(index, value);
            onChanged();
          } else {
            sigKeyPairsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setSigKeyPairs(
            int index, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder builderForValue) {
          if (sigKeyPairsBuilder_ == null) {
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.set(index, builderForValue.build());
            onChanged();
          } else {
            sigKeyPairsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addSigKeyPairs(axelar.tss.exported.v1beta1.Types.SigKeyPair value) {
          if (sigKeyPairsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.add(value);
            onChanged();
          } else {
            sigKeyPairsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addSigKeyPairs(
            int index, axelar.tss.exported.v1beta1.Types.SigKeyPair value) {
          if (sigKeyPairsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.add(index, value);
            onChanged();
          } else {
            sigKeyPairsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addSigKeyPairs(
            axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder builderForValue) {
          if (sigKeyPairsBuilder_ == null) {
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.add(builderForValue.build());
            onChanged();
          } else {
            sigKeyPairsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addSigKeyPairs(
            int index, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder builderForValue) {
          if (sigKeyPairsBuilder_ == null) {
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.add(index, builderForValue.build());
            onChanged();
          } else {
            sigKeyPairsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addAllSigKeyPairs(
            java.lang.Iterable<? extends axelar.tss.exported.v1beta1.Types.SigKeyPair> values) {
          if (sigKeyPairsBuilder_ == null) {
            ensureSigKeyPairsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sigKeyPairs_);
            onChanged();
          } else {
            sigKeyPairsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder clearSigKeyPairs() {
          if (sigKeyPairsBuilder_ == null) {
            sigKeyPairs_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            sigKeyPairsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public Builder removeSigKeyPairs(int index) {
          if (sigKeyPairsBuilder_ == null) {
            ensureSigKeyPairsIsMutable();
            sigKeyPairs_.remove(index);
            onChanged();
          } else {
            sigKeyPairsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder getSigKeyPairsBuilder(
            int index) {
          return getSigKeyPairsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder getSigKeyPairsOrBuilder(
            int index) {
          if (sigKeyPairsBuilder_ == null) {
            return sigKeyPairs_.get(index);  } else {
            return sigKeyPairsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<? extends axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> 
             getSigKeyPairsOrBuilderList() {
          if (sigKeyPairsBuilder_ != null) {
            return sigKeyPairsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(sigKeyPairs_);
          }
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder addSigKeyPairsBuilder() {
          return getSigKeyPairsFieldBuilder().addBuilder(
              axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance());
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder addSigKeyPairsBuilder(
            int index) {
          return getSigKeyPairsFieldBuilder().addBuilder(
              index, axelar.tss.exported.v1beta1.Types.SigKeyPair.getDefaultInstance());
        }
        /**
         * <code>repeated .axelar.tss.exported.v1beta1.SigKeyPair sig_key_pairs = 1 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder> 
             getSigKeyPairsBuilderList() {
          return getSigKeyPairsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder> 
            getSigKeyPairsFieldBuilder() {
          if (sigKeyPairsBuilder_ == null) {
            sigKeyPairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                axelar.tss.exported.v1beta1.Types.SigKeyPair, axelar.tss.exported.v1beta1.Types.SigKeyPair.Builder, axelar.tss.exported.v1beta1.Types.SigKeyPairOrBuilder>(
                    sigKeyPairs_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            sigKeyPairs_ = null;
          }
          return sigKeyPairsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Signature.MultiSig)
      }

      // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Signature.MultiSig)
      private static final axelar.tss.exported.v1beta1.Types.Signature.MultiSig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Signature.MultiSig();
      }

      public static axelar.tss.exported.v1beta1.Types.Signature.MultiSig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MultiSig>
          PARSER = new com.google.protobuf.AbstractParser<MultiSig>() {
        @java.lang.Override
        public MultiSig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultiSig(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<MultiSig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MultiSig> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.MultiSig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int sigCase_ = 0;
    private java.lang.Object sig_;
    public enum SigCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SINGLE_SIG(2),
      MULTI_SIG(3),
      SIG_NOT_SET(0);
      private final int value;
      private SigCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SigCase valueOf(int value) {
        return forNumber(value);
      }

      public static SigCase forNumber(int value) {
        switch (value) {
          case 2: return SINGLE_SIG;
          case 3: return MULTI_SIG;
          case 0: return SIG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SigCase
    getSigCase() {
      return SigCase.forNumber(
          sigCase_);
    }

    public static final int SIG_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object sigId_;
    /**
     * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
     * @return The sigId.
     */
    @java.lang.Override
    public java.lang.String getSigId() {
      java.lang.Object ref = sigId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sigId_ = s;
        return s;
      }
    }
    /**
     * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
     * @return The bytes for sigId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSigIdBytes() {
      java.lang.Object ref = sigId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sigId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SINGLE_SIG_FIELD_NUMBER = 2;
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     * @return Whether the singleSig field is set.
     */
    @java.lang.Override
    public boolean hasSingleSig() {
      return sigCase_ == 2;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     * @return The singleSig.
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Signature.SingleSig getSingleSig() {
      if (sigCase_ == 2) {
         return (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_;
      }
      return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder getSingleSigOrBuilder() {
      if (sigCase_ == 2) {
         return (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_;
      }
      return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
    }

    public static final int MULTI_SIG_FIELD_NUMBER = 3;
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     * @return Whether the multiSig field is set.
     */
    @java.lang.Override
    public boolean hasMultiSig() {
      return sigCase_ == 3;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     * @return The multiSig.
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Signature.MultiSig getMultiSig() {
      if (sigCase_ == 3) {
         return (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_;
      }
      return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder getMultiSigOrBuilder() {
      if (sigCase_ == 3) {
         return (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_;
      }
      return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
    }

    public static final int SIG_STATUS_FIELD_NUMBER = 4;
    private int sigStatus_;
    /**
     * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
     * @return The enum numeric value on the wire for sigStatus.
     */
    @java.lang.Override public int getSigStatusValue() {
      return sigStatus_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
     * @return The sigStatus.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.SigStatus getSigStatus() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.SigStatus result = axelar.tss.exported.v1beta1.Types.SigStatus.valueOf(sigStatus_);
      return result == null ? axelar.tss.exported.v1beta1.Types.SigStatus.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSigIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sigId_);
      }
      if (sigCase_ == 2) {
        output.writeMessage(2, (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_);
      }
      if (sigCase_ == 3) {
        output.writeMessage(3, (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_);
      }
      if (sigStatus_ != axelar.tss.exported.v1beta1.Types.SigStatus.SIG_STATUS_UNSPECIFIED.getNumber()) {
        output.writeEnum(4, sigStatus_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSigIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sigId_);
      }
      if (sigCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_);
      }
      if (sigCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_);
      }
      if (sigStatus_ != axelar.tss.exported.v1beta1.Types.SigStatus.SIG_STATUS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, sigStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Signature)) {
        return super.equals(obj);
      }
      axelar.tss.exported.v1beta1.Types.Signature other = (axelar.tss.exported.v1beta1.Types.Signature) obj;

      if (!getSigId()
          .equals(other.getSigId())) return false;
      if (sigStatus_ != other.sigStatus_) return false;
      if (!getSigCase().equals(other.getSigCase())) return false;
      switch (sigCase_) {
        case 2:
          if (!getSingleSig()
              .equals(other.getSingleSig())) return false;
          break;
        case 3:
          if (!getMultiSig()
              .equals(other.getMultiSig())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIG_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSigId().hashCode();
      hash = (37 * hash) + SIG_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + sigStatus_;
      switch (sigCase_) {
        case 2:
          hash = (37 * hash) + SINGLE_SIG_FIELD_NUMBER;
          hash = (53 * hash) + getSingleSig().hashCode();
          break;
        case 3:
          hash = (37 * hash) + MULTI_SIG_FIELD_NUMBER;
          hash = (53 * hash) + getMultiSig().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Signature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Signature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Signature holds public key and ECDSA signature
     * </pre>
     *
     * Protobuf type {@code axelar.tss.exported.v1beta1.Signature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Signature)
        axelar.tss.exported.v1beta1.Types.SignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Signature.class, axelar.tss.exported.v1beta1.Types.Signature.Builder.class);
      }

      // Construct using axelar.tss.exported.v1beta1.Types.Signature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sigId_ = "";

        sigStatus_ = 0;

        sigCase_ = 0;
        sig_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Signature_descriptor;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature getDefaultInstanceForType() {
        return axelar.tss.exported.v1beta1.Types.Signature.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature build() {
        axelar.tss.exported.v1beta1.Types.Signature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature buildPartial() {
        axelar.tss.exported.v1beta1.Types.Signature result = new axelar.tss.exported.v1beta1.Types.Signature(this);
        result.sigId_ = sigId_;
        if (sigCase_ == 2) {
          if (singleSigBuilder_ == null) {
            result.sig_ = sig_;
          } else {
            result.sig_ = singleSigBuilder_.build();
          }
        }
        if (sigCase_ == 3) {
          if (multiSigBuilder_ == null) {
            result.sig_ = sig_;
          } else {
            result.sig_ = multiSigBuilder_.build();
          }
        }
        result.sigStatus_ = sigStatus_;
        result.sigCase_ = sigCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.exported.v1beta1.Types.Signature) {
          return mergeFrom((axelar.tss.exported.v1beta1.Types.Signature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Signature other) {
        if (other == axelar.tss.exported.v1beta1.Types.Signature.getDefaultInstance()) return this;
        if (!other.getSigId().isEmpty()) {
          sigId_ = other.sigId_;
          onChanged();
        }
        if (other.sigStatus_ != 0) {
          setSigStatusValue(other.getSigStatusValue());
        }
        switch (other.getSigCase()) {
          case SINGLE_SIG: {
            mergeSingleSig(other.getSingleSig());
            break;
          }
          case MULTI_SIG: {
            mergeMultiSig(other.getMultiSig());
            break;
          }
          case SIG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.exported.v1beta1.Types.Signature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.exported.v1beta1.Types.Signature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sigCase_ = 0;
      private java.lang.Object sig_;
      public SigCase
          getSigCase() {
        return SigCase.forNumber(
            sigCase_);
      }

      public Builder clearSig() {
        sigCase_ = 0;
        sig_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object sigId_ = "";
      /**
       * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
       * @return The sigId.
       */
      public java.lang.String getSigId() {
        java.lang.Object ref = sigId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sigId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
       * @return The bytes for sigId.
       */
      public com.google.protobuf.ByteString
          getSigIdBytes() {
        java.lang.Object ref = sigId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sigId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
       * @param value The sigId to set.
       * @return This builder for chaining.
       */
      public Builder setSigId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sigId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSigId() {
        
        sigId_ = getDefaultInstance().getSigId();
        onChanged();
        return this;
      }
      /**
       * <code>string sig_id = 1 [(.gogoproto.customname) = "SigID"];</code>
       * @param value The bytes for sigId to set.
       * @return This builder for chaining.
       */
      public Builder setSigIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sigId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig, axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder> singleSigBuilder_;
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       * @return Whether the singleSig field is set.
       */
      @java.lang.Override
      public boolean hasSingleSig() {
        return sigCase_ == 2;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       * @return The singleSig.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.SingleSig getSingleSig() {
        if (singleSigBuilder_ == null) {
          if (sigCase_ == 2) {
            return (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_;
          }
          return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
        } else {
          if (sigCase_ == 2) {
            return singleSigBuilder_.getMessage();
          }
          return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      public Builder setSingleSig(axelar.tss.exported.v1beta1.Types.Signature.SingleSig value) {
        if (singleSigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sig_ = value;
          onChanged();
        } else {
          singleSigBuilder_.setMessage(value);
        }
        sigCase_ = 2;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      public Builder setSingleSig(
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder builderForValue) {
        if (singleSigBuilder_ == null) {
          sig_ = builderForValue.build();
          onChanged();
        } else {
          singleSigBuilder_.setMessage(builderForValue.build());
        }
        sigCase_ = 2;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      public Builder mergeSingleSig(axelar.tss.exported.v1beta1.Types.Signature.SingleSig value) {
        if (singleSigBuilder_ == null) {
          if (sigCase_ == 2 &&
              sig_ != axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance()) {
            sig_ = axelar.tss.exported.v1beta1.Types.Signature.SingleSig.newBuilder((axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_)
                .mergeFrom(value).buildPartial();
          } else {
            sig_ = value;
          }
          onChanged();
        } else {
          if (sigCase_ == 2) {
            singleSigBuilder_.mergeFrom(value);
          }
          singleSigBuilder_.setMessage(value);
        }
        sigCase_ = 2;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      public Builder clearSingleSig() {
        if (singleSigBuilder_ == null) {
          if (sigCase_ == 2) {
            sigCase_ = 0;
            sig_ = null;
            onChanged();
          }
        } else {
          if (sigCase_ == 2) {
            sigCase_ = 0;
            sig_ = null;
          }
          singleSigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      public axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder getSingleSigBuilder() {
        return getSingleSigFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder getSingleSigOrBuilder() {
        if ((sigCase_ == 2) && (singleSigBuilder_ != null)) {
          return singleSigBuilder_.getMessageOrBuilder();
        } else {
          if (sigCase_ == 2) {
            return (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_;
          }
          return axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.SingleSig single_sig = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Signature.SingleSig, axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder> 
          getSingleSigFieldBuilder() {
        if (singleSigBuilder_ == null) {
          if (!(sigCase_ == 2)) {
            sig_ = axelar.tss.exported.v1beta1.Types.Signature.SingleSig.getDefaultInstance();
          }
          singleSigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.tss.exported.v1beta1.Types.Signature.SingleSig, axelar.tss.exported.v1beta1.Types.Signature.SingleSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.SingleSigOrBuilder>(
                  (axelar.tss.exported.v1beta1.Types.Signature.SingleSig) sig_,
                  getParentForChildren(),
                  isClean());
          sig_ = null;
        }
        sigCase_ = 2;
        onChanged();;
        return singleSigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig, axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder> multiSigBuilder_;
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       * @return Whether the multiSig field is set.
       */
      @java.lang.Override
      public boolean hasMultiSig() {
        return sigCase_ == 3;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       * @return The multiSig.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.MultiSig getMultiSig() {
        if (multiSigBuilder_ == null) {
          if (sigCase_ == 3) {
            return (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_;
          }
          return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
        } else {
          if (sigCase_ == 3) {
            return multiSigBuilder_.getMessage();
          }
          return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      public Builder setMultiSig(axelar.tss.exported.v1beta1.Types.Signature.MultiSig value) {
        if (multiSigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sig_ = value;
          onChanged();
        } else {
          multiSigBuilder_.setMessage(value);
        }
        sigCase_ = 3;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      public Builder setMultiSig(
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder builderForValue) {
        if (multiSigBuilder_ == null) {
          sig_ = builderForValue.build();
          onChanged();
        } else {
          multiSigBuilder_.setMessage(builderForValue.build());
        }
        sigCase_ = 3;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      public Builder mergeMultiSig(axelar.tss.exported.v1beta1.Types.Signature.MultiSig value) {
        if (multiSigBuilder_ == null) {
          if (sigCase_ == 3 &&
              sig_ != axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance()) {
            sig_ = axelar.tss.exported.v1beta1.Types.Signature.MultiSig.newBuilder((axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_)
                .mergeFrom(value).buildPartial();
          } else {
            sig_ = value;
          }
          onChanged();
        } else {
          if (sigCase_ == 3) {
            multiSigBuilder_.mergeFrom(value);
          }
          multiSigBuilder_.setMessage(value);
        }
        sigCase_ = 3;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      public Builder clearMultiSig() {
        if (multiSigBuilder_ == null) {
          if (sigCase_ == 3) {
            sigCase_ = 0;
            sig_ = null;
            onChanged();
          }
        } else {
          if (sigCase_ == 3) {
            sigCase_ = 0;
            sig_ = null;
          }
          multiSigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      public axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder getMultiSigBuilder() {
        return getMultiSigFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder getMultiSigOrBuilder() {
        if ((sigCase_ == 3) && (multiSigBuilder_ != null)) {
          return multiSigBuilder_.getMessageOrBuilder();
        } else {
          if (sigCase_ == 3) {
            return (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_;
          }
          return axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Signature.MultiSig multi_sig = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Signature.MultiSig, axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder> 
          getMultiSigFieldBuilder() {
        if (multiSigBuilder_ == null) {
          if (!(sigCase_ == 3)) {
            sig_ = axelar.tss.exported.v1beta1.Types.Signature.MultiSig.getDefaultInstance();
          }
          multiSigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.tss.exported.v1beta1.Types.Signature.MultiSig, axelar.tss.exported.v1beta1.Types.Signature.MultiSig.Builder, axelar.tss.exported.v1beta1.Types.Signature.MultiSigOrBuilder>(
                  (axelar.tss.exported.v1beta1.Types.Signature.MultiSig) sig_,
                  getParentForChildren(),
                  isClean());
          sig_ = null;
        }
        sigCase_ = 3;
        onChanged();;
        return multiSigBuilder_;
      }

      private int sigStatus_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
       * @return The enum numeric value on the wire for sigStatus.
       */
      @java.lang.Override public int getSigStatusValue() {
        return sigStatus_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
       * @param value The enum numeric value on the wire for sigStatus to set.
       * @return This builder for chaining.
       */
      public Builder setSigStatusValue(int value) {
        
        sigStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
       * @return The sigStatus.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.SigStatus getSigStatus() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.SigStatus result = axelar.tss.exported.v1beta1.Types.SigStatus.valueOf(sigStatus_);
        return result == null ? axelar.tss.exported.v1beta1.Types.SigStatus.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
       * @param value The sigStatus to set.
       * @return This builder for chaining.
       */
      public Builder setSigStatus(axelar.tss.exported.v1beta1.Types.SigStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        sigStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.SigStatus sig_status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSigStatus() {
        
        sigStatus_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Signature)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Signature)
    private static final axelar.tss.exported.v1beta1.Types.Signature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Signature();
    }

    public static axelar.tss.exported.v1beta1.Types.Signature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Signature>
        PARSER = new com.google.protobuf.AbstractParser<Signature>() {
      @java.lang.Override
      public Signature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Signature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Signature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Signature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Signature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Key)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
     * @return The enum numeric value on the wire for role.
     */
    int getRoleValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
     * @return The role.
     */
    axelar.tss.exported.v1beta1.Types.KeyRole getRole();

    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
     * @return The type.
     */
    axelar.tss.exported.v1beta1.Types.KeyType getType();

    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     * @return Whether the ecdsaKey field is set.
     */
    boolean hasEcdsaKey();
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     * @return The ecdsaKey.
     */
    axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getEcdsaKey();
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     */
    axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder getEcdsaKeyOrBuilder();

    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     * @return Whether the multisigKey field is set.
     */
    boolean hasMultisigKey();
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     * @return The multisigKey.
     */
    axelar.tss.exported.v1beta1.Types.Key.MultisigKey getMultisigKey();
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     */
    axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder getMultisigKeyOrBuilder();

    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the rotatedAt field is set.
     */
    boolean hasRotatedAt();
    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     * @return The rotatedAt.
     */
    com.google.protobuf.Timestamp getRotatedAt();
    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     */
    com.google.protobuf.TimestampOrBuilder getRotatedAtOrBuilder();

    /**
     * <code>int64 rotation_count = 7;</code>
     * @return The rotationCount.
     */
    long getRotationCount();

    /**
     * <code>string chain = 8;</code>
     * @return The chain.
     */
    java.lang.String getChain();
    /**
     * <code>string chain = 8;</code>
     * @return The bytes for chain.
     */
    com.google.protobuf.ByteString
        getChainBytes();

    /**
     * <code>int64 snapshot_counter = 9;</code>
     * @return The snapshotCounter.
     */
    long getSnapshotCounter();

    public axelar.tss.exported.v1beta1.Types.Key.PublicKeyCase getPublicKeyCase();
  }
  /**
   * Protobuf type {@code axelar.tss.exported.v1beta1.Key}
   */
  public static final class Key extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Key)
      KeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Key.newBuilder() to construct.
    private Key(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Key() {
      id_ = "";
      role_ = 0;
      type_ = 0;
      chain_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Key();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Key(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              role_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 34: {
              axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder subBuilder = null;
              if (publicKeyCase_ == 4) {
                subBuilder = ((axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_).toBuilder();
              }
              publicKey_ =
                  input.readMessage(axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_);
                publicKey_ = subBuilder.buildPartial();
              }
              publicKeyCase_ = 4;
              break;
            }
            case 42: {
              axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder subBuilder = null;
              if (publicKeyCase_ == 5) {
                subBuilder = ((axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_).toBuilder();
              }
              publicKey_ =
                  input.readMessage(axelar.tss.exported.v1beta1.Types.Key.MultisigKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_);
                publicKey_ = subBuilder.buildPartial();
              }
              publicKeyCase_ = 5;
              break;
            }
            case 50: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (rotatedAt_ != null) {
                subBuilder = rotatedAt_.toBuilder();
              }
              rotatedAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rotatedAt_);
                rotatedAt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              rotationCount_ = input.readInt64();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              chain_ = s;
              break;
            }
            case 72: {

              snapshotCounter_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.tss.exported.v1beta1.Types.Key.class, axelar.tss.exported.v1beta1.Types.Key.Builder.class);
    }

    public interface ECDSAKeyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Key.ECDSAKey)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bytes value = 1;</code>
       * @return The value.
       */
      com.google.protobuf.ByteString getValue();
    }
    /**
     * Protobuf type {@code axelar.tss.exported.v1beta1.Key.ECDSAKey}
     */
    public static final class ECDSAKey extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Key.ECDSAKey)
        ECDSAKeyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ECDSAKey.newBuilder() to construct.
      private ECDSAKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ECDSAKey() {
        value_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ECDSAKey();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ECDSAKey(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                value_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.class, axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder.class);
      }

      public static final int VALUE_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString value_;
      /**
       * <code>bytes value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!value_.isEmpty()) {
          output.writeBytes(1, value_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!value_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, value_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Key.ECDSAKey)) {
          return super.equals(obj);
        }
        axelar.tss.exported.v1beta1.Types.Key.ECDSAKey other = (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) obj;

        if (!getValue()
            .equals(other.getValue())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Key.ECDSAKey prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.tss.exported.v1beta1.Key.ECDSAKey}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Key.ECDSAKey)
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.class, axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder.class);
        }

        // Construct using axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          value_ = com.google.protobuf.ByteString.EMPTY;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getDefaultInstanceForType() {
          return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey build() {
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey buildPartial() {
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey result = new axelar.tss.exported.v1beta1.Types.Key.ECDSAKey(this);
          result.value_ = value_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) {
            return mergeFrom((axelar.tss.exported.v1beta1.Types.Key.ECDSAKey)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Key.ECDSAKey other) {
          if (other == axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance()) return this;
          if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>bytes value = 1;</code>
         * @return The value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValue() {
          return value_;
        }
        /**
         * <code>bytes value = 1;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bytes value = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Key.ECDSAKey)
      }

      // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Key.ECDSAKey)
      private static final axelar.tss.exported.v1beta1.Types.Key.ECDSAKey DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Key.ECDSAKey();
      }

      public static axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ECDSAKey>
          PARSER = new com.google.protobuf.AbstractParser<ECDSAKey>() {
        @java.lang.Override
        public ECDSAKey parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ECDSAKey(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ECDSAKey> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ECDSAKey> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface MultisigKeyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.tss.exported.v1beta1.Key.MultisigKey)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated bytes values = 1;</code>
       * @return A list containing the values.
       */
      java.util.List<com.google.protobuf.ByteString> getValuesList();
      /**
       * <code>repeated bytes values = 1;</code>
       * @return The count of values.
       */
      int getValuesCount();
      /**
       * <code>repeated bytes values = 1;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      com.google.protobuf.ByteString getValues(int index);

      /**
       * <code>int64 threshold = 2;</code>
       * @return The threshold.
       */
      long getThreshold();
    }
    /**
     * Protobuf type {@code axelar.tss.exported.v1beta1.Key.MultisigKey}
     */
    public static final class MultisigKey extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.tss.exported.v1beta1.Key.MultisigKey)
        MultisigKeyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MultisigKey.newBuilder() to construct.
      private MultisigKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MultisigKey() {
        values_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MultisigKey();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private MultisigKey(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  values_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00000001;
                }
                values_.add(input.readBytes());
                break;
              }
              case 16: {

                threshold_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            values_ = java.util.Collections.unmodifiableList(values_); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Key.MultisigKey.class, axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder.class);
      }

      public static final int VALUES_FIELD_NUMBER = 1;
      private java.util.List<com.google.protobuf.ByteString> values_;
      /**
       * <code>repeated bytes values = 1;</code>
       * @return A list containing the values.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getValuesList() {
        return values_;
      }
      /**
       * <code>repeated bytes values = 1;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated bytes values = 1;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public com.google.protobuf.ByteString getValues(int index) {
        return values_.get(index);
      }

      public static final int THRESHOLD_FIELD_NUMBER = 2;
      private long threshold_;
      /**
       * <code>int64 threshold = 2;</code>
       * @return The threshold.
       */
      @java.lang.Override
      public long getThreshold() {
        return threshold_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < values_.size(); i++) {
          output.writeBytes(1, values_.get(i));
        }
        if (threshold_ != 0L) {
          output.writeInt64(2, threshold_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(values_.get(i));
          }
          size += dataSize;
          size += 1 * getValuesList().size();
        }
        if (threshold_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, threshold_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Key.MultisigKey)) {
          return super.equals(obj);
        }
        axelar.tss.exported.v1beta1.Types.Key.MultisigKey other = (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) obj;

        if (!getValuesList()
            .equals(other.getValuesList())) return false;
        if (getThreshold()
            != other.getThreshold()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getThreshold());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Key.MultisigKey prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.tss.exported.v1beta1.Key.MultisigKey}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Key.MultisigKey)
          axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.tss.exported.v1beta1.Types.Key.MultisigKey.class, axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder.class);
        }

        // Construct using axelar.tss.exported.v1beta1.Types.Key.MultisigKey.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          threshold_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.MultisigKey getDefaultInstanceForType() {
          return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.MultisigKey build() {
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.tss.exported.v1beta1.Types.Key.MultisigKey buildPartial() {
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey result = new axelar.tss.exported.v1beta1.Types.Key.MultisigKey(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
          result.threshold_ = threshold_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.tss.exported.v1beta1.Types.Key.MultisigKey) {
            return mergeFrom((axelar.tss.exported.v1beta1.Types.Key.MultisigKey)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Key.MultisigKey other) {
          if (other == axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance()) return this;
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
          if (other.getThreshold() != 0L) {
            setThreshold(other.getThreshold());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<com.google.protobuf.ByteString> values_ = java.util.Collections.emptyList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            values_ = new java.util.ArrayList<com.google.protobuf.ByteString>(values_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @return A list containing the values.
         */
        public java.util.List<com.google.protobuf.ByteString>
            getValuesList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(values_) : values_;
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @return The count of values.
         */
        public int getValuesCount() {
          return values_.size();
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @param index The index of the element to return.
         * @return The values at the given index.
         */
        public com.google.protobuf.ByteString getValues(int index) {
          return values_.get(index);
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @param index The index to set the value at.
         * @param value The values to set.
         * @return This builder for chaining.
         */
        public Builder setValues(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @param value The values to add.
         * @return This builder for chaining.
         */
        public Builder addValues(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureValuesIsMutable();
          values_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @param values The values to add.
         * @return This builder for chaining.
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes values = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValues() {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private long threshold_ ;
        /**
         * <code>int64 threshold = 2;</code>
         * @return The threshold.
         */
        @java.lang.Override
        public long getThreshold() {
          return threshold_;
        }
        /**
         * <code>int64 threshold = 2;</code>
         * @param value The threshold to set.
         * @return This builder for chaining.
         */
        public Builder setThreshold(long value) {
          
          threshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 threshold = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearThreshold() {
          
          threshold_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Key.MultisigKey)
      }

      // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Key.MultisigKey)
      private static final axelar.tss.exported.v1beta1.Types.Key.MultisigKey DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Key.MultisigKey();
      }

      public static axelar.tss.exported.v1beta1.Types.Key.MultisigKey getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MultisigKey>
          PARSER = new com.google.protobuf.AbstractParser<MultisigKey>() {
        @java.lang.Override
        public MultisigKey parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultisigKey(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<MultisigKey> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MultisigKey> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.MultisigKey getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int publicKeyCase_ = 0;
    private java.lang.Object publicKey_;
    public enum PublicKeyCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ECDSA_KEY(4),
      MULTISIG_KEY(5),
      PUBLICKEY_NOT_SET(0);
      private final int value;
      private PublicKeyCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PublicKeyCase valueOf(int value) {
        return forNumber(value);
      }

      public static PublicKeyCase forNumber(int value) {
        switch (value) {
          case 4: return ECDSA_KEY;
          case 5: return MULTISIG_KEY;
          case 0: return PUBLICKEY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PublicKeyCase
    getPublicKeyCase() {
      return PublicKeyCase.forNumber(
          publicKeyCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROLE_FIELD_NUMBER = 2;
    private int role_;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
     * @return The enum numeric value on the wire for role.
     */
    @java.lang.Override public int getRoleValue() {
      return role_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
     * @return The role.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.KeyRole getRole() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.KeyRole result = axelar.tss.exported.v1beta1.Types.KeyRole.valueOf(role_);
      return result == null ? axelar.tss.exported.v1beta1.Types.KeyRole.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
     * @return The type.
     */
    @java.lang.Override public axelar.tss.exported.v1beta1.Types.KeyType getType() {
      @SuppressWarnings("deprecation")
      axelar.tss.exported.v1beta1.Types.KeyType result = axelar.tss.exported.v1beta1.Types.KeyType.valueOf(type_);
      return result == null ? axelar.tss.exported.v1beta1.Types.KeyType.UNRECOGNIZED : result;
    }

    public static final int ECDSA_KEY_FIELD_NUMBER = 4;
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     * @return Whether the ecdsaKey field is set.
     */
    @java.lang.Override
    public boolean hasEcdsaKey() {
      return publicKeyCase_ == 4;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     * @return The ecdsaKey.
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getEcdsaKey() {
      if (publicKeyCase_ == 4) {
         return (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_;
      }
      return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder getEcdsaKeyOrBuilder() {
      if (publicKeyCase_ == 4) {
         return (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_;
      }
      return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
    }

    public static final int MULTISIG_KEY_FIELD_NUMBER = 5;
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     * @return Whether the multisigKey field is set.
     */
    @java.lang.Override
    public boolean hasMultisigKey() {
      return publicKeyCase_ == 5;
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     * @return The multisigKey.
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Key.MultisigKey getMultisigKey() {
      if (publicKeyCase_ == 5) {
         return (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_;
      }
      return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
    }
    /**
     * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
     */
    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder getMultisigKeyOrBuilder() {
      if (publicKeyCase_ == 5) {
         return (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_;
      }
      return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
    }

    public static final int ROTATED_AT_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp rotatedAt_;
    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     * @return Whether the rotatedAt field is set.
     */
    @java.lang.Override
    public boolean hasRotatedAt() {
      return rotatedAt_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     * @return The rotatedAt.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getRotatedAt() {
      return rotatedAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : rotatedAt_;
    }
    /**
     * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getRotatedAtOrBuilder() {
      return getRotatedAt();
    }

    public static final int ROTATION_COUNT_FIELD_NUMBER = 7;
    private long rotationCount_;
    /**
     * <code>int64 rotation_count = 7;</code>
     * @return The rotationCount.
     */
    @java.lang.Override
    public long getRotationCount() {
      return rotationCount_;
    }

    public static final int CHAIN_FIELD_NUMBER = 8;
    private volatile java.lang.Object chain_;
    /**
     * <code>string chain = 8;</code>
     * @return The chain.
     */
    @java.lang.Override
    public java.lang.String getChain() {
      java.lang.Object ref = chain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        chain_ = s;
        return s;
      }
    }
    /**
     * <code>string chain = 8;</code>
     * @return The bytes for chain.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChainBytes() {
      java.lang.Object ref = chain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SNAPSHOT_COUNTER_FIELD_NUMBER = 9;
    private long snapshotCounter_;
    /**
     * <code>int64 snapshot_counter = 9;</code>
     * @return The snapshotCounter.
     */
    @java.lang.Override
    public long getSnapshotCounter() {
      return snapshotCounter_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (role_ != axelar.tss.exported.v1beta1.Types.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, role_);
      }
      if (type_ != axelar.tss.exported.v1beta1.Types.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, type_);
      }
      if (publicKeyCase_ == 4) {
        output.writeMessage(4, (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_);
      }
      if (publicKeyCase_ == 5) {
        output.writeMessage(5, (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_);
      }
      if (rotatedAt_ != null) {
        output.writeMessage(6, getRotatedAt());
      }
      if (rotationCount_ != 0L) {
        output.writeInt64(7, rotationCount_);
      }
      if (!getChainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, chain_);
      }
      if (snapshotCounter_ != 0L) {
        output.writeInt64(9, snapshotCounter_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (role_ != axelar.tss.exported.v1beta1.Types.KeyRole.KEY_ROLE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, role_);
      }
      if (type_ != axelar.tss.exported.v1beta1.Types.KeyType.KEY_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (publicKeyCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_);
      }
      if (publicKeyCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_);
      }
      if (rotatedAt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRotatedAt());
      }
      if (rotationCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, rotationCount_);
      }
      if (!getChainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, chain_);
      }
      if (snapshotCounter_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, snapshotCounter_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.tss.exported.v1beta1.Types.Key)) {
        return super.equals(obj);
      }
      axelar.tss.exported.v1beta1.Types.Key other = (axelar.tss.exported.v1beta1.Types.Key) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (role_ != other.role_) return false;
      if (type_ != other.type_) return false;
      if (hasRotatedAt() != other.hasRotatedAt()) return false;
      if (hasRotatedAt()) {
        if (!getRotatedAt()
            .equals(other.getRotatedAt())) return false;
      }
      if (getRotationCount()
          != other.getRotationCount()) return false;
      if (!getChain()
          .equals(other.getChain())) return false;
      if (getSnapshotCounter()
          != other.getSnapshotCounter()) return false;
      if (!getPublicKeyCase().equals(other.getPublicKeyCase())) return false;
      switch (publicKeyCase_) {
        case 4:
          if (!getEcdsaKey()
              .equals(other.getEcdsaKey())) return false;
          break;
        case 5:
          if (!getMultisigKey()
              .equals(other.getMultisigKey())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + role_;
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasRotatedAt()) {
        hash = (37 * hash) + ROTATED_AT_FIELD_NUMBER;
        hash = (53 * hash) + getRotatedAt().hashCode();
      }
      hash = (37 * hash) + ROTATION_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRotationCount());
      hash = (37 * hash) + CHAIN_FIELD_NUMBER;
      hash = (53 * hash) + getChain().hashCode();
      hash = (37 * hash) + SNAPSHOT_COUNTER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSnapshotCounter());
      switch (publicKeyCase_) {
        case 4:
          hash = (37 * hash) + ECDSA_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getEcdsaKey().hashCode();
          break;
        case 5:
          hash = (37 * hash) + MULTISIG_KEY_FIELD_NUMBER;
          hash = (53 * hash) + getMultisigKey().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.tss.exported.v1beta1.Types.Key parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.tss.exported.v1beta1.Types.Key prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axelar.tss.exported.v1beta1.Key}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.tss.exported.v1beta1.Key)
        axelar.tss.exported.v1beta1.Types.KeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.tss.exported.v1beta1.Types.Key.class, axelar.tss.exported.v1beta1.Types.Key.Builder.class);
      }

      // Construct using axelar.tss.exported.v1beta1.Types.Key.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        role_ = 0;

        type_ = 0;

        if (rotatedAtBuilder_ == null) {
          rotatedAt_ = null;
        } else {
          rotatedAt_ = null;
          rotatedAtBuilder_ = null;
        }
        rotationCount_ = 0L;

        chain_ = "";

        snapshotCounter_ = 0L;

        publicKeyCase_ = 0;
        publicKey_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.tss.exported.v1beta1.Types.internal_static_axelar_tss_exported_v1beta1_Key_descriptor;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key getDefaultInstanceForType() {
        return axelar.tss.exported.v1beta1.Types.Key.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key build() {
        axelar.tss.exported.v1beta1.Types.Key result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key buildPartial() {
        axelar.tss.exported.v1beta1.Types.Key result = new axelar.tss.exported.v1beta1.Types.Key(this);
        result.id_ = id_;
        result.role_ = role_;
        result.type_ = type_;
        if (publicKeyCase_ == 4) {
          if (ecdsaKeyBuilder_ == null) {
            result.publicKey_ = publicKey_;
          } else {
            result.publicKey_ = ecdsaKeyBuilder_.build();
          }
        }
        if (publicKeyCase_ == 5) {
          if (multisigKeyBuilder_ == null) {
            result.publicKey_ = publicKey_;
          } else {
            result.publicKey_ = multisigKeyBuilder_.build();
          }
        }
        if (rotatedAtBuilder_ == null) {
          result.rotatedAt_ = rotatedAt_;
        } else {
          result.rotatedAt_ = rotatedAtBuilder_.build();
        }
        result.rotationCount_ = rotationCount_;
        result.chain_ = chain_;
        result.snapshotCounter_ = snapshotCounter_;
        result.publicKeyCase_ = publicKeyCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.tss.exported.v1beta1.Types.Key) {
          return mergeFrom((axelar.tss.exported.v1beta1.Types.Key)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.tss.exported.v1beta1.Types.Key other) {
        if (other == axelar.tss.exported.v1beta1.Types.Key.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasRotatedAt()) {
          mergeRotatedAt(other.getRotatedAt());
        }
        if (other.getRotationCount() != 0L) {
          setRotationCount(other.getRotationCount());
        }
        if (!other.getChain().isEmpty()) {
          chain_ = other.chain_;
          onChanged();
        }
        if (other.getSnapshotCounter() != 0L) {
          setSnapshotCounter(other.getSnapshotCounter());
        }
        switch (other.getPublicKeyCase()) {
          case ECDSA_KEY: {
            mergeEcdsaKey(other.getEcdsaKey());
            break;
          }
          case MULTISIG_KEY: {
            mergeMultisigKey(other.getMultisigKey());
            break;
          }
          case PUBLICKEY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.tss.exported.v1beta1.Types.Key parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.tss.exported.v1beta1.Types.Key) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int publicKeyCase_ = 0;
      private java.lang.Object publicKey_;
      public PublicKeyCase
          getPublicKeyCase() {
        return PublicKeyCase.forNumber(
            publicKeyCase_);
      }

      public Builder clearPublicKey() {
        publicKeyCase_ = 0;
        publicKey_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "KeyID"];</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int role_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
       * @return The enum numeric value on the wire for role.
       */
      @java.lang.Override public int getRoleValue() {
        return role_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
       * @param value The enum numeric value on the wire for role to set.
       * @return This builder for chaining.
       */
      public Builder setRoleValue(int value) {
        
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
       * @return The role.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyRole getRole() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.KeyRole result = axelar.tss.exported.v1beta1.Types.KeyRole.valueOf(role_);
        return result == null ? axelar.tss.exported.v1beta1.Types.KeyRole.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
       * @param value The role to set.
       * @return This builder for chaining.
       */
      public Builder setRole(axelar.tss.exported.v1beta1.Types.KeyRole value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyRole role = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRole() {
        
        role_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
       * @return The type.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.KeyType getType() {
        @SuppressWarnings("deprecation")
        axelar.tss.exported.v1beta1.Types.KeyType result = axelar.tss.exported.v1beta1.Types.KeyType.valueOf(type_);
        return result == null ? axelar.tss.exported.v1beta1.Types.KeyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(axelar.tss.exported.v1beta1.Types.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.KeyType type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey, axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder, axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder> ecdsaKeyBuilder_;
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       * @return Whether the ecdsaKey field is set.
       */
      @java.lang.Override
      public boolean hasEcdsaKey() {
        return publicKeyCase_ == 4;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       * @return The ecdsaKey.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey getEcdsaKey() {
        if (ecdsaKeyBuilder_ == null) {
          if (publicKeyCase_ == 4) {
            return (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_;
          }
          return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
        } else {
          if (publicKeyCase_ == 4) {
            return ecdsaKeyBuilder_.getMessage();
          }
          return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      public Builder setEcdsaKey(axelar.tss.exported.v1beta1.Types.Key.ECDSAKey value) {
        if (ecdsaKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicKey_ = value;
          onChanged();
        } else {
          ecdsaKeyBuilder_.setMessage(value);
        }
        publicKeyCase_ = 4;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      public Builder setEcdsaKey(
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder builderForValue) {
        if (ecdsaKeyBuilder_ == null) {
          publicKey_ = builderForValue.build();
          onChanged();
        } else {
          ecdsaKeyBuilder_.setMessage(builderForValue.build());
        }
        publicKeyCase_ = 4;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      public Builder mergeEcdsaKey(axelar.tss.exported.v1beta1.Types.Key.ECDSAKey value) {
        if (ecdsaKeyBuilder_ == null) {
          if (publicKeyCase_ == 4 &&
              publicKey_ != axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance()) {
            publicKey_ = axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.newBuilder((axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_)
                .mergeFrom(value).buildPartial();
          } else {
            publicKey_ = value;
          }
          onChanged();
        } else {
          if (publicKeyCase_ == 4) {
            ecdsaKeyBuilder_.mergeFrom(value);
          }
          ecdsaKeyBuilder_.setMessage(value);
        }
        publicKeyCase_ = 4;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      public Builder clearEcdsaKey() {
        if (ecdsaKeyBuilder_ == null) {
          if (publicKeyCase_ == 4) {
            publicKeyCase_ = 0;
            publicKey_ = null;
            onChanged();
          }
        } else {
          if (publicKeyCase_ == 4) {
            publicKeyCase_ = 0;
            publicKey_ = null;
          }
          ecdsaKeyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      public axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder getEcdsaKeyBuilder() {
        return getEcdsaKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder getEcdsaKeyOrBuilder() {
        if ((publicKeyCase_ == 4) && (ecdsaKeyBuilder_ != null)) {
          return ecdsaKeyBuilder_.getMessageOrBuilder();
        } else {
          if (publicKeyCase_ == 4) {
            return (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_;
          }
          return axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.ECDSAKey ecdsa_key = 4 [(.gogoproto.customname) = "ECDSAKey"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Key.ECDSAKey, axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder, axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder> 
          getEcdsaKeyFieldBuilder() {
        if (ecdsaKeyBuilder_ == null) {
          if (!(publicKeyCase_ == 4)) {
            publicKey_ = axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.getDefaultInstance();
          }
          ecdsaKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.tss.exported.v1beta1.Types.Key.ECDSAKey, axelar.tss.exported.v1beta1.Types.Key.ECDSAKey.Builder, axelar.tss.exported.v1beta1.Types.Key.ECDSAKeyOrBuilder>(
                  (axelar.tss.exported.v1beta1.Types.Key.ECDSAKey) publicKey_,
                  getParentForChildren(),
                  isClean());
          publicKey_ = null;
        }
        publicKeyCase_ = 4;
        onChanged();;
        return ecdsaKeyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey, axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder, axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder> multisigKeyBuilder_;
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       * @return Whether the multisigKey field is set.
       */
      @java.lang.Override
      public boolean hasMultisigKey() {
        return publicKeyCase_ == 5;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       * @return The multisigKey.
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.MultisigKey getMultisigKey() {
        if (multisigKeyBuilder_ == null) {
          if (publicKeyCase_ == 5) {
            return (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_;
          }
          return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
        } else {
          if (publicKeyCase_ == 5) {
            return multisigKeyBuilder_.getMessage();
          }
          return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      public Builder setMultisigKey(axelar.tss.exported.v1beta1.Types.Key.MultisigKey value) {
        if (multisigKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicKey_ = value;
          onChanged();
        } else {
          multisigKeyBuilder_.setMessage(value);
        }
        publicKeyCase_ = 5;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      public Builder setMultisigKey(
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder builderForValue) {
        if (multisigKeyBuilder_ == null) {
          publicKey_ = builderForValue.build();
          onChanged();
        } else {
          multisigKeyBuilder_.setMessage(builderForValue.build());
        }
        publicKeyCase_ = 5;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      public Builder mergeMultisigKey(axelar.tss.exported.v1beta1.Types.Key.MultisigKey value) {
        if (multisigKeyBuilder_ == null) {
          if (publicKeyCase_ == 5 &&
              publicKey_ != axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance()) {
            publicKey_ = axelar.tss.exported.v1beta1.Types.Key.MultisigKey.newBuilder((axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_)
                .mergeFrom(value).buildPartial();
          } else {
            publicKey_ = value;
          }
          onChanged();
        } else {
          if (publicKeyCase_ == 5) {
            multisigKeyBuilder_.mergeFrom(value);
          }
          multisigKeyBuilder_.setMessage(value);
        }
        publicKeyCase_ = 5;
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      public Builder clearMultisigKey() {
        if (multisigKeyBuilder_ == null) {
          if (publicKeyCase_ == 5) {
            publicKeyCase_ = 0;
            publicKey_ = null;
            onChanged();
          }
        } else {
          if (publicKeyCase_ == 5) {
            publicKeyCase_ = 0;
            publicKey_ = null;
          }
          multisigKeyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      public axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder getMultisigKeyBuilder() {
        return getMultisigKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      @java.lang.Override
      public axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder getMultisigKeyOrBuilder() {
        if ((publicKeyCase_ == 5) && (multisigKeyBuilder_ != null)) {
          return multisigKeyBuilder_.getMessageOrBuilder();
        } else {
          if (publicKeyCase_ == 5) {
            return (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_;
          }
          return axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
        }
      }
      /**
       * <code>.axelar.tss.exported.v1beta1.Key.MultisigKey multisig_key = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.tss.exported.v1beta1.Types.Key.MultisigKey, axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder, axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder> 
          getMultisigKeyFieldBuilder() {
        if (multisigKeyBuilder_ == null) {
          if (!(publicKeyCase_ == 5)) {
            publicKey_ = axelar.tss.exported.v1beta1.Types.Key.MultisigKey.getDefaultInstance();
          }
          multisigKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.tss.exported.v1beta1.Types.Key.MultisigKey, axelar.tss.exported.v1beta1.Types.Key.MultisigKey.Builder, axelar.tss.exported.v1beta1.Types.Key.MultisigKeyOrBuilder>(
                  (axelar.tss.exported.v1beta1.Types.Key.MultisigKey) publicKey_,
                  getParentForChildren(),
                  isClean());
          publicKey_ = null;
        }
        publicKeyCase_ = 5;
        onChanged();;
        return multisigKeyBuilder_;
      }

      private com.google.protobuf.Timestamp rotatedAt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> rotatedAtBuilder_;
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       * @return Whether the rotatedAt field is set.
       */
      public boolean hasRotatedAt() {
        return rotatedAtBuilder_ != null || rotatedAt_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       * @return The rotatedAt.
       */
      public com.google.protobuf.Timestamp getRotatedAt() {
        if (rotatedAtBuilder_ == null) {
          return rotatedAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : rotatedAt_;
        } else {
          return rotatedAtBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setRotatedAt(com.google.protobuf.Timestamp value) {
        if (rotatedAtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rotatedAt_ = value;
          onChanged();
        } else {
          rotatedAtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder setRotatedAt(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (rotatedAtBuilder_ == null) {
          rotatedAt_ = builderForValue.build();
          onChanged();
        } else {
          rotatedAtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder mergeRotatedAt(com.google.protobuf.Timestamp value) {
        if (rotatedAtBuilder_ == null) {
          if (rotatedAt_ != null) {
            rotatedAt_ =
              com.google.protobuf.Timestamp.newBuilder(rotatedAt_).mergeFrom(value).buildPartial();
          } else {
            rotatedAt_ = value;
          }
          onChanged();
        } else {
          rotatedAtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public Builder clearRotatedAt() {
        if (rotatedAtBuilder_ == null) {
          rotatedAt_ = null;
          onChanged();
        } else {
          rotatedAt_ = null;
          rotatedAtBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.Timestamp.Builder getRotatedAtBuilder() {
        
        onChanged();
        return getRotatedAtFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getRotatedAtOrBuilder() {
        if (rotatedAtBuilder_ != null) {
          return rotatedAtBuilder_.getMessageOrBuilder();
        } else {
          return rotatedAt_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : rotatedAt_;
        }
      }
      /**
       * <code>.google.protobuf.Timestamp rotated_at = 6 [(.gogoproto.stdtime) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getRotatedAtFieldBuilder() {
        if (rotatedAtBuilder_ == null) {
          rotatedAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getRotatedAt(),
                  getParentForChildren(),
                  isClean());
          rotatedAt_ = null;
        }
        return rotatedAtBuilder_;
      }

      private long rotationCount_ ;
      /**
       * <code>int64 rotation_count = 7;</code>
       * @return The rotationCount.
       */
      @java.lang.Override
      public long getRotationCount() {
        return rotationCount_;
      }
      /**
       * <code>int64 rotation_count = 7;</code>
       * @param value The rotationCount to set.
       * @return This builder for chaining.
       */
      public Builder setRotationCount(long value) {
        
        rotationCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 rotation_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationCount() {
        
        rotationCount_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object chain_ = "";
      /**
       * <code>string chain = 8;</code>
       * @return The chain.
       */
      public java.lang.String getChain() {
        java.lang.Object ref = chain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          chain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string chain = 8;</code>
       * @return The bytes for chain.
       */
      public com.google.protobuf.ByteString
          getChainBytes() {
        java.lang.Object ref = chain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string chain = 8;</code>
       * @param value The chain to set.
       * @return This builder for chaining.
       */
      public Builder setChain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        chain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string chain = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearChain() {
        
        chain_ = getDefaultInstance().getChain();
        onChanged();
        return this;
      }
      /**
       * <code>string chain = 8;</code>
       * @param value The bytes for chain to set.
       * @return This builder for chaining.
       */
      public Builder setChainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        chain_ = value;
        onChanged();
        return this;
      }

      private long snapshotCounter_ ;
      /**
       * <code>int64 snapshot_counter = 9;</code>
       * @return The snapshotCounter.
       */
      @java.lang.Override
      public long getSnapshotCounter() {
        return snapshotCounter_;
      }
      /**
       * <code>int64 snapshot_counter = 9;</code>
       * @param value The snapshotCounter to set.
       * @return This builder for chaining.
       */
      public Builder setSnapshotCounter(long value) {
        
        snapshotCounter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 snapshot_counter = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnapshotCounter() {
        
        snapshotCounter_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.tss.exported.v1beta1.Key)
    }

    // @@protoc_insertion_point(class_scope:axelar.tss.exported.v1beta1.Key)
    private static final axelar.tss.exported.v1beta1.Types.Key DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.tss.exported.v1beta1.Types.Key();
    }

    public static axelar.tss.exported.v1beta1.Types.Key getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Key>
        PARSER = new com.google.protobuf.AbstractParser<Key>() {
      @java.lang.Override
      public Key parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Key(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Key> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Key> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.tss.exported.v1beta1.Types.Key getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_SignInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Signature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Signature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Key_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Key_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'axelar/tss/exported/v1beta1/types.prot" +
      "o\022\033axelar.tss.exported.v1beta1\032$axelar/u" +
      "tils/v1beta1/threshold.proto\032\024gogoproto/" +
      "gogo.proto\032\037google/protobuf/timestamp.pr" +
      "oto\"\340\004\n\016KeyRequirement\0226\n\010key_role\030\001 \001(\016" +
      "2$.axelar.tss.exported.v1beta1.KeyRole\0226" +
      "\n\010key_type\030\002 \001(\0162$.axelar.tss.exported.v" +
      "1beta1.KeyType\022C\n\024min_keygen_threshold\030\003" +
      " \001(\0132\037.axelar.utils.v1beta1.ThresholdB\004\310" +
      "\336\037\000\022?\n\020safety_threshold\030\004 \001(\0132\037.axelar.u" +
      "tils.v1beta1.ThresholdB\004\310\336\037\000\022^\n\035key_shar" +
      "e_distribution_policy\030\005 \001(\01627.axelar.tss" +
      ".exported.v1beta1.KeyShareDistributionPo" +
      "licy\022\035\n\025max_total_share_count\030\006 \001(\003\022\035\n\025m" +
      "in_total_share_count\030\007 \001(\003\022F\n\027keygen_vot" +
      "ing_threshold\030\010 \001(\0132\037.axelar.utils.v1bet" +
      "a1.ThresholdB\004\310\336\037\000\022D\n\025sign_voting_thresh" +
      "old\030\t \001(\0132\037.axelar.utils.v1beta1.Thresho" +
      "ldB\004\310\336\037\000\022\026\n\016keygen_timeout\030\n \001(\003\022\024\n\014sign" +
      "_timeout\030\013 \001(\003\"\232\001\n\010SignInfo\022\"\n\006key_id\030\001 " +
      "\001(\tB\022\342\336\037\005KeyID\372\336\037\005KeyID\022\031\n\006sig_id\030\002 \001(\tB" +
      "\t\342\336\037\005SigID\022\013\n\003msg\030\003 \001(\014\022\030\n\020snapshot_coun" +
      "ter\030\004 \001(\003\022\026\n\016request_module\030\005 \001(\t\022\020\n\010met" +
      "adata\030\006 \001(\t\"0\n\nSigKeyPair\022\017\n\007pub_key\030\001 \001" +
      "(\014\022\021\n\tsignature\030\002 \001(\014\"\233\003\n\tSignature\022\031\n\006s" +
      "ig_id\030\001 \001(\tB\t\342\336\037\005SigID\022F\n\nsingle_sig\030\002 \001" +
      "(\01320.axelar.tss.exported.v1beta1.Signatu" +
      "re.SingleSigH\000\022D\n\tmulti_sig\030\003 \001(\0132/.axel" +
      "ar.tss.exported.v1beta1.Signature.MultiS" +
      "igH\000\022:\n\nsig_status\030\004 \001(\0162&.axelar.tss.ex" +
      "ported.v1beta1.SigStatus\032P\n\tSingleSig\022C\n" +
      "\014sig_key_pair\030\001 \001(\0132\'.axelar.tss.exporte" +
      "d.v1beta1.SigKeyPairB\004\310\336\037\000\032P\n\010MultiSig\022D" +
      "\n\rsig_key_pairs\030\001 \003(\0132\'.axelar.tss.expor" +
      "ted.v1beta1.SigKeyPairB\004\310\336\037\000B\005\n\003sig\"\360\003\n\003" +
      "Key\022\033\n\002id\030\001 \001(\tB\017\342\336\037\002ID\372\336\037\005KeyID\0222\n\004role" +
      "\030\002 \001(\0162$.axelar.tss.exported.v1beta1.Key" +
      "Role\0222\n\004type\030\003 \001(\0162$.axelar.tss.exported" +
      ".v1beta1.KeyType\022L\n\tecdsa_key\030\004 \001(\0132).ax" +
      "elar.tss.exported.v1beta1.Key.ECDSAKeyB\014" +
      "\342\336\037\010ECDSAKeyH\000\022D\n\014multisig_key\030\005 \001(\0132,.a" +
      "xelar.tss.exported.v1beta1.Key.MultisigK" +
      "eyH\000\0224\n\nrotated_at\030\006 \001(\0132\032.google.protob" +
      "uf.TimestampB\004\220\337\037\001\022\026\n\016rotation_count\030\007 \001" +
      "(\003\022\r\n\005chain\030\010 \001(\t\022\030\n\020snapshot_counter\030\t " +
      "\001(\003\032\031\n\010ECDSAKey\022\r\n\005value\030\001 \001(\014\0320\n\013Multis" +
      "igKey\022\016\n\006values\030\001 \003(\014\022\021\n\tthreshold\030\002 \001(\003" +
      "B\014\n\npublic_key*\274\001\n\007KeyRole\022%\n\024KEY_ROLE_U" +
      "NSPECIFIED\020\000\032\013\212\235 \007Unknown\022&\n\023KEY_ROLE_MA" +
      "STER_KEY\020\001\032\r\212\235 \tMasterKey\022,\n\026KEY_ROLE_SE" +
      "CONDARY_KEY\020\002\032\020\212\235 \014SecondaryKey\022*\n\025KEY_R" +
      "OLE_EXTERNAL_KEY\020\003\032\017\212\235 \013ExternalKey\032\010\210\243\036" +
      "\000\250\244\036\001*\372\001\n\032KeyShareDistributionPolicy\022>\n)" +
      "KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIE" +
      "D\020\000\032\017\212\235 \013Unspecified\022H\n/KEY_SHARE_DISTRI" +
      "BUTION_POLICY_WEIGHTED_BY_STAKE\020\001\032\023\212\235 \017W" +
      "eightedByStake\022H\n/KEY_SHARE_DISTRIBUTION" +
      "_POLICY_ONE_PER_VALIDATOR\020\002\032\023\212\235 \017OnePerV" +
      "alidator\032\010\210\243\036\000\250\244\036\001*|\n\007AckType\022)\n\024ACK_TYP" +
      "E_UNSPECIFIED\020\000\032\017\212\235 \013Unspecified\022\037\n\017ACK_" +
      "TYPE_KEYGEN\020\001\032\n\212\235 \006Keygen\022\033\n\rACK_TYPE_SI" +
      "GN\020\002\032\010\212\235 \004Sign\032\010\210\243\036\001\250\244\036\001*\367\001\n\tSigStatus\022+" +
      "\n\026SIG_STATUS_UNSPECIFIED\020\000\032\017\212\235 \013Unspecif" +
      "ied\022!\n\021SIG_STATUS_QUEUED\020\001\032\n\212\235 \006Queued\022#" +
      "\n\022SIG_STATUS_SIGNING\020\002\032\013\212\235 \007Signing\022!\n\021S" +
      "IG_STATUS_SIGNED\020\003\032\n\212\235 \006Signed\022#\n\022SIG_ST" +
      "ATUS_ABORTED\020\004\032\013\212\235 \007Aborted\022#\n\022SIG_STATU" +
      "S_INVALID\020\005\032\013\212\235 \007Invalid\032\010\210\243\036\001\250\244\036\001*\226\001\n\007K" +
      "eyType\022\030\n\024KEY_TYPE_UNSPECIFIED\020\000\022\033\n\rKEY_" +
      "TYPE_NONE\020\001\032\010\212\235 \004None\022%\n\022KEY_TYPE_THRESH" +
      "OLD\020\002\032\r\212\235 \tThreshold\022#\n\021KEY_TYPE_MULTISI" +
      "G\020\003\032\014\212\235 \010Multisig\032\010\210\243\036\000\250\244\036\001B5Z3github.co" +
      "m/axelarnetwork/axelar-core/x/tss/export" +
      "edb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          axelar.utils.v1beta1.ThresholdOuterClass.getDescriptor(),
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_tss_exported_v1beta1_KeyRequirement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_KeyRequirement_descriptor,
        new java.lang.String[] { "KeyRole", "KeyType", "MinKeygenThreshold", "SafetyThreshold", "KeyShareDistributionPolicy", "MaxTotalShareCount", "MinTotalShareCount", "KeygenVotingThreshold", "SignVotingThreshold", "KeygenTimeout", "SignTimeout", });
    internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_tss_exported_v1beta1_SignInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_SignInfo_descriptor,
        new java.lang.String[] { "KeyId", "SigId", "Msg", "SnapshotCounter", "RequestModule", "Metadata", });
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axelar_tss_exported_v1beta1_SigKeyPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_SigKeyPair_descriptor,
        new java.lang.String[] { "PubKey", "Signature", });
    internal_static_axelar_tss_exported_v1beta1_Signature_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axelar_tss_exported_v1beta1_Signature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Signature_descriptor,
        new java.lang.String[] { "SigId", "SingleSig", "MultiSig", "SigStatus", "Sig", });
    internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor =
      internal_static_axelar_tss_exported_v1beta1_Signature_descriptor.getNestedTypes().get(0);
    internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Signature_SingleSig_descriptor,
        new java.lang.String[] { "SigKeyPair", });
    internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor =
      internal_static_axelar_tss_exported_v1beta1_Signature_descriptor.getNestedTypes().get(1);
    internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Signature_MultiSig_descriptor,
        new java.lang.String[] { "SigKeyPairs", });
    internal_static_axelar_tss_exported_v1beta1_Key_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_axelar_tss_exported_v1beta1_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Key_descriptor,
        new java.lang.String[] { "Id", "Role", "Type", "EcdsaKey", "MultisigKey", "RotatedAt", "RotationCount", "Chain", "SnapshotCounter", "PublicKey", });
    internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor =
      internal_static_axelar_tss_exported_v1beta1_Key_descriptor.getNestedTypes().get(0);
    internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Key_ECDSAKey_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor =
      internal_static_axelar_tss_exported_v1beta1_Key_descriptor.getNestedTypes().get(1);
    internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_tss_exported_v1beta1_Key_MultisigKey_descriptor,
        new java.lang.String[] { "Values", "Threshold", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.casttype);
    registry.add(com.google.protobuf2.GoGoProtos.customname);
    registry.add(com.google.protobuf2.GoGoProtos.enumvalueCustomname);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumPrefix);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumStringer);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    axelar.utils.v1beta1.ThresholdOuterClass.getDescriptor();
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
