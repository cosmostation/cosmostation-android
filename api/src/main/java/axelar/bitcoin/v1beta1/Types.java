// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: axelar/bitcoin/v1beta1/types.proto

package axelar.bitcoin.v1beta1;

public final class Types {
  private Types() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code axelar.bitcoin.v1beta1.TxStatus}
   */
  public enum TxStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TX_STATUS_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "TxStatusUnspecified"];</code>
     */
    TX_STATUS_UNSPECIFIED(0),
    /**
     * <code>TX_STATUS_CREATED = 1 [(.gogoproto.enumvalue_customname) = "Created"];</code>
     */
    TX_STATUS_CREATED(1),
    /**
     * <code>TX_STATUS_SIGNING = 2 [(.gogoproto.enumvalue_customname) = "Signing"];</code>
     */
    TX_STATUS_SIGNING(2),
    /**
     * <code>TX_STATUS_ABORTED = 3 [(.gogoproto.enumvalue_customname) = "Aborted"];</code>
     */
    TX_STATUS_ABORTED(3),
    /**
     * <code>TX_STATUS_SIGNED = 4 [(.gogoproto.enumvalue_customname) = "Signed"];</code>
     */
    TX_STATUS_SIGNED(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TX_STATUS_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "TxStatusUnspecified"];</code>
     */
    public static final int TX_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TX_STATUS_CREATED = 1 [(.gogoproto.enumvalue_customname) = "Created"];</code>
     */
    public static final int TX_STATUS_CREATED_VALUE = 1;
    /**
     * <code>TX_STATUS_SIGNING = 2 [(.gogoproto.enumvalue_customname) = "Signing"];</code>
     */
    public static final int TX_STATUS_SIGNING_VALUE = 2;
    /**
     * <code>TX_STATUS_ABORTED = 3 [(.gogoproto.enumvalue_customname) = "Aborted"];</code>
     */
    public static final int TX_STATUS_ABORTED_VALUE = 3;
    /**
     * <code>TX_STATUS_SIGNED = 4 [(.gogoproto.enumvalue_customname) = "Signed"];</code>
     */
    public static final int TX_STATUS_SIGNED_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TxStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TxStatus forNumber(int value) {
      switch (value) {
        case 0: return TX_STATUS_UNSPECIFIED;
        case 1: return TX_STATUS_CREATED;
        case 2: return TX_STATUS_SIGNING;
        case 3: return TX_STATUS_ABORTED;
        case 4: return TX_STATUS_SIGNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TxStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TxStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TxStatus>() {
            public TxStatus findValueByNumber(int number) {
              return TxStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.getDescriptor().getEnumTypes().get(0);
    }

    private static final TxStatus[] VALUES = values();

    public static TxStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TxStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.bitcoin.v1beta1.TxStatus)
  }

  /**
   * Protobuf enum {@code axelar.bitcoin.v1beta1.TxType}
   */
  public enum TxType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TX_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "TxTypeUnspecified"];</code>
     */
    TX_TYPE_UNSPECIFIED(0),
    /**
     * <code>TX_TYPE_MASTER_CONSOLIDATION = 1 [(.gogoproto.enumvalue_customname) = "MasterConsolidation"];</code>
     */
    TX_TYPE_MASTER_CONSOLIDATION(1),
    /**
     * <code>TX_TYPE_SECONDARY_CONSOLIDATION = 2 [(.gogoproto.enumvalue_customname) = "SecondaryConsolidation"];</code>
     */
    TX_TYPE_SECONDARY_CONSOLIDATION(2),
    /**
     * <code>TX_TYPE_RESCUE = 3 [(.gogoproto.enumvalue_customname) = "Rescue"];</code>
     */
    TX_TYPE_RESCUE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TX_TYPE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "TxTypeUnspecified"];</code>
     */
    public static final int TX_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TX_TYPE_MASTER_CONSOLIDATION = 1 [(.gogoproto.enumvalue_customname) = "MasterConsolidation"];</code>
     */
    public static final int TX_TYPE_MASTER_CONSOLIDATION_VALUE = 1;
    /**
     * <code>TX_TYPE_SECONDARY_CONSOLIDATION = 2 [(.gogoproto.enumvalue_customname) = "SecondaryConsolidation"];</code>
     */
    public static final int TX_TYPE_SECONDARY_CONSOLIDATION_VALUE = 2;
    /**
     * <code>TX_TYPE_RESCUE = 3 [(.gogoproto.enumvalue_customname) = "Rescue"];</code>
     */
    public static final int TX_TYPE_RESCUE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TxType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TxType forNumber(int value) {
      switch (value) {
        case 0: return TX_TYPE_UNSPECIFIED;
        case 1: return TX_TYPE_MASTER_CONSOLIDATION;
        case 2: return TX_TYPE_SECONDARY_CONSOLIDATION;
        case 3: return TX_TYPE_RESCUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TxType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TxType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TxType>() {
            public TxType findValueByNumber(int number) {
              return TxType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.getDescriptor().getEnumTypes().get(1);
    }

    private static final TxType[] VALUES = values();

    public static TxType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TxType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.bitcoin.v1beta1.TxType)
  }

  /**
   * Protobuf enum {@code axelar.bitcoin.v1beta1.OutPointState}
   */
  public enum OutPointState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OUT_POINT_STATE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    OUT_POINT_STATE_UNSPECIFIED(0),
    /**
     * <code>OUT_POINT_STATE_PENDING = 1 [(.gogoproto.enumvalue_customname) = "Pending"];</code>
     */
    OUT_POINT_STATE_PENDING(1),
    /**
     * <code>OUT_POINT_STATE_CONFIRMED = 2 [(.gogoproto.enumvalue_customname) = "Confirmed"];</code>
     */
    OUT_POINT_STATE_CONFIRMED(2),
    /**
     * <code>OUT_POINT_STATE_SPENT = 3 [(.gogoproto.enumvalue_customname) = "Spent"];</code>
     */
    OUT_POINT_STATE_SPENT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OUT_POINT_STATE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    public static final int OUT_POINT_STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>OUT_POINT_STATE_PENDING = 1 [(.gogoproto.enumvalue_customname) = "Pending"];</code>
     */
    public static final int OUT_POINT_STATE_PENDING_VALUE = 1;
    /**
     * <code>OUT_POINT_STATE_CONFIRMED = 2 [(.gogoproto.enumvalue_customname) = "Confirmed"];</code>
     */
    public static final int OUT_POINT_STATE_CONFIRMED_VALUE = 2;
    /**
     * <code>OUT_POINT_STATE_SPENT = 3 [(.gogoproto.enumvalue_customname) = "Spent"];</code>
     */
    public static final int OUT_POINT_STATE_SPENT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OutPointState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OutPointState forNumber(int value) {
      switch (value) {
        case 0: return OUT_POINT_STATE_UNSPECIFIED;
        case 1: return OUT_POINT_STATE_PENDING;
        case 2: return OUT_POINT_STATE_CONFIRMED;
        case 3: return OUT_POINT_STATE_SPENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OutPointState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OutPointState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OutPointState>() {
            public OutPointState findValueByNumber(int number) {
              return OutPointState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.getDescriptor().getEnumTypes().get(2);
    }

    private static final OutPointState[] VALUES = values();

    public static OutPointState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OutPointState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.bitcoin.v1beta1.OutPointState)
  }

  /**
   * Protobuf enum {@code axelar.bitcoin.v1beta1.AddressRole}
   */
  public enum AddressRole
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADDRESS_ROLE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    ADDRESS_ROLE_UNSPECIFIED(0),
    /**
     * <code>ADDRESS_ROLE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "Deposit"];</code>
     */
    ADDRESS_ROLE_DEPOSIT(1),
    /**
     * <code>ADDRESS_ROLE_CONSOLIDATION = 2 [(.gogoproto.enumvalue_customname) = "Consolidation"];</code>
     */
    ADDRESS_ROLE_CONSOLIDATION(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ADDRESS_ROLE_UNSPECIFIED = 0 [(.gogoproto.enumvalue_customname) = "None"];</code>
     */
    public static final int ADDRESS_ROLE_UNSPECIFIED_VALUE = 0;
    /**
     * <code>ADDRESS_ROLE_DEPOSIT = 1 [(.gogoproto.enumvalue_customname) = "Deposit"];</code>
     */
    public static final int ADDRESS_ROLE_DEPOSIT_VALUE = 1;
    /**
     * <code>ADDRESS_ROLE_CONSOLIDATION = 2 [(.gogoproto.enumvalue_customname) = "Consolidation"];</code>
     */
    public static final int ADDRESS_ROLE_CONSOLIDATION_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AddressRole valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AddressRole forNumber(int value) {
      switch (value) {
        case 0: return ADDRESS_ROLE_UNSPECIFIED;
        case 1: return ADDRESS_ROLE_DEPOSIT;
        case 2: return ADDRESS_ROLE_CONSOLIDATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AddressRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AddressRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AddressRole>() {
            public AddressRole findValueByNumber(int number) {
              return AddressRole.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.getDescriptor().getEnumTypes().get(3);
    }

    private static final AddressRole[] VALUES = values();

    public static AddressRole valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AddressRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:axelar.bitcoin.v1beta1.AddressRole)
  }

  public interface UnsignedTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.UnsignedTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The type.
     */
    axelar.bitcoin.v1beta1.Types.TxType getType();

    /**
     * <code>bytes tx = 2;</code>
     * @return The tx.
     */
    com.google.protobuf.ByteString getTx();

    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     * @return The info.
     */
    axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getInfo();
    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     */
    axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder getInfoOrBuilder();

    /**
     * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
     * @return The status.
     */
    axelar.bitcoin.v1beta1.Types.TxStatus getStatus();

    /**
     * <code>bool confirmation_required = 5;</code>
     * @return The confirmationRequired.
     */
    boolean getConfirmationRequired();

    /**
     * <code>uint32 anyone_can_spend_vout = 6;</code>
     * @return The anyoneCanSpendVout.
     */
    int getAnyoneCanSpendVout();

    /**
     * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The prevAbortedKeyId.
     */
    java.lang.String getPrevAbortedKeyId();
    /**
     * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The bytes for prevAbortedKeyId.
     */
    com.google.protobuf.ByteString
        getPrevAbortedKeyIdBytes();

    /**
     * <code>int64 internal_transfer_amount = 8 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
     * @return The internalTransferAmount.
     */
    long getInternalTransferAmount();
  }
  /**
   * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx}
   */
  public static final class UnsignedTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.UnsignedTx)
      UnsignedTxOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnsignedTx.newBuilder() to construct.
    private UnsignedTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnsignedTx() {
      type_ = 0;
      tx_ = com.google.protobuf.ByteString.EMPTY;
      status_ = 0;
      prevAbortedKeyId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnsignedTx();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnsignedTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              tx_ = input.readBytes();
              break;
            }
            case 26: {
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder subBuilder = null;
              if (info_ != null) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              status_ = rawValue;
              break;
            }
            case 40: {

              confirmationRequired_ = input.readBool();
              break;
            }
            case 48: {

              anyoneCanSpendVout_ = input.readUInt32();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              prevAbortedKeyId_ = s;
              break;
            }
            case 64: {

              internalTransferAmount_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.bitcoin.v1beta1.Types.UnsignedTx.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Builder.class);
    }

    public interface InfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.UnsignedTx.Info)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool rotate_key = 1;</code>
       * @return The rotateKey.
       */
      boolean getRotateKey();

      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> 
          getInputInfosList();
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getInputInfos(int index);
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      int getInputInfosCount();
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder> 
          getInputInfosOrBuilderList();
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder getInputInfosOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info}
     */
    public static final class Info extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info)
        InfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Info.newBuilder() to construct.
      private Info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Info() {
        inputInfos_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Info();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Info(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                rotateKey_ = input.readBool();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  inputInfos_ = new java.util.ArrayList<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo>();
                  mutable_bitField0_ |= 0x00000001;
                }
                inputInfos_.add(
                    input.readMessage(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            inputInfos_ = java.util.Collections.unmodifiableList(inputInfos_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder.class);
      }

      public interface InputInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> 
            getSigRequirementsList();
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getSigRequirements(int index);
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        int getSigRequirementsCount();
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder> 
            getSigRequirementsOrBuilderList();
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder getSigRequirementsOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo}
       */
      public static final class InputInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo)
          InputInfoOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use InputInfo.newBuilder() to construct.
        private InputInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private InputInfo() {
          sigRequirements_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new InputInfo();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private InputInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    sigRequirements_ = new java.util.ArrayList<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  sigRequirements_.add(
                      input.readMessage(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.parser(), extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              sigRequirements_ = java.util.Collections.unmodifiableList(sigRequirements_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder.class);
        }

        public interface SigRequirementOrBuilder extends
            // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
           * @return The keyId.
           */
          java.lang.String getKeyId();
          /**
           * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
           * @return The bytes for keyId.
           */
          com.google.protobuf.ByteString
              getKeyIdBytes();

          /**
           * <code>bytes sig_hash = 2;</code>
           * @return The sigHash.
           */
          com.google.protobuf.ByteString getSigHash();
        }
        /**
         * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement}
         */
        public static final class SigRequirement extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement)
            SigRequirementOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use SigRequirement.newBuilder() to construct.
          private SigRequirement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private SigRequirement() {
            keyId_ = "";
            sigHash_ = com.google.protobuf.ByteString.EMPTY;
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new SigRequirement();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private SigRequirement(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    java.lang.String s = input.readStringRequireUtf8();

                    keyId_ = s;
                    break;
                  }
                  case 18: {

                    sigHash_ = input.readBytes();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder.class);
          }

          public static final int KEY_ID_FIELD_NUMBER = 1;
          private volatile java.lang.Object keyId_;
          /**
           * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
           * @return The keyId.
           */
          @java.lang.Override
          public java.lang.String getKeyId() {
            java.lang.Object ref = keyId_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              keyId_ = s;
              return s;
            }
          }
          /**
           * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
           * @return The bytes for keyId.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getKeyIdBytes() {
            java.lang.Object ref = keyId_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              keyId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int SIG_HASH_FIELD_NUMBER = 2;
          private com.google.protobuf.ByteString sigHash_;
          /**
           * <code>bytes sig_hash = 2;</code>
           * @return The sigHash.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getSigHash() {
            return sigHash_;
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!getKeyIdBytes().isEmpty()) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyId_);
            }
            if (!sigHash_.isEmpty()) {
              output.writeBytes(2, sigHash_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getKeyIdBytes().isEmpty()) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyId_);
            }
            if (!sigHash_.isEmpty()) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, sigHash_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement)) {
              return super.equals(obj);
            }
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement other = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement) obj;

            if (!getKeyId()
                .equals(other.getKeyId())) return false;
            if (!getSigHash()
                .equals(other.getSigHash())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + KEY_ID_FIELD_NUMBER;
            hash = (53 * hash) + getKeyId().hashCode();
            hash = (37 * hash) + SIG_HASH_FIELD_NUMBER;
            hash = (53 * hash) + getSigHash().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement)
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder.class);
            }

            // Construct using axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              keyId_ = "";

              sigHash_ = com.google.protobuf.ByteString.EMPTY;

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor;
            }

            @java.lang.Override
            public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getDefaultInstanceForType() {
              return axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.getDefaultInstance();
            }

            @java.lang.Override
            public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement build() {
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement buildPartial() {
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement result = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement(this);
              result.keyId_ = keyId_;
              result.sigHash_ = sigHash_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement) {
                return mergeFrom((axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement other) {
              if (other == axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.getDefaultInstance()) return this;
              if (!other.getKeyId().isEmpty()) {
                keyId_ = other.keyId_;
                onChanged();
              }
              if (other.getSigHash() != com.google.protobuf.ByteString.EMPTY) {
                setSigHash(other.getSigHash());
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object keyId_ = "";
            /**
             * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
             * @return The keyId.
             */
            public java.lang.String getKeyId() {
              java.lang.Object ref = keyId_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                keyId_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
             * @return The bytes for keyId.
             */
            public com.google.protobuf.ByteString
                getKeyIdBytes() {
              java.lang.Object ref = keyId_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                keyId_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
             * @param value The keyId to set.
             * @return This builder for chaining.
             */
            public Builder setKeyId(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              keyId_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
             * @return This builder for chaining.
             */
            public Builder clearKeyId() {
              
              keyId_ = getDefaultInstance().getKeyId();
              onChanged();
              return this;
            }
            /**
             * <code>string key_id = 1 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
             * @param value The bytes for keyId to set.
             * @return This builder for chaining.
             */
            public Builder setKeyIdBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              keyId_ = value;
              onChanged();
              return this;
            }

            private com.google.protobuf.ByteString sigHash_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes sig_hash = 2;</code>
             * @return The sigHash.
             */
            @java.lang.Override
            public com.google.protobuf.ByteString getSigHash() {
              return sigHash_;
            }
            /**
             * <code>bytes sig_hash = 2;</code>
             * @param value The sigHash to set.
             * @return This builder for chaining.
             */
            public Builder setSigHash(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              sigHash_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>bytes sig_hash = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearSigHash() {
              
              sigHash_ = getDefaultInstance().getSigHash();
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement)
          }

          // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement)
          private static final axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement();
          }

          public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<SigRequirement>
              PARSER = new com.google.protobuf.AbstractParser<SigRequirement>() {
            @java.lang.Override
            public SigRequirement parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new SigRequirement(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<SigRequirement> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<SigRequirement> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public static final int SIG_REQUIREMENTS_FIELD_NUMBER = 1;
        private java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> sigRequirements_;
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        @java.lang.Override
        public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> getSigRequirementsList() {
          return sigRequirements_;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        @java.lang.Override
        public java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder> 
            getSigRequirementsOrBuilderList() {
          return sigRequirements_;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        @java.lang.Override
        public int getSigRequirementsCount() {
          return sigRequirements_.size();
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getSigRequirements(int index) {
          return sigRequirements_.get(index);
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
         */
        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder getSigRequirementsOrBuilder(
            int index) {
          return sigRequirements_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < sigRequirements_.size(); i++) {
            output.writeMessage(1, sigRequirements_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          for (int i = 0; i < sigRequirements_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, sigRequirements_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo)) {
            return super.equals(obj);
          }
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo other = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo) obj;

          if (!getSigRequirementsList()
              .equals(other.getSigRequirementsList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getSigRequirementsCount() > 0) {
            hash = (37 * hash) + SIG_REQUIREMENTS_FIELD_NUMBER;
            hash = (53 * hash) + getSigRequirementsList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo)
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder.class);
          }

          // Construct using axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getSigRequirementsFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (sigRequirementsBuilder_ == null) {
              sigRequirements_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              sigRequirementsBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor;
          }

          @java.lang.Override
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getDefaultInstanceForType() {
            return axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.getDefaultInstance();
          }

          @java.lang.Override
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo build() {
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo buildPartial() {
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo result = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo(this);
            int from_bitField0_ = bitField0_;
            if (sigRequirementsBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                sigRequirements_ = java.util.Collections.unmodifiableList(sigRequirements_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.sigRequirements_ = sigRequirements_;
            } else {
              result.sigRequirements_ = sigRequirementsBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo) {
              return mergeFrom((axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo other) {
            if (other == axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.getDefaultInstance()) return this;
            if (sigRequirementsBuilder_ == null) {
              if (!other.sigRequirements_.isEmpty()) {
                if (sigRequirements_.isEmpty()) {
                  sigRequirements_ = other.sigRequirements_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureSigRequirementsIsMutable();
                  sigRequirements_.addAll(other.sigRequirements_);
                }
                onChanged();
              }
            } else {
              if (!other.sigRequirements_.isEmpty()) {
                if (sigRequirementsBuilder_.isEmpty()) {
                  sigRequirementsBuilder_.dispose();
                  sigRequirementsBuilder_ = null;
                  sigRequirements_ = other.sigRequirements_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  sigRequirementsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getSigRequirementsFieldBuilder() : null;
                } else {
                  sigRequirementsBuilder_.addAllMessages(other.sigRequirements_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> sigRequirements_ =
            java.util.Collections.emptyList();
          private void ensureSigRequirementsIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              sigRequirements_ = new java.util.ArrayList<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement>(sigRequirements_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder> sigRequirementsBuilder_;

          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> getSigRequirementsList() {
            if (sigRequirementsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(sigRequirements_);
            } else {
              return sigRequirementsBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public int getSigRequirementsCount() {
            if (sigRequirementsBuilder_ == null) {
              return sigRequirements_.size();
            } else {
              return sigRequirementsBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement getSigRequirements(int index) {
            if (sigRequirementsBuilder_ == null) {
              return sigRequirements_.get(index);
            } else {
              return sigRequirementsBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder setSigRequirements(
              int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement value) {
            if (sigRequirementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSigRequirementsIsMutable();
              sigRequirements_.set(index, value);
              onChanged();
            } else {
              sigRequirementsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder setSigRequirements(
              int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder builderForValue) {
            if (sigRequirementsBuilder_ == null) {
              ensureSigRequirementsIsMutable();
              sigRequirements_.set(index, builderForValue.build());
              onChanged();
            } else {
              sigRequirementsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder addSigRequirements(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement value) {
            if (sigRequirementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSigRequirementsIsMutable();
              sigRequirements_.add(value);
              onChanged();
            } else {
              sigRequirementsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder addSigRequirements(
              int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement value) {
            if (sigRequirementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSigRequirementsIsMutable();
              sigRequirements_.add(index, value);
              onChanged();
            } else {
              sigRequirementsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder addSigRequirements(
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder builderForValue) {
            if (sigRequirementsBuilder_ == null) {
              ensureSigRequirementsIsMutable();
              sigRequirements_.add(builderForValue.build());
              onChanged();
            } else {
              sigRequirementsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder addSigRequirements(
              int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder builderForValue) {
            if (sigRequirementsBuilder_ == null) {
              ensureSigRequirementsIsMutable();
              sigRequirements_.add(index, builderForValue.build());
              onChanged();
            } else {
              sigRequirementsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder addAllSigRequirements(
              java.lang.Iterable<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement> values) {
            if (sigRequirementsBuilder_ == null) {
              ensureSigRequirementsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, sigRequirements_);
              onChanged();
            } else {
              sigRequirementsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder clearSigRequirements() {
            if (sigRequirementsBuilder_ == null) {
              sigRequirements_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              sigRequirementsBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public Builder removeSigRequirements(int index) {
            if (sigRequirementsBuilder_ == null) {
              ensureSigRequirementsIsMutable();
              sigRequirements_.remove(index);
              onChanged();
            } else {
              sigRequirementsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder getSigRequirementsBuilder(
              int index) {
            return getSigRequirementsFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder getSigRequirementsOrBuilder(
              int index) {
            if (sigRequirementsBuilder_ == null) {
              return sigRequirements_.get(index);  } else {
              return sigRequirementsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder> 
               getSigRequirementsOrBuilderList() {
            if (sigRequirementsBuilder_ != null) {
              return sigRequirementsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(sigRequirements_);
            }
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder addSigRequirementsBuilder() {
            return getSigRequirementsFieldBuilder().addBuilder(
                axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.getDefaultInstance());
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder addSigRequirementsBuilder(
              int index) {
            return getSigRequirementsFieldBuilder().addBuilder(
                index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.getDefaultInstance());
          }
          /**
           * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo.SigRequirement sig_requirements = 1 [(.gogoproto.nullable) = false];</code>
           */
          public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder> 
               getSigRequirementsBuilderList() {
            return getSigRequirementsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder> 
              getSigRequirementsFieldBuilder() {
            if (sigRequirementsBuilder_ == null) {
              sigRequirementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirement.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.SigRequirementOrBuilder>(
                      sigRequirements_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              sigRequirements_ = null;
            }
            return sigRequirementsBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo)
        }

        // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo)
        private static final axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo();
        }

        public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<InputInfo>
            PARSER = new com.google.protobuf.AbstractParser<InputInfo>() {
          @java.lang.Override
          public InputInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new InputInfo(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<InputInfo> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<InputInfo> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int ROTATE_KEY_FIELD_NUMBER = 1;
      private boolean rotateKey_;
      /**
       * <code>bool rotate_key = 1;</code>
       * @return The rotateKey.
       */
      @java.lang.Override
      public boolean getRotateKey() {
        return rotateKey_;
      }

      public static final int INPUT_INFOS_FIELD_NUMBER = 2;
      private java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> inputInfos_;
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> getInputInfosList() {
        return inputInfos_;
      }
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder> 
          getInputInfosOrBuilderList() {
        return inputInfos_;
      }
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public int getInputInfosCount() {
        return inputInfos_.size();
      }
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getInputInfos(int index) {
        return inputInfos_.get(index);
      }
      /**
       * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder getInputInfosOrBuilder(
          int index) {
        return inputInfos_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rotateKey_ != false) {
          output.writeBool(1, rotateKey_);
        }
        for (int i = 0; i < inputInfos_.size(); i++) {
          output.writeMessage(2, inputInfos_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rotateKey_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, rotateKey_);
        }
        for (int i = 0; i < inputInfos_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, inputInfos_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info)) {
          return super.equals(obj);
        }
        axelar.bitcoin.v1beta1.Types.UnsignedTx.Info other = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info) obj;

        if (getRotateKey()
            != other.getRotateKey()) return false;
        if (!getInputInfosList()
            .equals(other.getInputInfosList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROTATE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRotateKey());
        if (getInputInfosCount() > 0) {
          hash = (37 * hash) + INPUT_INFOS_FIELD_NUMBER;
          hash = (53 * hash) + getInputInfosList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx.Info}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.UnsignedTx.Info)
          axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder.class);
        }

        // Construct using axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getInputInfosFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rotateKey_ = false;

          if (inputInfosBuilder_ == null) {
            inputInfos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            inputInfosBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor;
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getDefaultInstanceForType() {
          return axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info build() {
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info buildPartial() {
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info result = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info(this);
          int from_bitField0_ = bitField0_;
          result.rotateKey_ = rotateKey_;
          if (inputInfosBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              inputInfos_ = java.util.Collections.unmodifiableList(inputInfos_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.inputInfos_ = inputInfos_;
          } else {
            result.inputInfos_ = inputInfosBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx.Info) {
            return mergeFrom((axelar.bitcoin.v1beta1.Types.UnsignedTx.Info)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info other) {
          if (other == axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.getDefaultInstance()) return this;
          if (other.getRotateKey() != false) {
            setRotateKey(other.getRotateKey());
          }
          if (inputInfosBuilder_ == null) {
            if (!other.inputInfos_.isEmpty()) {
              if (inputInfos_.isEmpty()) {
                inputInfos_ = other.inputInfos_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureInputInfosIsMutable();
                inputInfos_.addAll(other.inputInfos_);
              }
              onChanged();
            }
          } else {
            if (!other.inputInfos_.isEmpty()) {
              if (inputInfosBuilder_.isEmpty()) {
                inputInfosBuilder_.dispose();
                inputInfosBuilder_ = null;
                inputInfos_ = other.inputInfos_;
                bitField0_ = (bitField0_ & ~0x00000001);
                inputInfosBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getInputInfosFieldBuilder() : null;
              } else {
                inputInfosBuilder_.addAllMessages(other.inputInfos_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.bitcoin.v1beta1.Types.UnsignedTx.Info) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean rotateKey_ ;
        /**
         * <code>bool rotate_key = 1;</code>
         * @return The rotateKey.
         */
        @java.lang.Override
        public boolean getRotateKey() {
          return rotateKey_;
        }
        /**
         * <code>bool rotate_key = 1;</code>
         * @param value The rotateKey to set.
         * @return This builder for chaining.
         */
        public Builder setRotateKey(boolean value) {
          
          rotateKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool rotate_key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRotateKey() {
          
          rotateKey_ = false;
          onChanged();
          return this;
        }

        private java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> inputInfos_ =
          java.util.Collections.emptyList();
        private void ensureInputInfosIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            inputInfos_ = new java.util.ArrayList<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo>(inputInfos_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder> inputInfosBuilder_;

        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> getInputInfosList() {
          if (inputInfosBuilder_ == null) {
            return java.util.Collections.unmodifiableList(inputInfos_);
          } else {
            return inputInfosBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public int getInputInfosCount() {
          if (inputInfosBuilder_ == null) {
            return inputInfos_.size();
          } else {
            return inputInfosBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo getInputInfos(int index) {
          if (inputInfosBuilder_ == null) {
            return inputInfos_.get(index);
          } else {
            return inputInfosBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setInputInfos(
            int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo value) {
          if (inputInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputInfosIsMutable();
            inputInfos_.set(index, value);
            onChanged();
          } else {
            inputInfosBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder setInputInfos(
            int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder builderForValue) {
          if (inputInfosBuilder_ == null) {
            ensureInputInfosIsMutable();
            inputInfos_.set(index, builderForValue.build());
            onChanged();
          } else {
            inputInfosBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addInputInfos(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo value) {
          if (inputInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputInfosIsMutable();
            inputInfos_.add(value);
            onChanged();
          } else {
            inputInfosBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addInputInfos(
            int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo value) {
          if (inputInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureInputInfosIsMutable();
            inputInfos_.add(index, value);
            onChanged();
          } else {
            inputInfosBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addInputInfos(
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder builderForValue) {
          if (inputInfosBuilder_ == null) {
            ensureInputInfosIsMutable();
            inputInfos_.add(builderForValue.build());
            onChanged();
          } else {
            inputInfosBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addInputInfos(
            int index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder builderForValue) {
          if (inputInfosBuilder_ == null) {
            ensureInputInfosIsMutable();
            inputInfos_.add(index, builderForValue.build());
            onChanged();
          } else {
            inputInfosBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder addAllInputInfos(
            java.lang.Iterable<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo> values) {
          if (inputInfosBuilder_ == null) {
            ensureInputInfosIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, inputInfos_);
            onChanged();
          } else {
            inputInfosBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder clearInputInfos() {
          if (inputInfosBuilder_ == null) {
            inputInfos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            inputInfosBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public Builder removeInputInfos(int index) {
          if (inputInfosBuilder_ == null) {
            ensureInputInfosIsMutable();
            inputInfos_.remove(index);
            onChanged();
          } else {
            inputInfosBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder getInputInfosBuilder(
            int index) {
          return getInputInfosFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder getInputInfosOrBuilder(
            int index) {
          if (inputInfosBuilder_ == null) {
            return inputInfos_.get(index);  } else {
            return inputInfosBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<? extends axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder> 
             getInputInfosOrBuilderList() {
          if (inputInfosBuilder_ != null) {
            return inputInfosBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(inputInfos_);
          }
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder addInputInfosBuilder() {
          return getInputInfosFieldBuilder().addBuilder(
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder addInputInfosBuilder(
            int index) {
          return getInputInfosFieldBuilder().addBuilder(
              index, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .axelar.bitcoin.v1beta1.UnsignedTx.Info.InputInfo input_infos = 2 [(.gogoproto.nullable) = false];</code>
         */
        public java.util.List<axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder> 
             getInputInfosBuilderList() {
          return getInputInfosFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder> 
            getInputInfosFieldBuilder() {
          if (inputInfosBuilder_ == null) {
            inputInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfo.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.InputInfoOrBuilder>(
                    inputInfos_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            inputInfos_ = null;
          }
          return inputInfosBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info)
      }

      // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.UnsignedTx.Info)
      private static final axelar.bitcoin.v1beta1.Types.UnsignedTx.Info DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.UnsignedTx.Info();
      }

      public static axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Info>
          PARSER = new com.google.protobuf.AbstractParser<Info>() {
        @java.lang.Override
        public Info parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Info(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Info> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Info> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public axelar.bitcoin.v1beta1.Types.TxType getType() {
      @SuppressWarnings("deprecation")
      axelar.bitcoin.v1beta1.Types.TxType result = axelar.bitcoin.v1beta1.Types.TxType.valueOf(type_);
      return result == null ? axelar.bitcoin.v1beta1.Types.TxType.UNRECOGNIZED : result;
    }

    public static final int TX_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>bytes tx = 2;</code>
     * @return The tx.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    public static final int INFO_FIELD_NUMBER = 3;
    private axelar.bitcoin.v1beta1.Types.UnsignedTx.Info info_;
    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the info field is set.
     */
    @java.lang.Override
    public boolean hasInfo() {
      return info_ != null;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     * @return The info.
     */
    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getInfo() {
      return info_ == null ? axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.getDefaultInstance() : info_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
     */
    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder getInfoOrBuilder() {
      return getInfo();
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
     * @return The status.
     */
    @java.lang.Override public axelar.bitcoin.v1beta1.Types.TxStatus getStatus() {
      @SuppressWarnings("deprecation")
      axelar.bitcoin.v1beta1.Types.TxStatus result = axelar.bitcoin.v1beta1.Types.TxStatus.valueOf(status_);
      return result == null ? axelar.bitcoin.v1beta1.Types.TxStatus.UNRECOGNIZED : result;
    }

    public static final int CONFIRMATION_REQUIRED_FIELD_NUMBER = 5;
    private boolean confirmationRequired_;
    /**
     * <code>bool confirmation_required = 5;</code>
     * @return The confirmationRequired.
     */
    @java.lang.Override
    public boolean getConfirmationRequired() {
      return confirmationRequired_;
    }

    public static final int ANYONE_CAN_SPEND_VOUT_FIELD_NUMBER = 6;
    private int anyoneCanSpendVout_;
    /**
     * <code>uint32 anyone_can_spend_vout = 6;</code>
     * @return The anyoneCanSpendVout.
     */
    @java.lang.Override
    public int getAnyoneCanSpendVout() {
      return anyoneCanSpendVout_;
    }

    public static final int PREV_ABORTED_KEY_ID_FIELD_NUMBER = 7;
    private volatile java.lang.Object prevAbortedKeyId_;
    /**
     * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The prevAbortedKeyId.
     */
    @java.lang.Override
    public java.lang.String getPrevAbortedKeyId() {
      java.lang.Object ref = prevAbortedKeyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        prevAbortedKeyId_ = s;
        return s;
      }
    }
    /**
     * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The bytes for prevAbortedKeyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrevAbortedKeyIdBytes() {
      java.lang.Object ref = prevAbortedKeyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prevAbortedKeyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INTERNAL_TRANSFER_AMOUNT_FIELD_NUMBER = 8;
    private long internalTransferAmount_;
    /**
     * <code>int64 internal_transfer_amount = 8 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
     * @return The internalTransferAmount.
     */
    @java.lang.Override
    public long getInternalTransferAmount() {
      return internalTransferAmount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != axelar.bitcoin.v1beta1.Types.TxType.TX_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!tx_.isEmpty()) {
        output.writeBytes(2, tx_);
      }
      if (info_ != null) {
        output.writeMessage(3, getInfo());
      }
      if (status_ != axelar.bitcoin.v1beta1.Types.TxStatus.TX_STATUS_UNSPECIFIED.getNumber()) {
        output.writeEnum(4, status_);
      }
      if (confirmationRequired_ != false) {
        output.writeBool(5, confirmationRequired_);
      }
      if (anyoneCanSpendVout_ != 0) {
        output.writeUInt32(6, anyoneCanSpendVout_);
      }
      if (!getPrevAbortedKeyIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, prevAbortedKeyId_);
      }
      if (internalTransferAmount_ != 0L) {
        output.writeInt64(8, internalTransferAmount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != axelar.bitcoin.v1beta1.Types.TxType.TX_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tx_);
      }
      if (info_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInfo());
      }
      if (status_ != axelar.bitcoin.v1beta1.Types.TxStatus.TX_STATUS_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, status_);
      }
      if (confirmationRequired_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, confirmationRequired_);
      }
      if (anyoneCanSpendVout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, anyoneCanSpendVout_);
      }
      if (!getPrevAbortedKeyIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, prevAbortedKeyId_);
      }
      if (internalTransferAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, internalTransferAmount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx)) {
        return super.equals(obj);
      }
      axelar.bitcoin.v1beta1.Types.UnsignedTx other = (axelar.bitcoin.v1beta1.Types.UnsignedTx) obj;

      if (type_ != other.type_) return false;
      if (!getTx()
          .equals(other.getTx())) return false;
      if (hasInfo() != other.hasInfo()) return false;
      if (hasInfo()) {
        if (!getInfo()
            .equals(other.getInfo())) return false;
      }
      if (status_ != other.status_) return false;
      if (getConfirmationRequired()
          != other.getConfirmationRequired()) return false;
      if (getAnyoneCanSpendVout()
          != other.getAnyoneCanSpendVout()) return false;
      if (!getPrevAbortedKeyId()
          .equals(other.getPrevAbortedKeyId())) return false;
      if (getInternalTransferAmount()
          != other.getInternalTransferAmount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TX_FIELD_NUMBER;
      hash = (53 * hash) + getTx().hashCode();
      if (hasInfo()) {
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfo().hashCode();
      }
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      hash = (37 * hash) + CONFIRMATION_REQUIRED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getConfirmationRequired());
      hash = (37 * hash) + ANYONE_CAN_SPEND_VOUT_FIELD_NUMBER;
      hash = (53 * hash) + getAnyoneCanSpendVout();
      hash = (37 * hash) + PREV_ABORTED_KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPrevAbortedKeyId().hashCode();
      hash = (37 * hash) + INTERNAL_TRANSFER_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInternalTransferAmount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.UnsignedTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.UnsignedTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axelar.bitcoin.v1beta1.UnsignedTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.UnsignedTx)
        axelar.bitcoin.v1beta1.Types.UnsignedTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.UnsignedTx.class, axelar.bitcoin.v1beta1.Types.UnsignedTx.Builder.class);
      }

      // Construct using axelar.bitcoin.v1beta1.Types.UnsignedTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        tx_ = com.google.protobuf.ByteString.EMPTY;

        if (infoBuilder_ == null) {
          info_ = null;
        } else {
          info_ = null;
          infoBuilder_ = null;
        }
        status_ = 0;

        confirmationRequired_ = false;

        anyoneCanSpendVout_ = 0;

        prevAbortedKeyId_ = "";

        internalTransferAmount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx getDefaultInstanceForType() {
        return axelar.bitcoin.v1beta1.Types.UnsignedTx.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx build() {
        axelar.bitcoin.v1beta1.Types.UnsignedTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.UnsignedTx buildPartial() {
        axelar.bitcoin.v1beta1.Types.UnsignedTx result = new axelar.bitcoin.v1beta1.Types.UnsignedTx(this);
        result.type_ = type_;
        result.tx_ = tx_;
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        result.status_ = status_;
        result.confirmationRequired_ = confirmationRequired_;
        result.anyoneCanSpendVout_ = anyoneCanSpendVout_;
        result.prevAbortedKeyId_ = prevAbortedKeyId_;
        result.internalTransferAmount_ = internalTransferAmount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.bitcoin.v1beta1.Types.UnsignedTx) {
          return mergeFrom((axelar.bitcoin.v1beta1.Types.UnsignedTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.UnsignedTx other) {
        if (other == axelar.bitcoin.v1beta1.Types.UnsignedTx.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.getConfirmationRequired() != false) {
          setConfirmationRequired(other.getConfirmationRequired());
        }
        if (other.getAnyoneCanSpendVout() != 0) {
          setAnyoneCanSpendVout(other.getAnyoneCanSpendVout());
        }
        if (!other.getPrevAbortedKeyId().isEmpty()) {
          prevAbortedKeyId_ = other.prevAbortedKeyId_;
          onChanged();
        }
        if (other.getInternalTransferAmount() != 0L) {
          setInternalTransferAmount(other.getInternalTransferAmount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.bitcoin.v1beta1.Types.UnsignedTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.bitcoin.v1beta1.Types.UnsignedTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.TxType getType() {
        @SuppressWarnings("deprecation")
        axelar.bitcoin.v1beta1.Types.TxType result = axelar.bitcoin.v1beta1.Types.TxType.valueOf(type_);
        return result == null ? axelar.bitcoin.v1beta1.Types.TxType.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(axelar.bitcoin.v1beta1.Types.TxType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes tx = 2;</code>
       * @return The tx.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>bytes tx = 2;</code>
       * @param value The tx to set.
       * @return This builder for chaining.
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes tx = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      private axelar.bitcoin.v1beta1.Types.UnsignedTx.Info info_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder> infoBuilder_;
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       * @return Whether the info field is set.
       */
      public boolean hasInfo() {
        return infoBuilder_ != null || info_ != null;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       * @return The info.
       */
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info getInfo() {
        if (infoBuilder_ == null) {
          return info_ == null ? axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.getDefaultInstance() : info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setInfo(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder setInfo(
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder mergeInfo(axelar.bitcoin.v1beta1.Types.UnsignedTx.Info value) {
        if (infoBuilder_ == null) {
          if (info_ != null) {
            info_ =
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = null;
          onChanged();
        } else {
          info_ = null;
          infoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder getInfoBuilder() {
        
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      public axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_ == null ?
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.getDefaultInstance() : info_;
        }
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.UnsignedTx.Info info = 3 [(.gogoproto.nullable) = false];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.bitcoin.v1beta1.Types.UnsignedTx.Info, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.bitcoin.v1beta1.Types.UnsignedTx.Info, axelar.bitcoin.v1beta1.Types.UnsignedTx.Info.Builder, axelar.bitcoin.v1beta1.Types.UnsignedTx.InfoOrBuilder>(
                  getInfo(),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      private int status_ = 0;
      /**
       * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
       * @return The status.
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.TxStatus getStatus() {
        @SuppressWarnings("deprecation")
        axelar.bitcoin.v1beta1.Types.TxStatus result = axelar.bitcoin.v1beta1.Types.TxStatus.valueOf(status_);
        return result == null ? axelar.bitcoin.v1beta1.Types.TxStatus.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(axelar.bitcoin.v1beta1.Types.TxStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxStatus status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private boolean confirmationRequired_ ;
      /**
       * <code>bool confirmation_required = 5;</code>
       * @return The confirmationRequired.
       */
      @java.lang.Override
      public boolean getConfirmationRequired() {
        return confirmationRequired_;
      }
      /**
       * <code>bool confirmation_required = 5;</code>
       * @param value The confirmationRequired to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationRequired(boolean value) {
        
        confirmationRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool confirmation_required = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationRequired() {
        
        confirmationRequired_ = false;
        onChanged();
        return this;
      }

      private int anyoneCanSpendVout_ ;
      /**
       * <code>uint32 anyone_can_spend_vout = 6;</code>
       * @return The anyoneCanSpendVout.
       */
      @java.lang.Override
      public int getAnyoneCanSpendVout() {
        return anyoneCanSpendVout_;
      }
      /**
       * <code>uint32 anyone_can_spend_vout = 6;</code>
       * @param value The anyoneCanSpendVout to set.
       * @return This builder for chaining.
       */
      public Builder setAnyoneCanSpendVout(int value) {
        
        anyoneCanSpendVout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 anyone_can_spend_vout = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnyoneCanSpendVout() {
        
        anyoneCanSpendVout_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object prevAbortedKeyId_ = "";
      /**
       * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The prevAbortedKeyId.
       */
      public java.lang.String getPrevAbortedKeyId() {
        java.lang.Object ref = prevAbortedKeyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          prevAbortedKeyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The bytes for prevAbortedKeyId.
       */
      public com.google.protobuf.ByteString
          getPrevAbortedKeyIdBytes() {
        java.lang.Object ref = prevAbortedKeyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prevAbortedKeyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param value The prevAbortedKeyId to set.
       * @return This builder for chaining.
       */
      public Builder setPrevAbortedKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        prevAbortedKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevAbortedKeyId() {
        
        prevAbortedKeyId_ = getDefaultInstance().getPrevAbortedKeyId();
        onChanged();
        return this;
      }
      /**
       * <code>string prev_aborted_key_id = 7 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param value The bytes for prevAbortedKeyId to set.
       * @return This builder for chaining.
       */
      public Builder setPrevAbortedKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        prevAbortedKeyId_ = value;
        onChanged();
        return this;
      }

      private long internalTransferAmount_ ;
      /**
       * <code>int64 internal_transfer_amount = 8 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @return The internalTransferAmount.
       */
      @java.lang.Override
      public long getInternalTransferAmount() {
        return internalTransferAmount_;
      }
      /**
       * <code>int64 internal_transfer_amount = 8 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @param value The internalTransferAmount to set.
       * @return This builder for chaining.
       */
      public Builder setInternalTransferAmount(long value) {
        
        internalTransferAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 internal_transfer_amount = 8 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInternalTransferAmount() {
        
        internalTransferAmount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.UnsignedTx)
    }

    // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.UnsignedTx)
    private static final axelar.bitcoin.v1beta1.Types.UnsignedTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.UnsignedTx();
    }

    public static axelar.bitcoin.v1beta1.Types.UnsignedTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnsignedTx>
        PARSER = new com.google.protobuf.AbstractParser<UnsignedTx>() {
      @java.lang.Override
      public UnsignedTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnsignedTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnsignedTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnsignedTx> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.UnsignedTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedTxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.SignedTx)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The type.
     */
    axelar.bitcoin.v1beta1.Types.TxType getType();

    /**
     * <code>bytes tx = 2;</code>
     * @return The tx.
     */
    com.google.protobuf.ByteString getTx();

    /**
     * <code>bytes prev_signed_tx_hash = 3;</code>
     * @return The prevSignedTxHash.
     */
    com.google.protobuf.ByteString getPrevSignedTxHash();

    /**
     * <code>bool confirmation_required = 4;</code>
     * @return The confirmationRequired.
     */
    boolean getConfirmationRequired();

    /**
     * <code>uint32 anyone_can_spend_vout = 5;</code>
     * @return The anyoneCanSpendVout.
     */
    int getAnyoneCanSpendVout();
  }
  /**
   * Protobuf type {@code axelar.bitcoin.v1beta1.SignedTx}
   */
  public static final class SignedTx extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.SignedTx)
      SignedTxOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedTx.newBuilder() to construct.
    private SignedTx(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedTx() {
      type_ = 0;
      tx_ = com.google.protobuf.ByteString.EMPTY;
      prevSignedTxHash_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignedTx();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignedTx(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              tx_ = input.readBytes();
              break;
            }
            case 26: {

              prevSignedTxHash_ = input.readBytes();
              break;
            }
            case 32: {

              confirmationRequired_ = input.readBool();
              break;
            }
            case 40: {

              anyoneCanSpendVout_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_SignedTx_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.bitcoin.v1beta1.Types.SignedTx.class, axelar.bitcoin.v1beta1.Types.SignedTx.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public axelar.bitcoin.v1beta1.Types.TxType getType() {
      @SuppressWarnings("deprecation")
      axelar.bitcoin.v1beta1.Types.TxType result = axelar.bitcoin.v1beta1.Types.TxType.valueOf(type_);
      return result == null ? axelar.bitcoin.v1beta1.Types.TxType.UNRECOGNIZED : result;
    }

    public static final int TX_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>bytes tx = 2;</code>
     * @return The tx.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    public static final int PREV_SIGNED_TX_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString prevSignedTxHash_;
    /**
     * <code>bytes prev_signed_tx_hash = 3;</code>
     * @return The prevSignedTxHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrevSignedTxHash() {
      return prevSignedTxHash_;
    }

    public static final int CONFIRMATION_REQUIRED_FIELD_NUMBER = 4;
    private boolean confirmationRequired_;
    /**
     * <code>bool confirmation_required = 4;</code>
     * @return The confirmationRequired.
     */
    @java.lang.Override
    public boolean getConfirmationRequired() {
      return confirmationRequired_;
    }

    public static final int ANYONE_CAN_SPEND_VOUT_FIELD_NUMBER = 5;
    private int anyoneCanSpendVout_;
    /**
     * <code>uint32 anyone_can_spend_vout = 5;</code>
     * @return The anyoneCanSpendVout.
     */
    @java.lang.Override
    public int getAnyoneCanSpendVout() {
      return anyoneCanSpendVout_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != axelar.bitcoin.v1beta1.Types.TxType.TX_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!tx_.isEmpty()) {
        output.writeBytes(2, tx_);
      }
      if (!prevSignedTxHash_.isEmpty()) {
        output.writeBytes(3, prevSignedTxHash_);
      }
      if (confirmationRequired_ != false) {
        output.writeBool(4, confirmationRequired_);
      }
      if (anyoneCanSpendVout_ != 0) {
        output.writeUInt32(5, anyoneCanSpendVout_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != axelar.bitcoin.v1beta1.Types.TxType.TX_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!tx_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tx_);
      }
      if (!prevSignedTxHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, prevSignedTxHash_);
      }
      if (confirmationRequired_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, confirmationRequired_);
      }
      if (anyoneCanSpendVout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, anyoneCanSpendVout_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.bitcoin.v1beta1.Types.SignedTx)) {
        return super.equals(obj);
      }
      axelar.bitcoin.v1beta1.Types.SignedTx other = (axelar.bitcoin.v1beta1.Types.SignedTx) obj;

      if (type_ != other.type_) return false;
      if (!getTx()
          .equals(other.getTx())) return false;
      if (!getPrevSignedTxHash()
          .equals(other.getPrevSignedTxHash())) return false;
      if (getConfirmationRequired()
          != other.getConfirmationRequired()) return false;
      if (getAnyoneCanSpendVout()
          != other.getAnyoneCanSpendVout()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TX_FIELD_NUMBER;
      hash = (53 * hash) + getTx().hashCode();
      hash = (37 * hash) + PREV_SIGNED_TX_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getPrevSignedTxHash().hashCode();
      hash = (37 * hash) + CONFIRMATION_REQUIRED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getConfirmationRequired());
      hash = (37 * hash) + ANYONE_CAN_SPEND_VOUT_FIELD_NUMBER;
      hash = (53 * hash) + getAnyoneCanSpendVout();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.SignedTx parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.SignedTx prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axelar.bitcoin.v1beta1.SignedTx}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.SignedTx)
        axelar.bitcoin.v1beta1.Types.SignedTxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_SignedTx_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.SignedTx.class, axelar.bitcoin.v1beta1.Types.SignedTx.Builder.class);
      }

      // Construct using axelar.bitcoin.v1beta1.Types.SignedTx.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        tx_ = com.google.protobuf.ByteString.EMPTY;

        prevSignedTxHash_ = com.google.protobuf.ByteString.EMPTY;

        confirmationRequired_ = false;

        anyoneCanSpendVout_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.SignedTx getDefaultInstanceForType() {
        return axelar.bitcoin.v1beta1.Types.SignedTx.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.SignedTx build() {
        axelar.bitcoin.v1beta1.Types.SignedTx result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.SignedTx buildPartial() {
        axelar.bitcoin.v1beta1.Types.SignedTx result = new axelar.bitcoin.v1beta1.Types.SignedTx(this);
        result.type_ = type_;
        result.tx_ = tx_;
        result.prevSignedTxHash_ = prevSignedTxHash_;
        result.confirmationRequired_ = confirmationRequired_;
        result.anyoneCanSpendVout_ = anyoneCanSpendVout_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.bitcoin.v1beta1.Types.SignedTx) {
          return mergeFrom((axelar.bitcoin.v1beta1.Types.SignedTx)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.SignedTx other) {
        if (other == axelar.bitcoin.v1beta1.Types.SignedTx.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTx() != com.google.protobuf.ByteString.EMPTY) {
          setTx(other.getTx());
        }
        if (other.getPrevSignedTxHash() != com.google.protobuf.ByteString.EMPTY) {
          setPrevSignedTxHash(other.getPrevSignedTxHash());
        }
        if (other.getConfirmationRequired() != false) {
          setConfirmationRequired(other.getConfirmationRequired());
        }
        if (other.getAnyoneCanSpendVout() != 0) {
          setAnyoneCanSpendVout(other.getAnyoneCanSpendVout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.bitcoin.v1beta1.Types.SignedTx parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.bitcoin.v1beta1.Types.SignedTx) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.TxType getType() {
        @SuppressWarnings("deprecation")
        axelar.bitcoin.v1beta1.Types.TxType result = axelar.bitcoin.v1beta1.Types.TxType.valueOf(type_);
        return result == null ? axelar.bitcoin.v1beta1.Types.TxType.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(axelar.bitcoin.v1beta1.Types.TxType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.TxType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes tx = 2;</code>
       * @return The tx.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>bytes tx = 2;</code>
       * @param value The tx to set.
       * @return This builder for chaining.
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes tx = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTx() {
        
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString prevSignedTxHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes prev_signed_tx_hash = 3;</code>
       * @return The prevSignedTxHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrevSignedTxHash() {
        return prevSignedTxHash_;
      }
      /**
       * <code>bytes prev_signed_tx_hash = 3;</code>
       * @param value The prevSignedTxHash to set.
       * @return This builder for chaining.
       */
      public Builder setPrevSignedTxHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        prevSignedTxHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes prev_signed_tx_hash = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevSignedTxHash() {
        
        prevSignedTxHash_ = getDefaultInstance().getPrevSignedTxHash();
        onChanged();
        return this;
      }

      private boolean confirmationRequired_ ;
      /**
       * <code>bool confirmation_required = 4;</code>
       * @return The confirmationRequired.
       */
      @java.lang.Override
      public boolean getConfirmationRequired() {
        return confirmationRequired_;
      }
      /**
       * <code>bool confirmation_required = 4;</code>
       * @param value The confirmationRequired to set.
       * @return This builder for chaining.
       */
      public Builder setConfirmationRequired(boolean value) {
        
        confirmationRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool confirmation_required = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfirmationRequired() {
        
        confirmationRequired_ = false;
        onChanged();
        return this;
      }

      private int anyoneCanSpendVout_ ;
      /**
       * <code>uint32 anyone_can_spend_vout = 5;</code>
       * @return The anyoneCanSpendVout.
       */
      @java.lang.Override
      public int getAnyoneCanSpendVout() {
        return anyoneCanSpendVout_;
      }
      /**
       * <code>uint32 anyone_can_spend_vout = 5;</code>
       * @param value The anyoneCanSpendVout to set.
       * @return This builder for chaining.
       */
      public Builder setAnyoneCanSpendVout(int value) {
        
        anyoneCanSpendVout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 anyone_can_spend_vout = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnyoneCanSpendVout() {
        
        anyoneCanSpendVout_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.SignedTx)
    }

    // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.SignedTx)
    private static final axelar.bitcoin.v1beta1.Types.SignedTx DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.SignedTx();
    }

    public static axelar.bitcoin.v1beta1.Types.SignedTx getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignedTx>
        PARSER = new com.google.protobuf.AbstractParser<SignedTx>() {
      @java.lang.Override
      public SignedTx parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedTx(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignedTx> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignedTx> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.SignedTx getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutPointInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.OutPointInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string out_point = 1;</code>
     * @return The outPoint.
     */
    java.lang.String getOutPoint();
    /**
     * <code>string out_point = 1;</code>
     * @return The bytes for outPoint.
     */
    com.google.protobuf.ByteString
        getOutPointBytes();

    /**
     * <code>int64 amount = 2 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <code>string address = 3;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <code>string address = 3;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();
  }
  /**
   * <pre>
   * OutPointInfo describes all the necessary information to confirm the outPoint
   * of a transaction
   * </pre>
   *
   * Protobuf type {@code axelar.bitcoin.v1beta1.OutPointInfo}
   */
  public static final class OutPointInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.OutPointInfo)
      OutPointInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutPointInfo.newBuilder() to construct.
    private OutPointInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutPointInfo() {
      outPoint_ = "";
      address_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OutPointInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutPointInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              outPoint_ = s;
              break;
            }
            case 16: {

              amount_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_OutPointInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.bitcoin.v1beta1.Types.OutPointInfo.class, axelar.bitcoin.v1beta1.Types.OutPointInfo.Builder.class);
    }

    public static final int OUT_POINT_FIELD_NUMBER = 1;
    private volatile java.lang.Object outPoint_;
    /**
     * <code>string out_point = 1;</code>
     * @return The outPoint.
     */
    @java.lang.Override
    public java.lang.String getOutPoint() {
      java.lang.Object ref = outPoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        outPoint_ = s;
        return s;
      }
    }
    /**
     * <code>string out_point = 1;</code>
     * @return The bytes for outPoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOutPointBytes() {
      java.lang.Object ref = outPoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outPoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>int64 amount = 2 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public long getAmount() {
      return amount_;
    }

    public static final int ADDRESS_FIELD_NUMBER = 3;
    private volatile java.lang.Object address_;
    /**
     * <code>string address = 3;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <code>string address = 3;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getOutPointBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, outPoint_);
      }
      if (amount_ != 0L) {
        output.writeInt64(2, amount_);
      }
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, address_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getOutPointBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, outPoint_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, address_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.bitcoin.v1beta1.Types.OutPointInfo)) {
        return super.equals(obj);
      }
      axelar.bitcoin.v1beta1.Types.OutPointInfo other = (axelar.bitcoin.v1beta1.Types.OutPointInfo) obj;

      if (!getOutPoint()
          .equals(other.getOutPoint())) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OUT_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getOutPoint().hashCode();
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.OutPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.OutPointInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * OutPointInfo describes all the necessary information to confirm the outPoint
     * of a transaction
     * </pre>
     *
     * Protobuf type {@code axelar.bitcoin.v1beta1.OutPointInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.OutPointInfo)
        axelar.bitcoin.v1beta1.Types.OutPointInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_OutPointInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.OutPointInfo.class, axelar.bitcoin.v1beta1.Types.OutPointInfo.Builder.class);
      }

      // Construct using axelar.bitcoin.v1beta1.Types.OutPointInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        outPoint_ = "";

        amount_ = 0L;

        address_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.OutPointInfo getDefaultInstanceForType() {
        return axelar.bitcoin.v1beta1.Types.OutPointInfo.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.OutPointInfo build() {
        axelar.bitcoin.v1beta1.Types.OutPointInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.OutPointInfo buildPartial() {
        axelar.bitcoin.v1beta1.Types.OutPointInfo result = new axelar.bitcoin.v1beta1.Types.OutPointInfo(this);
        result.outPoint_ = outPoint_;
        result.amount_ = amount_;
        result.address_ = address_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.bitcoin.v1beta1.Types.OutPointInfo) {
          return mergeFrom((axelar.bitcoin.v1beta1.Types.OutPointInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.OutPointInfo other) {
        if (other == axelar.bitcoin.v1beta1.Types.OutPointInfo.getDefaultInstance()) return this;
        if (!other.getOutPoint().isEmpty()) {
          outPoint_ = other.outPoint_;
          onChanged();
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.bitcoin.v1beta1.Types.OutPointInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.bitcoin.v1beta1.Types.OutPointInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object outPoint_ = "";
      /**
       * <code>string out_point = 1;</code>
       * @return The outPoint.
       */
      public java.lang.String getOutPoint() {
        java.lang.Object ref = outPoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          outPoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string out_point = 1;</code>
       * @return The bytes for outPoint.
       */
      public com.google.protobuf.ByteString
          getOutPointBytes() {
        java.lang.Object ref = outPoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outPoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string out_point = 1;</code>
       * @param value The outPoint to set.
       * @return This builder for chaining.
       */
      public Builder setOutPoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        outPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string out_point = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutPoint() {
        
        outPoint_ = getDefaultInstance().getOutPoint();
        onChanged();
        return this;
      }
      /**
       * <code>string out_point = 1;</code>
       * @param value The bytes for outPoint to set.
       * @return This builder for chaining.
       */
      public Builder setOutPointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        outPoint_ = value;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <code>int64 amount = 2 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @return The amount.
       */
      @java.lang.Override
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>int64 amount = 2 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 amount = 2 [(.gogoproto.casttype) = "github.com/btcsuite/btcutil.Amount"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        
        amount_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <code>string address = 3;</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string address = 3;</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string address = 3;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string address = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <code>string address = 3;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.OutPointInfo)
    }

    // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.OutPointInfo)
    private static final axelar.bitcoin.v1beta1.Types.OutPointInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.OutPointInfo();
    }

    public static axelar.bitcoin.v1beta1.Types.OutPointInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutPointInfo>
        PARSER = new com.google.protobuf.AbstractParser<OutPointInfo>() {
      @java.lang.Override
      public OutPointInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutPointInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutPointInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutPointInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.OutPointInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddressInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.AddressInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string address = 1;</code>
     * @return The address.
     */
    java.lang.String getAddress();
    /**
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
     * @return The enum numeric value on the wire for role.
     */
    int getRoleValue();
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
     * @return The role.
     */
    axelar.bitcoin.v1beta1.Types.AddressRole getRole();

    /**
     * <code>bytes redeem_script = 3;</code>
     * @return The redeemScript.
     */
    com.google.protobuf.ByteString getRedeemScript();

    /**
     * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The keyId.
     */
    java.lang.String getKeyId();
    /**
     * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The bytes for keyId.
     */
    com.google.protobuf.ByteString
        getKeyIdBytes();

    /**
     * <code>uint32 max_sig_count = 5;</code>
     * @return The maxSigCount.
     */
    int getMaxSigCount();

    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     * @return Whether the spendingCondition field is set.
     */
    boolean hasSpendingCondition();
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     * @return The spendingCondition.
     */
    axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getSpendingCondition();
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     */
    axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder getSpendingConditionOrBuilder();
  }
  /**
   * <pre>
   * AddressInfo is a wrapper containing the Bitcoin P2WSH address, it's
   * corresponding script and the underlying key
   * </pre>
   *
   * Protobuf type {@code axelar.bitcoin.v1beta1.AddressInfo}
   */
  public static final class AddressInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.AddressInfo)
      AddressInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AddressInfo.newBuilder() to construct.
    private AddressInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddressInfo() {
      address_ = "";
      role_ = 0;
      redeemScript_ = com.google.protobuf.ByteString.EMPTY;
      keyId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AddressInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AddressInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              role_ = rawValue;
              break;
            }
            case 26: {

              redeemScript_ = input.readBytes();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              keyId_ = s;
              break;
            }
            case 40: {

              maxSigCount_ = input.readUInt32();
              break;
            }
            case 50: {
              axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder subBuilder = null;
              if (spendingCondition_ != null) {
                subBuilder = spendingCondition_.toBuilder();
              }
              spendingCondition_ = input.readMessage(axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spendingCondition_);
                spendingCondition_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.bitcoin.v1beta1.Types.AddressInfo.class, axelar.bitcoin.v1beta1.Types.AddressInfo.Builder.class);
    }

    public interface SpendingConditionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return A list containing the internalKeyIds.
       */
      java.util.List<java.lang.String>
          getInternalKeyIdsList();
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The count of internalKeyIds.
       */
      int getInternalKeyIdsCount();
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the element to return.
       * @return The internalKeyIds at the given index.
       */
      java.lang.String getInternalKeyIds(int index);
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the internalKeyIds at the given index.
       */
      com.google.protobuf.ByteString
          getInternalKeyIdsBytes(int index);

      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return A list containing the externalKeyIds.
       */
      java.util.List<java.lang.String>
          getExternalKeyIdsList();
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The count of externalKeyIds.
       */
      int getExternalKeyIdsCount();
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the element to return.
       * @return The externalKeyIds at the given index.
       */
      java.lang.String getExternalKeyIds(int index);
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the externalKeyIds at the given index.
       */
      com.google.protobuf.ByteString
          getExternalKeyIdsBytes(int index);

      /**
       * <code>int64 external_multisig_threshold = 3;</code>
       * @return The externalMultisigThreshold.
       */
      long getExternalMultisigThreshold();

      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       * @return Whether the lockTime field is set.
       */
      boolean hasLockTime();
      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       * @return The lockTime.
       */
      com.google.protobuf.Timestamp getLockTime();
      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       */
      com.google.protobuf.TimestampOrBuilder getLockTimeOrBuilder();
    }
    /**
     * Protobuf type {@code axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition}
     */
    public static final class SpendingCondition extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition)
        SpendingConditionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SpendingCondition.newBuilder() to construct.
      private SpendingCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SpendingCondition() {
        internalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        externalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SpendingCondition();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SpendingCondition(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  internalKeyIds_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                internalKeyIds_.add(s);
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  externalKeyIds_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000002;
                }
                externalKeyIds_.add(s);
                break;
              }
              case 24: {

                externalMultisigThreshold_ = input.readInt64();
                break;
              }
              case 34: {
                com.google.protobuf.Timestamp.Builder subBuilder = null;
                if (lockTime_ != null) {
                  subBuilder = lockTime_.toBuilder();
                }
                lockTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lockTime_);
                  lockTime_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            internalKeyIds_ = internalKeyIds_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            externalKeyIds_ = externalKeyIds_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.class, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder.class);
      }

      public static final int INTERNAL_KEY_IDS_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList internalKeyIds_;
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return A list containing the internalKeyIds.
       */
      public com.google.protobuf.ProtocolStringList
          getInternalKeyIdsList() {
        return internalKeyIds_;
      }
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The count of internalKeyIds.
       */
      public int getInternalKeyIdsCount() {
        return internalKeyIds_.size();
      }
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the element to return.
       * @return The internalKeyIds at the given index.
       */
      public java.lang.String getInternalKeyIds(int index) {
        return internalKeyIds_.get(index);
      }
      /**
       * <pre>
       * internal_key_ids lists the internal key IDs that one of which has to sign
       * regardless of locktime
       * </pre>
       *
       * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the internalKeyIds at the given index.
       */
      public com.google.protobuf.ByteString
          getInternalKeyIdsBytes(int index) {
        return internalKeyIds_.getByteString(index);
      }

      public static final int EXTERNAL_KEY_IDS_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList externalKeyIds_;
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return A list containing the externalKeyIds.
       */
      public com.google.protobuf.ProtocolStringList
          getExternalKeyIdsList() {
        return externalKeyIds_;
      }
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The count of externalKeyIds.
       */
      public int getExternalKeyIdsCount() {
        return externalKeyIds_.size();
      }
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the element to return.
       * @return The externalKeyIds at the given index.
       */
      public java.lang.String getExternalKeyIds(int index) {
        return externalKeyIds_.get(index);
      }
      /**
       * <pre>
       * external_key_ids lists the external key IDs that
       * external_multisig_threshold of which have to sign to spend before
       * locktime if set
       * </pre>
       *
       * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the externalKeyIds at the given index.
       */
      public com.google.protobuf.ByteString
          getExternalKeyIdsBytes(int index) {
        return externalKeyIds_.getByteString(index);
      }

      public static final int EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER = 3;
      private long externalMultisigThreshold_;
      /**
       * <code>int64 external_multisig_threshold = 3;</code>
       * @return The externalMultisigThreshold.
       */
      @java.lang.Override
      public long getExternalMultisigThreshold() {
        return externalMultisigThreshold_;
      }

      public static final int LOCK_TIME_FIELD_NUMBER = 4;
      private com.google.protobuf.Timestamp lockTime_;
      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       * @return Whether the lockTime field is set.
       */
      @java.lang.Override
      public boolean hasLockTime() {
        return lockTime_ != null;
      }
      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       * @return The lockTime.
       */
      @java.lang.Override
      public com.google.protobuf.Timestamp getLockTime() {
        return lockTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lockTime_;
      }
      /**
       * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
       */
      @java.lang.Override
      public com.google.protobuf.TimestampOrBuilder getLockTimeOrBuilder() {
        return getLockTime();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < internalKeyIds_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, internalKeyIds_.getRaw(i));
        }
        for (int i = 0; i < externalKeyIds_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, externalKeyIds_.getRaw(i));
        }
        if (externalMultisigThreshold_ != 0L) {
          output.writeInt64(3, externalMultisigThreshold_);
        }
        if (lockTime_ != null) {
          output.writeMessage(4, getLockTime());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < internalKeyIds_.size(); i++) {
            dataSize += computeStringSizeNoTag(internalKeyIds_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getInternalKeyIdsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < externalKeyIds_.size(); i++) {
            dataSize += computeStringSizeNoTag(externalKeyIds_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getExternalKeyIdsList().size();
        }
        if (externalMultisigThreshold_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, externalMultisigThreshold_);
        }
        if (lockTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getLockTime());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition)) {
          return super.equals(obj);
        }
        axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition other = (axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition) obj;

        if (!getInternalKeyIdsList()
            .equals(other.getInternalKeyIdsList())) return false;
        if (!getExternalKeyIdsList()
            .equals(other.getExternalKeyIdsList())) return false;
        if (getExternalMultisigThreshold()
            != other.getExternalMultisigThreshold()) return false;
        if (hasLockTime() != other.hasLockTime()) return false;
        if (hasLockTime()) {
          if (!getLockTime()
              .equals(other.getLockTime())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getInternalKeyIdsCount() > 0) {
          hash = (37 * hash) + INTERNAL_KEY_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getInternalKeyIdsList().hashCode();
        }
        if (getExternalKeyIdsCount() > 0) {
          hash = (37 * hash) + EXTERNAL_KEY_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getExternalKeyIdsList().hashCode();
        }
        hash = (37 * hash) + EXTERNAL_MULTISIG_THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getExternalMultisigThreshold());
        if (hasLockTime()) {
          hash = (37 * hash) + LOCK_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getLockTime().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition)
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.class, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder.class);
        }

        // Construct using axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          internalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          externalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          externalMultisigThreshold_ = 0L;

          if (lockTimeBuilder_ == null) {
            lockTime_ = null;
          } else {
            lockTime_ = null;
            lockTimeBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor;
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getDefaultInstanceForType() {
          return axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.getDefaultInstance();
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition build() {
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition buildPartial() {
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition result = new axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            internalKeyIds_ = internalKeyIds_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.internalKeyIds_ = internalKeyIds_;
          if (((bitField0_ & 0x00000002) != 0)) {
            externalKeyIds_ = externalKeyIds_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.externalKeyIds_ = externalKeyIds_;
          result.externalMultisigThreshold_ = externalMultisigThreshold_;
          if (lockTimeBuilder_ == null) {
            result.lockTime_ = lockTime_;
          } else {
            result.lockTime_ = lockTimeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition) {
            return mergeFrom((axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition other) {
          if (other == axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.getDefaultInstance()) return this;
          if (!other.internalKeyIds_.isEmpty()) {
            if (internalKeyIds_.isEmpty()) {
              internalKeyIds_ = other.internalKeyIds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInternalKeyIdsIsMutable();
              internalKeyIds_.addAll(other.internalKeyIds_);
            }
            onChanged();
          }
          if (!other.externalKeyIds_.isEmpty()) {
            if (externalKeyIds_.isEmpty()) {
              externalKeyIds_ = other.externalKeyIds_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureExternalKeyIdsIsMutable();
              externalKeyIds_.addAll(other.externalKeyIds_);
            }
            onChanged();
          }
          if (other.getExternalMultisigThreshold() != 0L) {
            setExternalMultisigThreshold(other.getExternalMultisigThreshold());
          }
          if (other.hasLockTime()) {
            mergeLockTime(other.getLockTime());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList internalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureInternalKeyIdsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            internalKeyIds_ = new com.google.protobuf.LazyStringArrayList(internalKeyIds_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return A list containing the internalKeyIds.
         */
        public com.google.protobuf.ProtocolStringList
            getInternalKeyIdsList() {
          return internalKeyIds_.getUnmodifiableView();
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return The count of internalKeyIds.
         */
        public int getInternalKeyIdsCount() {
          return internalKeyIds_.size();
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index of the element to return.
         * @return The internalKeyIds at the given index.
         */
        public java.lang.String getInternalKeyIds(int index) {
          return internalKeyIds_.get(index);
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index of the value to return.
         * @return The bytes of the internalKeyIds at the given index.
         */
        public com.google.protobuf.ByteString
            getInternalKeyIdsBytes(int index) {
          return internalKeyIds_.getByteString(index);
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index to set the value at.
         * @param value The internalKeyIds to set.
         * @return This builder for chaining.
         */
        public Builder setInternalKeyIds(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureInternalKeyIdsIsMutable();
          internalKeyIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param value The internalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addInternalKeyIds(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureInternalKeyIdsIsMutable();
          internalKeyIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param values The internalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addAllInternalKeyIds(
            java.lang.Iterable<java.lang.String> values) {
          ensureInternalKeyIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, internalKeyIds_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return This builder for chaining.
         */
        public Builder clearInternalKeyIds() {
          internalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * internal_key_ids lists the internal key IDs that one of which has to sign
         * regardless of locktime
         * </pre>
         *
         * <code>repeated string internal_key_ids = 1 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param value The bytes of the internalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addInternalKeyIdsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureInternalKeyIdsIsMutable();
          internalKeyIds_.add(value);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList externalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureExternalKeyIdsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            externalKeyIds_ = new com.google.protobuf.LazyStringArrayList(externalKeyIds_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return A list containing the externalKeyIds.
         */
        public com.google.protobuf.ProtocolStringList
            getExternalKeyIdsList() {
          return externalKeyIds_.getUnmodifiableView();
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return The count of externalKeyIds.
         */
        public int getExternalKeyIdsCount() {
          return externalKeyIds_.size();
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index of the element to return.
         * @return The externalKeyIds at the given index.
         */
        public java.lang.String getExternalKeyIds(int index) {
          return externalKeyIds_.get(index);
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index of the value to return.
         * @return The bytes of the externalKeyIds at the given index.
         */
        public com.google.protobuf.ByteString
            getExternalKeyIdsBytes(int index) {
          return externalKeyIds_.getByteString(index);
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param index The index to set the value at.
         * @param value The externalKeyIds to set.
         * @return This builder for chaining.
         */
        public Builder setExternalKeyIds(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureExternalKeyIdsIsMutable();
          externalKeyIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param value The externalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addExternalKeyIds(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureExternalKeyIdsIsMutable();
          externalKeyIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param values The externalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addAllExternalKeyIds(
            java.lang.Iterable<java.lang.String> values) {
          ensureExternalKeyIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, externalKeyIds_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @return This builder for chaining.
         */
        public Builder clearExternalKeyIds() {
          externalKeyIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * external_key_ids lists the external key IDs that
         * external_multisig_threshold of which have to sign to spend before
         * locktime if set
         * </pre>
         *
         * <code>repeated string external_key_ids = 2 [(.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
         * @param value The bytes of the externalKeyIds to add.
         * @return This builder for chaining.
         */
        public Builder addExternalKeyIdsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureExternalKeyIdsIsMutable();
          externalKeyIds_.add(value);
          onChanged();
          return this;
        }

        private long externalMultisigThreshold_ ;
        /**
         * <code>int64 external_multisig_threshold = 3;</code>
         * @return The externalMultisigThreshold.
         */
        @java.lang.Override
        public long getExternalMultisigThreshold() {
          return externalMultisigThreshold_;
        }
        /**
         * <code>int64 external_multisig_threshold = 3;</code>
         * @param value The externalMultisigThreshold to set.
         * @return This builder for chaining.
         */
        public Builder setExternalMultisigThreshold(long value) {
          
          externalMultisigThreshold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 external_multisig_threshold = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearExternalMultisigThreshold() {
          
          externalMultisigThreshold_ = 0L;
          onChanged();
          return this;
        }

        private com.google.protobuf.Timestamp lockTime_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> lockTimeBuilder_;
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         * @return Whether the lockTime field is set.
         */
        public boolean hasLockTime() {
          return lockTimeBuilder_ != null || lockTime_ != null;
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         * @return The lockTime.
         */
        public com.google.protobuf.Timestamp getLockTime() {
          if (lockTimeBuilder_ == null) {
            return lockTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lockTime_;
          } else {
            return lockTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public Builder setLockTime(com.google.protobuf.Timestamp value) {
          if (lockTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lockTime_ = value;
            onChanged();
          } else {
            lockTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public Builder setLockTime(
            com.google.protobuf.Timestamp.Builder builderForValue) {
          if (lockTimeBuilder_ == null) {
            lockTime_ = builderForValue.build();
            onChanged();
          } else {
            lockTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public Builder mergeLockTime(com.google.protobuf.Timestamp value) {
          if (lockTimeBuilder_ == null) {
            if (lockTime_ != null) {
              lockTime_ =
                com.google.protobuf.Timestamp.newBuilder(lockTime_).mergeFrom(value).buildPartial();
            } else {
              lockTime_ = value;
            }
            onChanged();
          } else {
            lockTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public Builder clearLockTime() {
          if (lockTimeBuilder_ == null) {
            lockTime_ = null;
            onChanged();
          } else {
            lockTime_ = null;
            lockTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public com.google.protobuf.Timestamp.Builder getLockTimeBuilder() {
          
          onChanged();
          return getLockTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        public com.google.protobuf.TimestampOrBuilder getLockTimeOrBuilder() {
          if (lockTimeBuilder_ != null) {
            return lockTimeBuilder_.getMessageOrBuilder();
          } else {
            return lockTime_ == null ?
                com.google.protobuf.Timestamp.getDefaultInstance() : lockTime_;
          }
        }
        /**
         * <code>.google.protobuf.Timestamp lock_time = 4 [(.gogoproto.stdtime) = true];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
            getLockTimeFieldBuilder() {
          if (lockTimeBuilder_ == null) {
            lockTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                    getLockTime(),
                    getParentForChildren(),
                    isClean());
            lockTime_ = null;
          }
          return lockTimeBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition)
      }

      // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition)
      private static final axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition();
      }

      public static axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SpendingCondition>
          PARSER = new com.google.protobuf.AbstractParser<SpendingCondition>() {
        @java.lang.Override
        public SpendingCondition parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpendingCondition(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SpendingCondition> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SpendingCondition> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    private volatile java.lang.Object address_;
    /**
     * <code>string address = 1;</code>
     * @return The address.
     */
    @java.lang.Override
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <code>string address = 1;</code>
     * @return The bytes for address.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROLE_FIELD_NUMBER = 2;
    private int role_;
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
     * @return The enum numeric value on the wire for role.
     */
    @java.lang.Override public int getRoleValue() {
      return role_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
     * @return The role.
     */
    @java.lang.Override public axelar.bitcoin.v1beta1.Types.AddressRole getRole() {
      @SuppressWarnings("deprecation")
      axelar.bitcoin.v1beta1.Types.AddressRole result = axelar.bitcoin.v1beta1.Types.AddressRole.valueOf(role_);
      return result == null ? axelar.bitcoin.v1beta1.Types.AddressRole.UNRECOGNIZED : result;
    }

    public static final int REDEEM_SCRIPT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString redeemScript_;
    /**
     * <code>bytes redeem_script = 3;</code>
     * @return The redeemScript.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRedeemScript() {
      return redeemScript_;
    }

    public static final int KEY_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object keyId_;
    /**
     * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The keyId.
     */
    @java.lang.Override
    public java.lang.String getKeyId() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyId_ = s;
        return s;
      }
    }
    /**
     * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
     * @return The bytes for keyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyIdBytes() {
      java.lang.Object ref = keyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAX_SIG_COUNT_FIELD_NUMBER = 5;
    private int maxSigCount_;
    /**
     * <code>uint32 max_sig_count = 5;</code>
     * @return The maxSigCount.
     */
    @java.lang.Override
    public int getMaxSigCount() {
      return maxSigCount_;
    }

    public static final int SPENDING_CONDITION_FIELD_NUMBER = 6;
    private axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition spendingCondition_;
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     * @return Whether the spendingCondition field is set.
     */
    @java.lang.Override
    public boolean hasSpendingCondition() {
      return spendingCondition_ != null;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     * @return The spendingCondition.
     */
    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getSpendingCondition() {
      return spendingCondition_ == null ? axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.getDefaultInstance() : spendingCondition_;
    }
    /**
     * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
     */
    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder getSpendingConditionOrBuilder() {
      return getSpendingCondition();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
      }
      if (role_ != axelar.bitcoin.v1beta1.Types.AddressRole.ADDRESS_ROLE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, role_);
      }
      if (!redeemScript_.isEmpty()) {
        output.writeBytes(3, redeemScript_);
      }
      if (!getKeyIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, keyId_);
      }
      if (maxSigCount_ != 0) {
        output.writeUInt32(5, maxSigCount_);
      }
      if (spendingCondition_ != null) {
        output.writeMessage(6, getSpendingCondition());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
      }
      if (role_ != axelar.bitcoin.v1beta1.Types.AddressRole.ADDRESS_ROLE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, role_);
      }
      if (!redeemScript_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, redeemScript_);
      }
      if (!getKeyIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, keyId_);
      }
      if (maxSigCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxSigCount_);
      }
      if (spendingCondition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSpendingCondition());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.bitcoin.v1beta1.Types.AddressInfo)) {
        return super.equals(obj);
      }
      axelar.bitcoin.v1beta1.Types.AddressInfo other = (axelar.bitcoin.v1beta1.Types.AddressInfo) obj;

      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (role_ != other.role_) return false;
      if (!getRedeemScript()
          .equals(other.getRedeemScript())) return false;
      if (!getKeyId()
          .equals(other.getKeyId())) return false;
      if (getMaxSigCount()
          != other.getMaxSigCount()) return false;
      if (hasSpendingCondition() != other.hasSpendingCondition()) return false;
      if (hasSpendingCondition()) {
        if (!getSpendingCondition()
            .equals(other.getSpendingCondition())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + role_;
      hash = (37 * hash) + REDEEM_SCRIPT_FIELD_NUMBER;
      hash = (53 * hash) + getRedeemScript().hashCode();
      hash = (37 * hash) + KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyId().hashCode();
      hash = (37 * hash) + MAX_SIG_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSigCount();
      if (hasSpendingCondition()) {
        hash = (37 * hash) + SPENDING_CONDITION_FIELD_NUMBER;
        hash = (53 * hash) + getSpendingCondition().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.AddressInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.AddressInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AddressInfo is a wrapper containing the Bitcoin P2WSH address, it's
     * corresponding script and the underlying key
     * </pre>
     *
     * Protobuf type {@code axelar.bitcoin.v1beta1.AddressInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.AddressInfo)
        axelar.bitcoin.v1beta1.Types.AddressInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.AddressInfo.class, axelar.bitcoin.v1beta1.Types.AddressInfo.Builder.class);
      }

      // Construct using axelar.bitcoin.v1beta1.Types.AddressInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        address_ = "";

        role_ = 0;

        redeemScript_ = com.google.protobuf.ByteString.EMPTY;

        keyId_ = "";

        maxSigCount_ = 0;

        if (spendingConditionBuilder_ == null) {
          spendingCondition_ = null;
        } else {
          spendingCondition_ = null;
          spendingConditionBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.AddressInfo getDefaultInstanceForType() {
        return axelar.bitcoin.v1beta1.Types.AddressInfo.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.AddressInfo build() {
        axelar.bitcoin.v1beta1.Types.AddressInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.AddressInfo buildPartial() {
        axelar.bitcoin.v1beta1.Types.AddressInfo result = new axelar.bitcoin.v1beta1.Types.AddressInfo(this);
        result.address_ = address_;
        result.role_ = role_;
        result.redeemScript_ = redeemScript_;
        result.keyId_ = keyId_;
        result.maxSigCount_ = maxSigCount_;
        if (spendingConditionBuilder_ == null) {
          result.spendingCondition_ = spendingCondition_;
        } else {
          result.spendingCondition_ = spendingConditionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.bitcoin.v1beta1.Types.AddressInfo) {
          return mergeFrom((axelar.bitcoin.v1beta1.Types.AddressInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.AddressInfo other) {
        if (other == axelar.bitcoin.v1beta1.Types.AddressInfo.getDefaultInstance()) return this;
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        if (other.role_ != 0) {
          setRoleValue(other.getRoleValue());
        }
        if (other.getRedeemScript() != com.google.protobuf.ByteString.EMPTY) {
          setRedeemScript(other.getRedeemScript());
        }
        if (!other.getKeyId().isEmpty()) {
          keyId_ = other.keyId_;
          onChanged();
        }
        if (other.getMaxSigCount() != 0) {
          setMaxSigCount(other.getMaxSigCount());
        }
        if (other.hasSpendingCondition()) {
          mergeSpendingCondition(other.getSpendingCondition());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.bitcoin.v1beta1.Types.AddressInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.bitcoin.v1beta1.Types.AddressInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <code>string address = 1;</code>
       * @return The address.
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string address = 1;</code>
       * @return The bytes for address.
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string address = 1;</code>
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <code>string address = 1;</code>
       * @param value The bytes for address to set.
       * @return This builder for chaining.
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }

      private int role_ = 0;
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
       * @return The enum numeric value on the wire for role.
       */
      @java.lang.Override public int getRoleValue() {
        return role_;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
       * @param value The enum numeric value on the wire for role to set.
       * @return This builder for chaining.
       */
      public Builder setRoleValue(int value) {
        
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
       * @return The role.
       */
      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.AddressRole getRole() {
        @SuppressWarnings("deprecation")
        axelar.bitcoin.v1beta1.Types.AddressRole result = axelar.bitcoin.v1beta1.Types.AddressRole.valueOf(role_);
        return result == null ? axelar.bitcoin.v1beta1.Types.AddressRole.UNRECOGNIZED : result;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
       * @param value The role to set.
       * @return This builder for chaining.
       */
      public Builder setRole(axelar.bitcoin.v1beta1.Types.AddressRole value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        role_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressRole role = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRole() {
        
        role_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString redeemScript_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes redeem_script = 3;</code>
       * @return The redeemScript.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRedeemScript() {
        return redeemScript_;
      }
      /**
       * <code>bytes redeem_script = 3;</code>
       * @param value The redeemScript to set.
       * @return This builder for chaining.
       */
      public Builder setRedeemScript(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        redeemScript_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes redeem_script = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRedeemScript() {
        
        redeemScript_ = getDefaultInstance().getRedeemScript();
        onChanged();
        return this;
      }

      private java.lang.Object keyId_ = "";
      /**
       * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The keyId.
       */
      public java.lang.String getKeyId() {
        java.lang.Object ref = keyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return The bytes for keyId.
       */
      public com.google.protobuf.ByteString
          getKeyIdBytes() {
        java.lang.Object ref = keyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param value The keyId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyId() {
        
        keyId_ = getDefaultInstance().getKeyId();
        onChanged();
        return this;
      }
      /**
       * <code>string key_id = 4 [(.gogoproto.customname) = "KeyID", (.gogoproto.casttype) = "github.com/axelarnetwork/axelar-core/x/tss/exported.KeyID"];</code>
       * @param value The bytes for keyId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyId_ = value;
        onChanged();
        return this;
      }

      private int maxSigCount_ ;
      /**
       * <code>uint32 max_sig_count = 5;</code>
       * @return The maxSigCount.
       */
      @java.lang.Override
      public int getMaxSigCount() {
        return maxSigCount_;
      }
      /**
       * <code>uint32 max_sig_count = 5;</code>
       * @param value The maxSigCount to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSigCount(int value) {
        
        maxSigCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_sig_count = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSigCount() {
        
        maxSigCount_ = 0;
        onChanged();
        return this;
      }

      private axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition spendingCondition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder> spendingConditionBuilder_;
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       * @return Whether the spendingCondition field is set.
       */
      public boolean hasSpendingCondition() {
        return spendingConditionBuilder_ != null || spendingCondition_ != null;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       * @return The spendingCondition.
       */
      public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition getSpendingCondition() {
        if (spendingConditionBuilder_ == null) {
          return spendingCondition_ == null ? axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.getDefaultInstance() : spendingCondition_;
        } else {
          return spendingConditionBuilder_.getMessage();
        }
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public Builder setSpendingCondition(axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition value) {
        if (spendingConditionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spendingCondition_ = value;
          onChanged();
        } else {
          spendingConditionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public Builder setSpendingCondition(
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder builderForValue) {
        if (spendingConditionBuilder_ == null) {
          spendingCondition_ = builderForValue.build();
          onChanged();
        } else {
          spendingConditionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public Builder mergeSpendingCondition(axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition value) {
        if (spendingConditionBuilder_ == null) {
          if (spendingCondition_ != null) {
            spendingCondition_ =
              axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.newBuilder(spendingCondition_).mergeFrom(value).buildPartial();
          } else {
            spendingCondition_ = value;
          }
          onChanged();
        } else {
          spendingConditionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public Builder clearSpendingCondition() {
        if (spendingConditionBuilder_ == null) {
          spendingCondition_ = null;
          onChanged();
        } else {
          spendingCondition_ = null;
          spendingConditionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder getSpendingConditionBuilder() {
        
        onChanged();
        return getSpendingConditionFieldBuilder().getBuilder();
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      public axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder getSpendingConditionOrBuilder() {
        if (spendingConditionBuilder_ != null) {
          return spendingConditionBuilder_.getMessageOrBuilder();
        } else {
          return spendingCondition_ == null ?
              axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.getDefaultInstance() : spendingCondition_;
        }
      }
      /**
       * <code>.axelar.bitcoin.v1beta1.AddressInfo.SpendingCondition spending_condition = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder> 
          getSpendingConditionFieldBuilder() {
        if (spendingConditionBuilder_ == null) {
          spendingConditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingCondition.Builder, axelar.bitcoin.v1beta1.Types.AddressInfo.SpendingConditionOrBuilder>(
                  getSpendingCondition(),
                  getParentForChildren(),
                  isClean());
          spendingCondition_ = null;
        }
        return spendingConditionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.AddressInfo)
    }

    // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.AddressInfo)
    private static final axelar.bitcoin.v1beta1.Types.AddressInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.AddressInfo();
    }

    public static axelar.bitcoin.v1beta1.Types.AddressInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddressInfo>
        PARSER = new com.google.protobuf.AbstractParser<AddressInfo>() {
      @java.lang.Override
      public AddressInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AddressInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddressInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddressInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.AddressInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axelar.bitcoin.v1beta1.Network)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code axelar.bitcoin.v1beta1.Network}
   */
  public static final class Network extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axelar.bitcoin.v1beta1.Network)
      NetworkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Network.newBuilder() to construct.
    private Network(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Network() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Network();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Network(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_Network_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_Network_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axelar.bitcoin.v1beta1.Types.Network.class, axelar.bitcoin.v1beta1.Types.Network.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axelar.bitcoin.v1beta1.Types.Network)) {
        return super.equals(obj);
      }
      axelar.bitcoin.v1beta1.Types.Network other = (axelar.bitcoin.v1beta1.Types.Network) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axelar.bitcoin.v1beta1.Types.Network parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axelar.bitcoin.v1beta1.Types.Network prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axelar.bitcoin.v1beta1.Network}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axelar.bitcoin.v1beta1.Network)
        axelar.bitcoin.v1beta1.Types.NetworkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_Network_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_Network_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axelar.bitcoin.v1beta1.Types.Network.class, axelar.bitcoin.v1beta1.Types.Network.Builder.class);
      }

      // Construct using axelar.bitcoin.v1beta1.Types.Network.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axelar.bitcoin.v1beta1.Types.internal_static_axelar_bitcoin_v1beta1_Network_descriptor;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.Network getDefaultInstanceForType() {
        return axelar.bitcoin.v1beta1.Types.Network.getDefaultInstance();
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.Network build() {
        axelar.bitcoin.v1beta1.Types.Network result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axelar.bitcoin.v1beta1.Types.Network buildPartial() {
        axelar.bitcoin.v1beta1.Types.Network result = new axelar.bitcoin.v1beta1.Types.Network(this);
        result.name_ = name_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axelar.bitcoin.v1beta1.Types.Network) {
          return mergeFrom((axelar.bitcoin.v1beta1.Types.Network)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axelar.bitcoin.v1beta1.Types.Network other) {
        if (other == axelar.bitcoin.v1beta1.Types.Network.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axelar.bitcoin.v1beta1.Types.Network parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axelar.bitcoin.v1beta1.Types.Network) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axelar.bitcoin.v1beta1.Network)
    }

    // @@protoc_insertion_point(class_scope:axelar.bitcoin.v1beta1.Network)
    private static final axelar.bitcoin.v1beta1.Types.Network DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axelar.bitcoin.v1beta1.Types.Network();
    }

    public static axelar.bitcoin.v1beta1.Types.Network getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Network>
        PARSER = new com.google.protobuf.AbstractParser<Network>() {
      @java.lang.Override
      public Network parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Network(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Network> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Network> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axelar.bitcoin.v1beta1.Types.Network getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_SignedTx_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_OutPointInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_AddressInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axelar_bitcoin_v1beta1_Network_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axelar_bitcoin_v1beta1_Network_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"axelar/bitcoin/v1beta1/types.proto\022\026ax" +
      "elar.bitcoin.v1beta1\032\024gogoproto/gogo.pro" +
      "to\032\037google/protobuf/timestamp.proto\"\360\005\n\n" +
      "UnsignedTx\022,\n\004type\030\001 \001(\0162\036.axelar.bitcoi" +
      "n.v1beta1.TxType\022\n\n\002tx\030\002 \001(\014\022;\n\004info\030\003 \001" +
      "(\0132\'.axelar.bitcoin.v1beta1.UnsignedTx.I" +
      "nfoB\004\310\336\037\000\0220\n\006status\030\004 \001(\0162 .axelar.bitco" +
      "in.v1beta1.TxStatus\022\035\n\025confirmation_requ" +
      "ired\030\005 \001(\010\022\035\n\025anyone_can_spend_vout\030\006 \001(" +
      "\r\022Z\n\023prev_aborted_key_id\030\007 \001(\tB=\372\336\0379gith" +
      "ub.com/axelarnetwork/axelar-core/x/tss/e" +
      "xported.KeyID\022H\n\030internal_transfer_amoun" +
      "t\030\010 \001(\003B&\372\336\037\"github.com/btcsuite/btcutil" +
      ".Amount\032\324\002\n\004Info\022\022\n\nrotate_key\030\001 \001(\010\022L\n\013" +
      "input_infos\030\002 \003(\01321.axelar.bitcoin.v1bet" +
      "a1.UnsignedTx.Info.InputInfoB\004\310\336\037\000\032\351\001\n\tI" +
      "nputInfo\022`\n\020sig_requirements\030\001 \003(\0132@.axe" +
      "lar.bitcoin.v1beta1.UnsignedTx.Info.Inpu" +
      "tInfo.SigRequirementB\004\310\336\037\000\032z\n\016SigRequire" +
      "ment\022V\n\006key_id\030\001 \001(\tBF\342\336\037\005KeyID\372\336\0379githu" +
      "b.com/axelarnetwork/axelar-core/x/tss/ex" +
      "ported.KeyID\022\020\n\010sig_hash\030\002 \001(\014\"\237\001\n\010Signe" +
      "dTx\022,\n\004type\030\001 \001(\0162\036.axelar.bitcoin.v1bet" +
      "a1.TxType\022\n\n\002tx\030\002 \001(\014\022\033\n\023prev_signed_tx_" +
      "hash\030\003 \001(\014\022\035\n\025confirmation_required\030\004 \001(" +
      "\010\022\035\n\025anyone_can_spend_vout\030\005 \001(\r\"p\n\014OutP" +
      "ointInfo\022\021\n\tout_point\030\001 \001(\t\0226\n\006amount\030\002 " +
      "\001(\003B&\372\336\037\"github.com/btcsuite/btcutil.Amo" +
      "unt\022\017\n\007address\030\003 \001(\t:\004\230\240\037\000\"\314\004\n\013AddressIn" +
      "fo\022\017\n\007address\030\001 \001(\t\0221\n\004role\030\002 \001(\0162#.axel" +
      "ar.bitcoin.v1beta1.AddressRole\022\025\n\rredeem" +
      "_script\030\003 \001(\014\022V\n\006key_id\030\004 \001(\tBF\342\336\037\005KeyID" +
      "\372\336\0379github.com/axelarnetwork/axelar-core" +
      "/x/tss/exported.KeyID\022\025\n\rmax_sig_count\030\005" +
      " \001(\r\022Q\n\022spending_condition\030\006 \001(\01325.axela" +
      "r.bitcoin.v1beta1.AddressInfo.SpendingCo" +
      "ndition\032\237\002\n\021SpendingCondition\022W\n\020interna" +
      "l_key_ids\030\001 \003(\tB=\372\336\0379github.com/axelarne" +
      "twork/axelar-core/x/tss/exported.KeyID\022W" +
      "\n\020external_key_ids\030\002 \003(\tB=\372\336\0379github.com" +
      "/axelarnetwork/axelar-core/x/tss/exporte" +
      "d.KeyID\022#\n\033external_multisig_threshold\030\003" +
      " \001(\003\0223\n\tlock_time\030\004 \001(\0132\032.google.protobu" +
      "f.TimestampB\004\220\337\037\001\"\027\n\007Network\022\014\n\004name\030\001 \001" +
      "(\t*\326\001\n\010TxStatus\0222\n\025TX_STATUS_UNSPECIFIED" +
      "\020\000\032\027\212\235 \023TxStatusUnspecified\022\"\n\021TX_STATUS" +
      "_CREATED\020\001\032\013\212\235 \007Created\022\"\n\021TX_STATUS_SIG" +
      "NING\020\002\032\013\212\235 \007Signing\022\"\n\021TX_STATUS_ABORTED" +
      "\020\003\032\013\212\235 \007Aborted\022 \n\020TX_STATUS_SIGNED\020\004\032\n\212" +
      "\235 \006Signed\032\010\210\243\036\000\250\244\036\001*\336\001\n\006TxType\022.\n\023TX_TYP" +
      "E_UNSPECIFIED\020\000\032\025\212\235 \021TxTypeUnspecified\0229" +
      "\n\034TX_TYPE_MASTER_CONSOLIDATION\020\001\032\027\212\235 \023Ma" +
      "sterConsolidation\022?\n\037TX_TYPE_SECONDARY_C" +
      "ONSOLIDATION\020\002\032\032\212\235 \026SecondaryConsolidati" +
      "on\022\036\n\016TX_TYPE_RESCUE\020\003\032\n\212\235 \006Rescue\032\010\210\243\036\000" +
      "\250\244\036\001*\302\001\n\rOutPointState\022)\n\033OUT_POINT_STAT" +
      "E_UNSPECIFIED\020\000\032\010\212\235 \004None\022(\n\027OUT_POINT_S" +
      "TATE_PENDING\020\001\032\013\212\235 \007Pending\022,\n\031OUT_POINT" +
      "_STATE_CONFIRMED\020\002\032\r\212\235 \tConfirmed\022$\n\025OUT" +
      "_POINT_STATE_SPENT\020\003\032\t\212\235 \005Spent\032\010\210\243\036\001\250\244\036" +
      "\001*\231\001\n\013AddressRole\022&\n\030ADDRESS_ROLE_UNSPEC" +
      "IFIED\020\000\032\010\212\235 \004None\022%\n\024ADDRESS_ROLE_DEPOSI" +
      "T\020\001\032\013\212\235 \007Deposit\0221\n\032ADDRESS_ROLE_CONSOLI" +
      "DATION\020\002\032\021\212\235 \rConsolidation\032\010\210\243\036\000\250\244\036\001B:Z" +
      "4github.com/axelarnetwork/axelar-core/x/" +
      "bitcoin/types\310\341\036\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor,
        new java.lang.String[] { "Type", "Tx", "Info", "Status", "ConfirmationRequired", "AnyoneCanSpendVout", "PrevAbortedKeyId", "InternalTransferAmount", });
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor =
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_descriptor.getNestedTypes().get(0);
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor,
        new java.lang.String[] { "RotateKey", "InputInfos", });
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor =
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_descriptor.getNestedTypes().get(0);
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor,
        new java.lang.String[] { "SigRequirements", });
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor =
      internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_descriptor.getNestedTypes().get(0);
    internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_UnsignedTx_Info_InputInfo_SigRequirement_descriptor,
        new java.lang.String[] { "KeyId", "SigHash", });
    internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axelar_bitcoin_v1beta1_SignedTx_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_SignedTx_descriptor,
        new java.lang.String[] { "Type", "Tx", "PrevSignedTxHash", "ConfirmationRequired", "AnyoneCanSpendVout", });
    internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axelar_bitcoin_v1beta1_OutPointInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_OutPointInfo_descriptor,
        new java.lang.String[] { "OutPoint", "Amount", "Address", });
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor,
        new java.lang.String[] { "Address", "Role", "RedeemScript", "KeyId", "MaxSigCount", "SpendingCondition", });
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor =
      internal_static_axelar_bitcoin_v1beta1_AddressInfo_descriptor.getNestedTypes().get(0);
    internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_AddressInfo_SpendingCondition_descriptor,
        new java.lang.String[] { "InternalKeyIds", "ExternalKeyIds", "ExternalMultisigThreshold", "LockTime", });
    internal_static_axelar_bitcoin_v1beta1_Network_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_axelar_bitcoin_v1beta1_Network_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axelar_bitcoin_v1beta1_Network_descriptor,
        new java.lang.String[] { "Name", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.casttype);
    registry.add(com.google.protobuf2.GoGoProtos.customname);
    registry.add(com.google.protobuf2.GoGoProtos.enumvalueCustomname);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumPrefix);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoEnumStringer);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGettersAll);
    registry.add(com.google.protobuf2.GoGoProtos.goprotoStringer);
    registry.add(com.google.protobuf2.GoGoProtos.nullable);
    registry.add(com.google.protobuf2.GoGoProtos.stdtime);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
